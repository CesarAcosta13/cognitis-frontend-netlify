{"version":3,"sources":["components/WizardComponents/base/cognitisLogo-Texto.png","views/LoginUsers/Login/imageProductivity.jpeg","views/LoginUsers/Base/cognitis-logo_2020.png","components/CatologComponents/Navbar/cognitis-logo_2020.png","components/CatologComponents/Navbar/companylogo.png","views/CatalogScreens/ProductView/iphone.jpg","views/CatalogScreens/ProductView/iphone2.jpg","views/CatalogScreens/ProductView/iphone3.jpg","views/CatalogScreens/NewProduct/iphone.jpg","views/CatalogScreens/NewProduct/iphone2.jpg","views/CatalogScreens/NewProduct/iphone3.jpg","views/CatalogScreens/EditProduct/iphone.jpg","views/CatalogScreens/EditProduct/iphone2.jpg","views/CatalogScreens/EditProduct/iphone3.jpg","components/WizardComponents/base/logo.js","components/WizardComponents/base/welcome.js","views/Layouts/WizardLayout/index.js","views/WizardScreens/Login/index.js","views/WizardScreens/Welcomescreen/index.js","views/WizardScreens/Product/index.js","views/WizardScreens/Registeruser/index.js","views/WizardScreens/SelectCountry/index.js","views/WizardScreens/VerificationCode/index.js","views/LoginUsers/Base/navbar.js","views/LoginUsers/Login/index.js","components/CatologComponents/Navbar/Subnavbar.js","components/CatologComponents/Navbar/index.js","components/CatologComponents/Sidebar/Sidebar.js","views/Layouts/CatalogLayout/index.js","views/CatalogScreens/SearchProducts/index.js","views/CatalogScreens/ProductView/carousel.js","views/CatalogScreens/ProductView/indumentaryProduct.js","views/CatalogScreens/ProductView/index.js","views/CatalogScreens/NewProduct/carousel.js","views/CatalogScreens/NewProduct/retailProduct.js","views/CatalogScreens/NewProduct/index.js","views/CatalogScreens/EditProduct/carousel.js","views/CatalogScreens/EditProduct/retailProduct.js","views/CatalogScreens/EditProduct/index.js","messages.js","views/Layouts/RegisterCompanyLayout/layoutsucursal.js","views/RegisterCompanyScreen/DashboardContainer.js","components/RegisterCompaniesComponents/formulario/formulario.jsx","views/Layouts/RegisterCompanyLayout/index.js","views/RegisterCompanyScreen/CreateCompanyContaniener.js","components/RegisterCompaniesComponents/formulario/formSuc.jsx","views/RegisterCompanyScreen/CreateSucursalContainer.js","views/RegisterCompanyScreen/RegisterSucursalContainer/RegisterSucursalContanier.js","components/RegisterCompaniesComponents/formulario/formHeadCompany.jsx","views/RegisterCompanyScreen/RegisterHeadCompanyContainer/RegisterHeadCompany.js","views/RegisterCompanyScreen/RegisterCompanyContainer/RegisterCompanyContainer.js","components/CatologComponents/test/formtest.js","App.js","index.js"],"names":["module","exports","Logo","Col","lg","md","sm","src","logo","alt","className","Welcome","id","wrapperStyles","backgroundImage","backgroundPosition","backgroundSize","width","height","WizardLayout","props","style","children","eye","Login","handleInputChange","event","setState","target","name","value","togglePasswordVisiblity","passwordShown","state","togglePasswordConfirmVisiblity","passwordConfirmShown","toggle","tooltipOpen","handleClick","changePassword","newPass","createPassword","history","push","isEmailEmpty","userInfo","email","newPassConfirm","goodMessage","matchMessage","this","lengthRight","length","controlCharacters","upperRight","test","controlUppercase","lowerRight","controlLowercase","numberRight","controlNumber","specialRight","controlSpecial","controlInputPass","required","type","placeholder","onChange","controlGoodMessage","controlInputPassConfirm","controlMatchMessage","controlCreatePassButton","Button","color","onClick","disabled","to","Container","fluid","Row","xs","marginBottom","Card","FormGroup","Label","Tooltip","placement","isOpen","InputGroup","justifyContent","cursor","for","React","Component","withRouter","Welcomescreen","changeLanguage","useState","dropdownOpen","setDropdownOpen","Dropdown","prevState","DropdownToggle","caret","DropdownMenu","DropdownItem","marginTop","borderColor","Product","c1","c2","c3","product","data","size","offset","body","row","fontSize","CustomInput","checked","console","log","isChecked","isChecked2","isChecked3","changeProduct","verifyingEmail","setVerifyingEmail","showErrorMessage","setShowErrorMessage","adress","sendData","axios","post","user_mail","then","a","res","changeCodeTime","verificationCode","expireAt","catch","err","document","querySelector","Input","changeEmail","InputGroupAddon","addonType","active","alreadyUsed","error","Spinner","sendingData","setSendingData","controlNextButton","country","user_name","user_password","password","user_passwordExpired","passwordExpired","user_branch_office_house_id","users_role_id","handleChangeCountry","map","key","code","setCode","invalidCode","setInvalidCode","codeVerification","maxLength","Navbar","light","expand","NavbarBrand","href","imagen","Collapse","navbar","Nav","NavbarText","LoginUsers","stateButton","setStateButton","incorrectCredential","setIncorrectCredential","failedAttempts","setFailedAttempts","maximiumAttemptsExceeded","setMaximiumAttemptsExceeded","btnLogin","setBtnLogin","inputChange","handleChange","inputEmail","getElementById","inputPassword","controlButtonLogin","incorrectCredentialActions","put","user","getData","mail","userExist","userFound","margin","padding","marginLeft","Form","check","paddingBottom","imagenProductivity","Subnavbar","variant","Toggle","aria-controls","Link","CNavbars","collapseOnSelect","bg","inline","Brand","companylogo","FormControl","Append","Text","NavDropdown","title","Item","Divider","Sidebar","iconShape","wrapperLayoutStyles","minHeight","pageContentStyles","display","contentContainerStyles","textAling","overflow","CatalogLayout","SearchProducts","resultSearch","setResults","product_id","product_name","product_brand","product_providers","category","product_type","datosPeticion","setDatosPeticion","Header","Control","parseInt","getResult","as","Table","bordered","striped","hover","product_is_dollar","product_status","Pagination","Prev","Next","items","iphone","altText","caption","iphone2","iphone3","CarouselComponent","activeIndex","setActiveIndex","animating","setAnimating","next","nextIndex","previous","slides","img","CarouselItem","onExiting","onExited","CarouselCaption","captionText","captionHeader","Carousel","CarouselIndicators","onClickHandler","newIndex","CarouselControl","direction","directionText","IndumentaryProduct","prop","form","product_curve","product_season","product_color","ProductView","product_description","product_in_ecommerce","product_unit","product_vol","product_package","product_package_to_client","product_max_margin","product_min_margin","product_list_price","product_bonification","product_price_bonification","product_freight_cost","product_accountant_type","product_accountant_account","product_material","product_origin","product_shipping","product_warranty","product_barcode","product_category","product_industry_id","producto","setProducto","id_product","match","params","useEffect","get","setDataProduct","product_sku","provider_id","product_maker","industryMannage","product_provider_name","product_provider_code","ButtonToggle","border","UncontrolledCollapse","toggler","product_cost_neto_repo","product_tax_country","product_cost_with_tax","item","RetailProduct","errors","useForm","linea","message","segmento","service","serie","modelo","nTecnico","NewProduct","register","handleSubmit","visible","setVisible","onDismiss","Alert","onSubmit","e","codproduct","bultos","volumen","bultosClientes","margenMinimo","margenMaximo","costoNetoReposicion","parseFloat","bonificaciones","costoConBonificacion","costoFlete","tasaPais","costoActualConImp","precioLista","transformToNumber","preventDefault","innerRef","nameproduct","marca","dolarizado","tipo","estado","proveedor","label","material","origen","fabricante","envio","garantia","codbarra","unidad","step","backgroundColor","tipoContable","cuenta","productFantasy","codProduct","nameProduct","Descripción","Marca","Dolarizado","Categoria","Estado","Proveedor","CódProveedor","Unidad","Volumen","Bultos","BultoCliente","costoNetoRepo","Bonificaciones","CostoBonificacion","CostoFlete","cuentaContable","ntecnico","datostecnicos","Tipo","Bulto","productselect","setProductSelect","setProducts","arrayEdit","EditProduct","listproducts","ecommerce","messages","position","LayoutSucursal","DashboardContainer","Formulario","trigger","company","razonsocial","cuil","input","setInput","inputvalue","noerror","cantCompanies","window","location","valid","minLength","pattern","inductria","codPais","codArea","nrotel","fax","nameBank","cuentaBancaria","cbu","alias","RegisterCompanyLayout","CreateCompanyContainer","Formsuc","cantSuc","sucursal","RegisterSucursalContainer","setData","modalEliminar","setModalEliminar","selectsuc","setSucSelect","CardHeader","card","responsive","elemento","selectSucursal","Modal","ModalBody","ModalFooter","filter","FormHeadCompany","nameHeadCompany","Cuil","pais","nroFax","RegisterHeadCompany","RegisterCompanyContainer","selectcompany","setCompSelect","selectComp","elementoid","FormTest","App","setDatos","language","setLanguage","codeTime","dato","handleChangeLanguage","lang","handleChangePassword","locale","path","exact","time","handleChangePasswordExpired","component","Dashboard","CreateSucursalContainer","RegisterSucursalContanier","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8da601e3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cognitisLogo-Texto.a9e0a691.png\";","module.exports = __webpack_public_path__ + \"static/media/imageProductivity.e57d1676.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/cognitis-logo_2020.7d64c616.png\";","module.exports = __webpack_public_path__ + \"static/media/cognitis-logo_2020.7d64c616.png\";","module.exports = __webpack_public_path__ + \"static/media/companylogo.28f9cad9.png\";","module.exports = __webpack_public_path__ + \"static/media/iphone.f642fc60.jpg\";","module.exports = __webpack_public_path__ + \"static/media/iphone2.cd8164e4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/iphone3.5eba7e23.jpg\";","module.exports = __webpack_public_path__ + \"static/media/iphone.f642fc60.jpg\";","module.exports = __webpack_public_path__ + \"static/media/iphone2.cd8164e4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/iphone3.5eba7e23.jpg\";","module.exports = __webpack_public_path__ + \"static/media/iphone.f642fc60.jpg\";","module.exports = __webpack_public_path__ + \"static/media/iphone2.cd8164e4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/iphone3.5eba7e23.jpg\";","import React from \"react\";\r\nimport { Col } from \"reactstrap\";\r\nimport logo from \"./cognitisLogo-Texto.png\";\r\nimport \"./index.css\";\r\n\r\n// comoponent to show Cognitis logo\r\nconst Logo = () => {\r\n  return (\r\n        <Col lg=\"4\" md=\"4\" sm=\"4\">\r\n            <img src={logo} alt=\"logo\" className=\"center-block\"/>\r\n        </Col>\r\n  );\r\n};\r\n\r\nexport default Logo;","import React from \"react\";\r\nimport { Col } from \"reactstrap\";\r\nimport { FormattedMessage } from 'react-intl';\r\nimport \"./index.css\";\r\n\r\n// component to show Welcome message\r\nconst Welcome = () => {\r\n  return (\r\n        <Col lg=\"12\">\r\n            <h1 className=\"text\"><FormattedMessage id=\"app.welcomeMessage\"/></h1>\r\n        </Col>\r\n  );\r\n};\r\n\r\nexport default Welcome;","import React from 'react'\r\n\r\nconst wrapperStyles = {\r\n    backgroundImage: \"url('../../../../Background.png')\",\r\n    backgroundPosition: 'center',\r\n    backgroundSize: 'cover',\r\n    width: '100vw',\r\n    height: '100vh'\r\n}\r\nconst WizardLayout = (props) => {\r\n    return(\r\n        <div className=\"wrapper-wizard-layout\" style={wrapperStyles}>\r\n            { props.children }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WizardLayout;\r\n\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  FormGroup,\r\n  Label,\r\n  InputGroup,\r\n  Row,\r\n  Tooltip,\r\n  Card,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport { BsInfoCircleFill } from \"react-icons/bs\";\r\nimport { AiFillCheckCircle, AiFillCloseCircle } from \"react-icons/ai\";\r\nimport { FaEye } from \"react-icons/fa\";\r\nimport \"./index.css\";\r\n\r\nimport Logo from \"../../../components/WizardComponents/base/logo\";\r\nimport Welcome from \"../../../components/WizardComponents/base/welcome\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport WizardLayout from '../../Layouts/WizardLayout/index'\r\n\r\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n// import { faEye } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst eye = <FaEye />;\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tooltipOpen: false,\r\n      newPass: \"\",\r\n      newPassConfirm: null,\r\n      passwordShown: false,\r\n      passwordConfirmShown: false,\r\n      goodMessage: false,\r\n      matchMessage: false,\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    //This function is for control the input that put the user.\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  togglePasswordVisiblity = () => {\r\n    this.setState({\r\n      passwordShown: !this.state.passwordShown,\r\n    });\r\n  };\r\n\r\n  togglePasswordConfirmVisiblity = () => {\r\n    this.setState({\r\n      passwordConfirmShown: !this.state.passwordConfirmShown,\r\n    });\r\n  };\r\n\r\n  toggle = () => {\r\n    //This function is for control the Tooltip specials characters.\r\n    this.setState({\r\n      tooltipOpen: !this.state.tooltipOpen,\r\n    });\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.props.changePassword(this.state.newPass);\r\n  };\r\n\r\n  createPassword = () => {\r\n    this.props.changePassword(this.state.newPass)\r\n\r\n    this.props.history.push('/selectcountry')\r\n  }\r\n\r\n  /* verify if a email is registered on user screen\r\n  if this is not selected redirect to user screen */\r\n  isEmailEmpty = () => {\r\n    return this.props.userInfo.email === \"\";\r\n  };\r\n\r\n  render() {\r\n    //const props = this.props.changePassword\r\n    //console.log(changePassword);\r\n    let { tooltipOpen, newPass, newPassConfirm } = this.state;\r\n\r\n    //Function for control if the password have 8 characters length.\r\n    const lengthRight = newPass.length > 7;\r\n    let controlCharacters = lengthRight ? (\r\n      <p className=\"text-rule correct\" id=\"character-rule\">\r\n        <i className=\"icon-check\">\r\n          <AiFillCheckCircle />\r\n        </i>{\" \"}\r\n        <FormattedMessage id=\"app.8charactersMessage\" />\r\n      </p>\r\n    ) : (\r\n      //If not\r\n      <p className=\"text-rule\" id=\"character-rule\">\r\n        <i className=\"icon-check\">\r\n          <AiFillCloseCircle />\r\n        </i>{\" \"}\r\n        <FormattedMessage id=\"app.8charactersMessage\" />\r\n      </p>\r\n    );\r\n\r\n    //Function for control if the password have minimium 1 uppercase\r\n    const regexUpper = /[A-Z]/;\r\n    const upperRight = regexUpper.test(newPass);\r\n    let controlUppercase = upperRight ? (\r\n      <p className=\"text-rule correct\">\r\n        <i className=\"icon-check\">\r\n          <AiFillCheckCircle />\r\n        </i>{\" \"}\r\n        <FormattedMessage id=\"app.uppercaseMessage\" />\r\n      </p>\r\n    ) : (\r\n      //If not\r\n      <p className=\"text-rule\">\r\n        <i className=\"icon-check\">\r\n          <AiFillCloseCircle />\r\n        </i>{\" \"}\r\n        <FormattedMessage id=\"app.uppercaseMessage\" />\r\n      </p>\r\n    );\r\n\r\n    //Function for control if the password have minimium 1 lowercase\r\n    const regexLower = /[a-z]/;\r\n    const lowerRight = regexLower.test(newPass);\r\n    let controlLowercase = lowerRight ? (\r\n      <p className=\"text-rule correct\">\r\n        <i className=\"icon-check\">\r\n          <AiFillCheckCircle />\r\n        </i>{\" \"}\r\n        <FormattedMessage id=\"app.lowercaseMessage\" />\r\n      </p>\r\n    ) : (\r\n      //If not\r\n      <p className=\"text-rule\">\r\n        <i className=\"icon-check\">\r\n          <AiFillCloseCircle />\r\n        </i>{\" \"}\r\n        <FormattedMessage id=\"app.lowercaseMessage\" />\r\n      </p>\r\n    );\r\n\r\n    //Function for control if the password have minimium 1 number\r\n    const regexNumber = /[0-9]/;\r\n    const numberRight = regexNumber.test(newPass);\r\n    let controlNumber = numberRight ? (\r\n      <p className=\"text-rule correct\">\r\n        <i className=\"icon-check\">\r\n          <AiFillCheckCircle />\r\n        </i>{\" \"}\r\n        <FormattedMessage id=\"app.oneNumberMessage\" />\r\n      </p>\r\n    ) : (\r\n      //If not\r\n      <p className=\"text-rule\">\r\n        <i className=\"icon-check\">\r\n          <AiFillCloseCircle />\r\n        </i>{\" \"}\r\n        <FormattedMessage id=\"app.oneNumberMessage\" />\r\n      </p>\r\n    );\r\n\r\n    //Function for control if the password have minimium 1 special character\r\n    const regexSpecial = /[!@#$%^&*_-]/;\r\n    const specialRight = regexSpecial.test(newPass);\r\n    let controlSpecial = specialRight ? (\r\n      <p className=\"text-rule correct\">\r\n        <i className=\"icon-check\">\r\n          <AiFillCheckCircle />\r\n        </i>{\" \"}\r\n        <FormattedMessage id=\"app.specialCharacterMessage\" />{\" \"}\r\n        <BsInfoCircleFill className=\"info-character\" id=\"info-character\" />\r\n      </p>\r\n    ) : (\r\n      //If not\r\n      <p className=\"text-rule\">\r\n        <i className=\"icon-check\">\r\n          <AiFillCloseCircle />\r\n        </i>{\" \"}\r\n        <FormattedMessage id=\"app.specialCharacterMessage\" />{\" \"}\r\n        <BsInfoCircleFill className=\"info-character\" id=\"info-character\" />\r\n      </p>\r\n    );\r\n\r\n    //Function for change the border color of the input if the password follows the defined criteria.\r\n    let controlInputPass =\r\n      lengthRight && upperRight && lowerRight && numberRight && specialRight ? (\r\n        <input\r\n          required=\"\"\r\n          className=\"input-correct\"\r\n          type={this.state.passwordShown ? \"text\" : \"password\"}\r\n          name={\"newPass\"}\r\n          id=\"newPass\"\r\n          placeholder=\"Insert new password\"\r\n          onChange={this.handleInputChange}\r\n        />\r\n      ) : (\r\n        //if not\r\n        <input\r\n          type={this.state.passwordShown ? \"text\" : \"password\"}\r\n          name={\"newPass\"}\r\n          id=\"newPass\"\r\n          placeholder=\"Insert new password\"\r\n          onChange={this.handleInputChange}\r\n        />\r\n      );\r\n\r\n    //Function for show the good message if the password follows the defined criteria.\r\n    let controlGoodMessage = lengthRight &&\r\n      upperRight &&\r\n      lowerRight &&\r\n      numberRight &&\r\n      specialRight && <p className=\"message-password\">Good</p>;\r\n\r\n    //Function for change the border color of the second input if the password match with the first input.\r\n    let controlInputPassConfirm =\r\n      newPassConfirm === newPass && newPassConfirm !== \"\" ? (\r\n        <input\r\n          className=\"input-correct\"\r\n          type={this.state.passwordConfirmShown ? \"text\" : \"password\"}\r\n          name={\"newPassConfirm\"}\r\n          id=\"newPassConfirm\"\r\n          placeholder=\"Confirm new password\"\r\n          onChange={this.handleInputChange}\r\n        />\r\n      ) : (\r\n        //If not\r\n        <input\r\n          type={this.state.passwordConfirmShown ? \"text\" : \"password\"}\r\n          name={\"newPassConfirm\"}\r\n          id=\"newPassConfirm\"\r\n          placeholder=\"Confirm new password\"\r\n          onChange={this.handleInputChange}\r\n        />\r\n      );\r\n\r\n    //Function for show the good message if the password follows the defined criteria.\r\n    let controlMatchMessage = newPassConfirm === newPass &&\r\n      newPassConfirm !== \"\" && <p className=\"message-password\">Match</p>;\r\n\r\n    //Function for control the button create password.\r\n    let controlCreatePassButton =\r\n      newPassConfirm === newPass && newPassConfirm !== \"\" ? (\r\n        <Button color=\"primary\" onClick={ () => this.createPassword() }>\r\n          <FormattedMessage id=\"app.btnCreatePassword\" />\r\n        </Button>\r\n      ) : (\r\n        <Button color=\"secondary\" disabled>\r\n          <FormattedMessage id=\"app.btnCreatePassword\" />\r\n        </Button>\r\n      );\r\n\r\n    return (\r\n        this.isEmailEmpty() ? <Redirect to=\"/user\" /> :\r\n      <WizardLayout>\r\n        <Container fluid>\r\n          <Row>\r\n            <Col lg=\"6\" md=\"3\" xs=\"10\">\r\n              <Logo />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"text-center\" style={{ marginBottom: 30 }}>\r\n            <Col lg=\"12\" xs=\"12\">\r\n              <Welcome />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col lg=\"12\">\r\n              <Card id=\"card-password\">\r\n                <div className=\"div-password\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      <FormattedMessage id=\"app.enterYourNewPasswordMessage\" />{\" \"}\r\n                        <b>{ this.props.userInfo.email }</b>\r\n                    </Label>\r\n                    <br />\r\n                    <Label>\r\n                      <FormattedMessage id=\"app.makeSureIncludeMessage\" />\r\n                    </Label>\r\n                    <br />\r\n                    {controlCharacters}\r\n                    {controlUppercase}\r\n                    {controlLowercase}\r\n                    {controlNumber}\r\n                    {controlSpecial}\r\n                    <Tooltip\r\n                      placement=\"right\"\r\n                      isOpen={tooltipOpen}\r\n                      target=\"info-character\"\r\n                      toggle={this.toggle}\r\n                    >\r\n                      Los caracteres especiales son: ! @ # $ % ^ & * _ -\r\n                    </Tooltip>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label>\r\n                      <b>\r\n                        <FormattedMessage id=\"app.newPasswordMessage\" />\r\n                      </b>\r\n                    </Label>\r\n                    <div>\r\n                      <Row>\r\n                        <Col>\r\n                          <InputGroup>{controlInputPass}</InputGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row className=\"row-password\">\r\n                        <Col>\r\n                          <i\r\n                            style={{ justifyContent: \"left\" , cursor: \"pointer\"  }}\r\n                            onClick={this.togglePasswordVisiblity}\r\n                            // style={{ cursor: \"pointer\" }}\r\n                          >\r\n                            {eye}\r\n                          </i>\r\n                        </Col>\r\n                        <Col>{controlGoodMessage}</Col>\r\n                      </Row>\r\n                    </div>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"examplePassword2\">\r\n                      <b>\r\n                        <FormattedMessage id=\"app.confirmPasswordMessage\" />\r\n                      </b>\r\n                    </Label>\r\n                    <div>\r\n                      <Row>\r\n                        <Col>\r\n                          <InputGroup>{controlInputPassConfirm}</InputGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row className=\"row-password\">\r\n                        <Col>\r\n                          <i\r\n                            style={{ justifyContent: \"left\" , cursor: \"pointer\" }}\r\n                            onClick={this.togglePasswordConfirmVisiblity}\r\n                            // style={{ cursor: \"pointer\" }}\r\n                          >\r\n                            {eye}\r\n                          </i>\r\n                        </Col>\r\n                        <Col>{controlMatchMessage}</Col>\r\n                      </Row>\r\n                    </div>\r\n                  </FormGroup>\r\n                  <Row className=\"justify-content-center\">\r\n                    {controlCreatePassButton}\r\n                  </Row>\r\n                </div>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </WizardLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Button } from \"reactstrap\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Logo from '../../../components/WizardComponents/base/logo';\r\nimport Welcome from '../../../components/WizardComponents/base/welcome';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport  WizardLayout   from '../../Layouts/WizardLayout/index'\r\n\r\nconst Welcomescreen = ({ changeLanguage }) => {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n\r\n  return (\r\n    <WizardLayout>\r\n            <Row>\r\n              <Col lg=\"6\" xs=\"8\">\r\n                < Logo />\r\n              </Col>\r\n              <Col lg=\"6\" xs=\"4\">\r\n                <Row className=\"text-center\">\r\n                  <Dropdown className=\"dropdown-lenguage\" isOpen={dropdownOpen} toggle={toggle}>\r\n                    <DropdownToggle caret color=\"warning\"><FormattedMessage id=\"app.btnLanguage\"/></DropdownToggle>\r\n                    <DropdownMenu>\r\n                        <DropdownItem onClick={() => changeLanguage('en')}><FormattedMessage id=\"app.englishLanguageOPtion\"/></DropdownItem>\r\n                        <DropdownItem onClick={() => changeLanguage('es')}><FormattedMessage id=\"app.spanishLanguageOPtion\"/></DropdownItem>\r\n                    </DropdownMenu>\r\n                  </Dropdown>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row className=\"text-center\" style={{marginTop:40}}>\r\n                <Welcome/>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col lg=\"12\" className=\"d-flex justify-content-center\" style={{marginTop:40}}>\r\n                <Link to=\"/product\">\r\n                    <Button color=\"warning\" style={{borderColor:\"black\"}}><b><FormattedMessage id=\"app.btnStart\"/></b></Button>\r\n                </Link>\r\n              </Col>\r\n            </Row>\r\n    </WizardLayout>\r\n  );\r\n};\r\n\r\nexport default Welcomescreen;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  FormGroup,\r\n  Label,\r\n  CustomInput,\r\n  Button,\r\n  Card\r\n} from \"reactstrap\";\r\n//import { AiFillCheckCircle, AiFillCloseCircle } from \"react-icons/ai\";\r\nimport \"./index.css\";\r\nimport Logo from \"../../../components/WizardComponents/base/logo\";\r\nimport Welcome from \"../../../components/WizardComponents/base/welcome\";\r\nimport { FormattedMessage } from 'react-intl';\r\nimport WizardLayout from '../../Layouts/WizardLayout/index'\r\n\r\n const Product = (props)=> {\r\n      \r\n      const [data , setState] = useState({\r\n        c1: false,\r\n        c2: false,\r\n        c3: false,\r\n        product: '', \r\n      })\r\n    \r\n  const handlerClick = ()=> {\r\n        if (data.c1) {\r\n          props.changeProduct(0);\r\n          }\r\n        else if (data.c2) {\r\n          props.changeProduct(1);\r\n        } else {\r\n          props.changeProduct(2);\r\n        }\r\n        //const product = this.state.product;\r\n        //axios.post(\"http://localhost:4000/api/verificationcode\", product);\r\n     }\r\n\r\n\r\n    const handleInputChange=(event) =>{\r\n    const target = event.target;\r\n    const value = target.name === \"c1\" ? target.checked : target.value;\r\n\r\n      setState({\r\n      ...[data], \r\n      c1: value,\r\n      c2: value,\r\n      c3: value\r\n    });\r\n  }\r\n  const handleInputChangeOne=(event) => {\r\n    const target = event.target;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    if ((name === \"c2\") && (data.c3)){\r\n      console.log(\"inside\")\r\n      setState({\r\n        ...data,\r\n        c1: value,\r\n        c2:value,\r\n        c3: value,\r\n      });\r\n    }\r\n    else if ((name === \"c3\") && (data.c2)){\r\n      setState({\r\n        isChecked: value,\r\n        isChecked2:value,\r\n        isChecked3: value,\r\n      });    \r\n    }\r\n    else{\r\n      setState({\r\n        ...data,\r\n      [name] : value,\r\n    })\r\n  } \r\n\r\n    setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n  const handleInputChangetwo=(event) =>{\r\n    const target = event.target;\r\n    const value = target.name === \"c3\" ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    if (value && data.c2) {\r\n      setState({\r\n        ...data,\r\n        c1: value,\r\n        c3: value,\r\n      });\r\n    } else if (value === false && data.c2) {\r\n       setState({\r\n        ...data,\r\n        c1: value,\r\n        c3: value,\r\n      });\r\n    } else {\r\n      setState({\r\n        ...data,\r\n        [name]: value,\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n    //const pg = this.props;\r\n    return (\r\n      <WizardLayout>\r\n        <Row>\r\n          <Col lg=\"6\" md=\"3\" xs=\"10\">\r\n            <Logo />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"text-center\" style={{ marginBottom: 50 }}>\r\n          <Col lg=\"12\" xs=\"12\">\r\n            <Welcome />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col lg=\"8\" sm={{ size: 8, offset: 2 }}>\r\n            <h3 className=\"text-center text\">\r\n              <FormattedMessage id=\"app.selectProductMessage\"/>\r\n            </h3>\r\n            <Card id=\"card-product\" md=\"12\" body style={{ marginTop: 50 }}>\r\n              <FormGroup row className=\"item\">\r\n                <Label\r\n                  for=\"checkbox1\"\r\n                  md={10}\r\n                  className=\"text-product text-center h1\"\r\n                  style={{ fontSize: 20 }}\r\n                >\r\n                  Cognitis 360\r\n                </Label>\r\n                <Col md={{ size: 2 }} className=\"text-center\">\r\n                  <CustomInput\r\n                   type=\"checkbox\"\r\n                    id=\"checkbox1\"\r\n                    name=\"c1\"\r\n                    checked={data.c1}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </Col>\r\n              </FormGroup>\r\n              <FormGroup row className=\"item\">\r\n                <Label\r\n                  for=\"checkbox2\"\r\n                  md={10}\r\n                  className=\"text-product text-center h1\"\r\n                  style={{ fontSize: 20 }}\r\n                >\r\n                  Cognitis Marketplace\r\n                </Label>\r\n                <Col md={{ size: 2 }} className=\"text-center\">\r\n                  <CustomInput\r\n                    type=\"checkbox\"\r\n                    id=\"checkbox2\"\r\n                    name=\"c2\"\r\n                    checked={data.c2}\r\n                    onChange={handleInputChangeOne}             \r\n                  />\r\n                </Col>\r\n              </FormGroup>\r\n              <FormGroup row className=\"item\">\r\n                <Label\r\n                  for=\"checkbox3\"\r\n                  md={10}\r\n                  className=\" text-product text-center h1\"\r\n                  style={{ fontSize: 20 }}\r\n                >\r\n                  Cognitis ERP\r\n                </Label>\r\n                <Col md={{ size: 2 }} className=\"text-center\">\r\n                  <CustomInput\r\n                    type=\"checkbox\"\r\n                    id=\"checkbox3\"\r\n                    name=\"c3\"\r\n                    checked={data.c3}\r\n                    onChange={handleInputChangetwo}\r\n                  />\r\n                </Col>\r\n              </FormGroup>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col\r\n            lg=\"12\"\r\n            sm={{ size: 8, offset: 2 }}\r\n            className=\"d-flex justify-content-center\"\r\n            style={{ marginTop: 20 }}\r\n          >\r\n            <Link to=\"/user\">\r\n              <Button\r\n                onClick={handlerClick}\r\n                color=\"warning\"\r\n                style={{ borderColor: \"black\" }}\r\n              >\r\n                <b><FormattedMessage id=\"app.nextButton\"/></b>\r\n              </Button>\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n      </WizardLayout>\r\n    );\r\n}\r\n\r\nexport default Product;\r\n","import React, {useState} from \"react\"; //importacion de la libreria\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport { InputGroup, InputGroupAddon, Button, Input, Row, Col, Card, Spinner } from \"reactstrap\"; //importar elementos\r\nimport \"./index.css\"; //importar css\r\nimport axios from \"axios\";\r\nimport Logo from '../../../components/WizardComponents/base/logo';\r\nimport Welcome from '../../../components/WizardComponents/base/welcome';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport WizardLayout from '../../Layouts/WizardLayout/index'\r\n\r\n\r\n\r\nconst Registeruser = (props) => {\r\n\r\n  const [verifyingEmail, setVerifyingEmail] = useState(false)\r\n  const [showErrorMessage, setShowErrorMessage] = useState(false)\r\n\r\n  const [mailEntered] = useState({\r\n    adress:null,\r\n  })\r\n\r\n\r\n  const handleInputChange = (event) => {\r\n    props.changeEmail(event.target)\r\n  };\r\n\r\n  /* verify if entered mail is already used for another user.\r\n  if the email entered is not used yet call to sendData function */\r\n  const verifyEmail = (email) => {\r\n\r\n    setVerifyingEmail(true)\r\n\r\n    axios.post('http://localhost:3000/api/users/emailverification', {\r\n      user_mail: email\r\n    })\r\n    .then( async res => {\r\n      const isEmailAlreadyUsed =  await res.data.alreadyUsed\r\n\r\n      if(isEmailAlreadyUsed){\r\n        setShowErrorMessage(true)\r\n        setVerifyingEmail(false)\r\n      }else{\r\n        sendData(email)\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    }) \r\n  }\r\n\r\n  /* SenData send a email to email address entered ànd return the verification cede and the expiration time */\r\n  const sendData = (email) => {\r\n    \r\n    axios.post('http://localhost:3000/api/verificationcode', {\r\n      user_mail: email\r\n    })\r\n    .then(async  res => { \r\n    /* store the result (verification code) on global state */\r\n     await props.changeCodeTime(res.data.verificationCode, res.data.expireAt)\r\n    \r\n    }).catch(err => console.log(err));\r\n\r\n    if (document.querySelector(\"#input-email\").value !== \"\"){\r\n      props.history.push('/verificationcode')\r\n    }\r\n    \r\n  };\r\n\r\n  /* verify if a product type is selected on product screen\r\n  if this is not selected redirect to product screen */\r\n  const isProductSelected = () => {\r\n    return props.userInfo.product === \"\"\r\n  }\r\n\r\n  //Funcion que renderiza el componente visual jsx\r\n  return (\r\n    isProductSelected() ? <Redirect to=\"/product\"/> :\r\n    <WizardLayout>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"3\" xs=\"10\">\r\n                  < Logo />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"text-center\" style={{marginBottom:30}}>\r\n                <Col lg=\"12\" xs=\"12\">\r\n                  < Welcome />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"12\">\r\n                  <Card id=\"card-user\" body>\r\n                    <InputGroup>\r\n                      <Input\r\n                        id=\"input-email\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Enter Email\"\r\n                        onChange={handleInputChange}\r\n                        required\r\n                      />\r\n                      <InputGroupAddon addonType=\"append\">\r\n                          <Button\r\n                            className=\"button-verification-code\"\r\n                            color=\"primary\"\r\n                            active\r\n                            onClick={() => verifyEmail(document.querySelector('#input-email').value)}\r\n                            type=\"submit\"\r\n                          >\r\n                           { verifyingEmail ? <Spinner size=\"sm\" color=\"light\" /> : <FormattedMessage id=\"app.nextButton\"/> }\r\n                          </Button>\r\n                      </InputGroupAddon>\r\n                    </InputGroup>\r\n                    { showErrorMessage && <span>Email already used for another user</span>}\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n      </WizardLayout>\r\n  );\r\n};\r\n\r\nexport default withRouter(Registeruser);","/**\r\n *  SelectCountry is a component that allows a user to select their country.\r\n *\r\n *\r\n */\r\n//Libraries and components imported to use in this component.\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  FormGroup,\r\n  Label,\r\n  Col,\r\n  Button,\r\n  Input,\r\n  Row,\r\n  Container,\r\n  Card,\r\n  Spinner,\r\n} from \"reactstrap\";\r\nimport \"./selectcountry.css\";\r\nimport Logo from \"../../../components/WizardComponents/base/logo\";\r\nimport Welcome from \"../../../components/WizardComponents/base/welcome\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport WizardLayout from \"../../Layouts/WizardLayout/index\";\r\nimport axios from 'axios'\r\n\r\nconst SelectCountry = (props) => {\r\n  const [sendingData, setSendingData] = useState(false);\r\n\r\n  //Array of countries. This shows on the dropdown list of countries.\r\n  var countries = [\r\n    \"Select a Country\",\r\n    \"Argentina\",\r\n    \"Australia\",\r\n    \"Bolivia\",\r\n    \"Canada\",\r\n    \"Chile\",\r\n    \"Colombia\",\r\n    \"Ecuador\",\r\n    \"Guyana\",\r\n    \"New Zealand\",\r\n    \"Paraguay\",\r\n    \"Peru\",\r\n    \"Surinam\",\r\n    \"USA\",\r\n    \"Uruguay\",\r\n    \"Venezuela\",\r\n  ];\r\n\r\n \r\n\r\n  const postData = () => {\r\n    setSendingData(true)\r\n\r\n    axios\r\n      .post(\"http://localhost:3000/api/users/saveuser\", {\r\n        user_name: \"test\",\r\n        user_mail: props.userInfo.email,\r\n        user_password: props.userInfo.password,\r\n        user_passwordExpired: props.userInfo.passwordExpired,\r\n        user_branch_office_house_id: 41,\r\n        users_role_id: 11,\r\n      })\r\n      .then((res) => {\r\n        props.history.push(\"/loginusers/login\");\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const controlNextButton =\r\n    props.userInfo.country !== \"\" ? (\r\n      <Button type=\"submit\" color=\"primary\" active onClick={postData}>\r\n        {sendingData ? (\r\n          <Spinner size=\"sm\" color=\"light\" />\r\n        ) : (\r\n          <FormattedMessage id=\"app.nextButton\" />\r\n        )}\r\n      </Button>\r\n    ) : (\r\n      <Button\r\n        className=\"button-verification-code\"\r\n        color=\"primary\"\r\n        active\r\n        disabled\r\n      >\r\n        <FormattedMessage id=\"app.nextButton\" />\r\n      </Button>\r\n    );\r\n  //Arrow function to capture the name of the selected country with the value property.\r\n  const inputChange = (event) => {\r\n    props.handleChangeCountry(event.target.value);\r\n  };\r\n  \r\n  /* verify if the password is registered on login screen\r\n  if this is not registered redirect to login screen */\r\n  const isPasswordEmpty = () => {\r\n    return props.userInfo.password === \"\";\r\n  };\r\n\r\n  return isPasswordEmpty() ? (\r\n    <Redirect to=\"/login\" />\r\n  ) : (\r\n    <WizardLayout>\r\n      <Container fluid>\r\n        <Row>\r\n          <Col lg=\"6\" md=\"3\" xs=\"10\">\r\n            <Logo />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"text-center\" style={{ marginBottom: 30 }}>\r\n          <Col lg=\"12\" xs=\"12\">\r\n            <Welcome />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col lg=\"12\" md=\"8\" xs=\"12\">\r\n            <Card id=\"card-selectCountry\" body>\r\n              <FormGroup row>\r\n                <Label for=\"exampleSelect\" sm={3}>\r\n                  <FormattedMessage id=\"app.selectCountryMessage\" />\r\n                </Label>\r\n                <Col sm={7}>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"select\"\r\n                    id=\"exampleSelect\"\r\n                    onChange={inputChange}\r\n                  >\r\n                    {/* Function to insert the countries of the array like items in dropdown menu */}\r\n                    {countries.map((country) => (\r\n                      <option key={country} value={country}>\r\n                        {country}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </Col>\r\n                {controlNextButton}\r\n              </FormGroup>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </WizardLayout>\r\n  );\r\n};\r\n\r\nexport default withRouter(SelectCountry);\r\n","/**\r\n *  Verification-Code is a component to validate the verification code that is sent to users.\r\n *\r\n *\r\n */\r\n//Libraries and components imported to use in this component.\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Button,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Card,\r\n} from \"reactstrap\";\r\nimport \"./verificationcode.css\";\r\nimport { Link, Redirect, withRouter } from \"react-router-dom\";\r\nimport Logo from \"../../../components/WizardComponents/base/logo\";\r\nimport Welcome from \"../../../components/WizardComponents/base/welcome\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport WizardLayout from \"../../Layouts/WizardLayout/index\";\r\n\r\nconst VerificationCode = (props) => {\r\n  //const [band, setBand] = useState(false);\r\n  const [code, setCode] = useState(\"\");\r\n  const [invalidCode, setInvalidCode] = useState(false);\r\n  /*const expireCode = (event) => {\r\n        const expireTime =  new Date(props.codeVerification.codeTime); \r\n        if (expireTime >= new Date() ) {\r\n            if (props.codeVerification.codeVerification != event.target.value ) {\r\n                console.log('Error')\r\n                setBand(false);\r\n            } else { console.log('Iguales');\r\n                      setBand(true);  \r\n                    }\r\n        } else {console.log('tiempo expiro');\r\n                    setBand(false);\r\n                }\r\n    }*/\r\n\r\n  const checkCodeEntered = () => {\r\n    if (props.codeVerification.codeVerification === code) {\r\n      props.history.push(\"/login\");\r\n    } else {\r\n      setInvalidCode(true);\r\n    }\r\n  };\r\n\r\n  /* function to change the code value. This function is executed each time that code input \r\n  is updated */\r\n\r\n  const handleChangeCode = (event) => {\r\n    setCode(event.target.value);\r\n  };\r\n\r\n  /* Function for control the button create password. If the code entered length is < return a disactive button\r\n  but if entered length is >= 4 return a active button */\r\n  const controlNextButton =\r\n    code.length >= 5 ? (\r\n      <Button className=\"button-verification-code\" color=\"primary\" active onClick={ () => checkCodeEntered() }>\r\n        <FormattedMessage id=\"app.nextButton\" />\r\n      </Button>\r\n    ) : (\r\n      <Button\r\n        className=\"button-verification-code\"\r\n        color=\"primary\"\r\n        active\r\n        disabled\r\n      >\r\n        <FormattedMessage id=\"app.nextButton\" />\r\n      </Button>\r\n    );\r\n\r\n  /* verify if a email is registered on user screen\r\n  if this is not selected redirect to user screen */\r\n  const isEmailEmpty = () => {\r\n    return props.userInfo.email === \"\";\r\n  };\r\n\r\n  return isEmailEmpty() ? (\r\n    <Redirect to=\"/user\" />\r\n  ) : (\r\n    <WizardLayout>\r\n      <Container fluid>\r\n        <Row>\r\n          <Col lg=\"6\" md=\"3\" xs=\"10\">\r\n            <Logo />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"text-center\" style={{ marginBottom: 30 }}>\r\n          <Col lg=\"12\" xs=\"12\">\r\n            <Welcome />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col lg=\"12\">\r\n            <Card id=\"card-verificationCode\" body>\r\n              <InputGroup className=\"inputgroup-verification-code\">\r\n                <Input\r\n                  className=\"input-verification-code\"\r\n                  maxLength=\"5\"\r\n                  placeholder={ `We send you a code to ${ props.userInfo.email }. Please enter code:` } /*onChange={expireCode}*/\r\n                  onChange={handleChangeCode}\r\n                />\r\n                <InputGroupAddon addonType=\"append\">\r\n                  {controlNextButton}\r\n                </InputGroupAddon>\r\n              </InputGroup>\r\n              { invalidCode && (\r\n                <span >\r\n                  Invalid code. Please check your email and try again\r\n                </span>\r\n              )}\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </WizardLayout>\r\n  );\r\n};\r\n\r\nexport default withRouter(VerificationCode);\r\n","import React from 'react';\r\nimport {Collapse,Navbar,NavbarBrand,Nav,NavbarText} from 'reactstrap';\r\nimport imagen from \"./cognitis-logo_2020.png\";\r\nimport \"./navbar.css\";\r\n\r\n\r\nconst Logo = () => {\r\n   \r\n    return (\r\n        \r\n        <div>\r\n            <Navbar color=\"light\" light expand=\"md\" id=\"Navbar\">\r\n                <NavbarBrand href=\"/\">\r\n                    <img src={imagen} id=\"img-Navbar\" alt=\"logo\" className=\"center-block\"/>\r\n                </NavbarBrand>\r\n                <Collapse  navbar>\r\n                    <Nav className=\"mr-auto\" navbar>\r\n                    </Nav>\r\n                    <NavbarText id=\"text-navbar\">ERP + MARKETPLACE + CLOUD</NavbarText>\r\n                </Collapse>\r\n            </Navbar>\r\n        </div>\r\n  );\r\n};\r\n\r\nexport default Logo;","import React, { useState} from 'react'; \r\nimport { FormGroup, Label, Col, Button, Input,Row, Card, Form} from 'reactstrap'; \r\nimport { Dropdown, DropdownMenu, DropdownItem, DropdownToggle} from 'reactstrap'; \r\nimport \"./index.css\";\r\nimport imagenProductivity from \"./imageProductivity.jpeg\";\r\nimport Navbar from '../Base/navbar';\r\nimport axios from \"axios\";  \r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\n\r\n\r\nconst LoginUsers = (props) => {\r\n    const [stateButton, setStateButton] = useState(false); // State for control if the login buttin was clicked\r\n    const [incorrectCredential, setIncorrectCredential] = useState(false); // State for control if the email and password are right\r\n    const [failedAttempts, setFailedAttempts] = useState(0); //IN THIS STATE WE'RE GOING TO SAVE THE FAILED ATTEMPTS IN EMAIL AND PASSWORD\r\n    const [maximiumAttemptsExceeded, setMaximiumAttemptsExceeded] = useState(false);\r\n    const [btnLogin, setBtnLogin] = useState(false) //State for control if both input aren't null the button activate\r\n\r\n    //State for control the lenguage dropdown\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n    const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n\r\n    \r\n    \r\n    // const changeButtonState = (mail) => {\r\n    //     setStateButton(true)\r\n    //     let usuario = getData(mail)\r\n    //     console.log(usuario)\r\n    // }\r\n\r\n    //Function to control the Login button. If the inputs are empty the button is disabled.\r\n    const controlButtonLogin = () =>{\r\n        const inputEmail = document.getElementById(\"inputEmail\").value;\r\n        const inputPassword = document.getElementById(\"inputPassword\").value;\r\n        if ((inputEmail !== '') && (inputPassword !=='')){\r\n            setBtnLogin(true)\r\n        }else{\r\n            setBtnLogin(false)\r\n        }\r\n    }\r\n\r\n    //Arrow function to capture the email and password input from the user and set the global state of the user.\r\n    const inputChange = (event) => {\r\n        props.handleChange(event.target)\r\n        controlButtonLogin()\r\n    }\r\n\r\n    //Function when the system will execute when the user enters an incorrect credential. Could be mail or password\r\n    const incorrectCredentialActions = () => {\r\n        setFailedAttempts(failedAttempts+1) //Add one faile attempts\r\n        setIncorrectCredential(true) //Show the message to the user that the credential are incorrect\r\n        if (failedAttempts === 3){ //The user try to login more than 3 times with an incorrect credential\r\n            setMaximiumAttemptsExceeded(true) //Show the message than the maximium attempts exceeded\r\n\r\n            //Set the passwordExpired field true in the database. So the user have to restart his password\r\n            axios.put(`http://localhost:3000/api/users/updateUser/${props.user.email}`, {\r\n                passwordExpired:true,\r\n            }).then(console.log(\"User update\"))\r\n            .catch(console.log(\"Can't update\"))         \r\n        }\r\n    }\r\n\r\n    //Function to control what the user enters in the inputs\r\n    const controlInput = (userFound) =>{\r\n        if (userFound) { //If found an user that matched with the email from the input\r\n            //Here we put the things when the email is right\r\n            if ((props.user.password === userFound.password) && (!userFound.passwordExpired) ){\r\n                //Here we put the things when the email match with the password and everything is right in the login\r\n                //Start Session\r\n                //Go to the next page\r\n                console.log(\"Todo ok\")\r\n\r\n            }else{//The password doesn't match with the email\r\n                incorrectCredentialActions()\r\n                console.log(\"entra aca\")\r\n            }\r\n\r\n        }else{\r\n            //Here we put the things when the email isn't right\r\n            incorrectCredentialActions()\r\n        }\r\n        //IN BOTH CASES THE USER CLICK THE BUTTON\r\n        setStateButton(true)\r\n    }\r\n\r\n    const getData = async () => {       \r\n        await axios.post('http://localhost:3000/api/users/getUser', {\r\n            mail: props.user.email\r\n        })\r\n        .then(async res =>{\r\n            const userExist = await res.data \r\n            if(userExist){\r\n                controlInput(userExist)\r\n            }else{\r\n                //THE USER DOESN'T EXISTS SO THE SYSTEM DO THE THINGS WHEN THE CREDENTIAL ARE INCORRECT\r\n                incorrectCredentialActions()\r\n                console.log(\"Usuario no existe\")      \r\n            }\r\n        })\r\n        .catch(error =>{\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n\r\n  return (  \r\n    <div>\r\n        <Navbar/>\r\n\r\n        <Row>\r\n            <Col lg=\"12\" md=\"12\" xs=\"12\" id=\"col-naranja\" style={{margin:0, padding:0}}>\r\n                <p></p>\r\n            </Col>\r\n        </Row>\r\n        <Row className=\"text-center\">\r\n            <Col lg=\"6\" md=\"6\" xs=\"12\"> \r\n                    <Row className=\"justify-content-end\">\r\n                        <Col lg=\"3\" xs=\"4\" style={{marginLeft:10}}>\r\n                            <Row className=\"text-center\">\r\n                            <Dropdown className=\"dropdown-lenguage\" isOpen={dropdownOpen} toggle={toggle}>\r\n                                <DropdownToggle caret color=\"warning\"><FormattedMessage id=\"app.btnLanguage\"/></DropdownToggle>\r\n                                <DropdownMenu>\r\n                                    <DropdownItem onClick={() => props.changeLanguage('en')}><FormattedMessage id=\"app.englishLanguageOPtion\"/></DropdownItem>\r\n                                    <DropdownItem onClick={() => props.changeLanguage('es')}><FormattedMessage id=\"app.spanishLanguageOPtion\"/></DropdownItem>\r\n                                </DropdownMenu>\r\n                            </Dropdown>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col lg=\"6\" >\r\n                                <Form style={{marginTop:15}}>\r\n                                    <FormGroup>\r\n                                        <Input type=\"email\" name=\"email\" id=\"inputEmail\" placeholder=\"Email addres\" required onChange={inputChange}/>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Input type=\"password\" name=\"password\" id=\"inputPassword\" placeholder=\"Password\" required onChange={inputChange}/>\r\n                                    </FormGroup>\r\n                                    <FormGroup check style={{paddingBottom:\"5px\"}}>\r\n                                        <Label check>\r\n                                            <Input type=\"checkbox\" />{' '}\r\n                                            <FormattedMessage id=\"app.rememberMeMessage\"/>\r\n                                        </Label>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        {(btnLogin) ?\r\n                                        (<Button color=\"primary\" id=\"btn-Login\" onClick={getData}><FormattedMessage id=\"app.btnLoginMessage\"/></Button>):\r\n                                        (<Button color=\"primary\" id=\"btn-Login\" onClick={getData} disabled><FormattedMessage id=\"app.btnLoginMessage\"/></Button>)\r\n                                        }\r\n                                        \r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"text-center\">\r\n                                        <Link><FormattedMessage id=\"app.forgotPasswordMessage\"/></Link>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        \r\n                                    </FormGroup>\r\n                                    { (stateButton && incorrectCredential && (!maximiumAttemptsExceeded)) &&\r\n                                        <FormGroup className=\"text-left\">\r\n                                            <Card id=\"card-error2\">\r\n                                                <p>\r\n                                                    <b>Error: </b><FormattedMessage id=\"app.errorIncorrectCredentialMessage\"/>\r\n                                                </p>\r\n                                            </Card>\r\n                                        </FormGroup>\r\n                                    }\r\n                                    { (stateButton && maximiumAttemptsExceeded) &&\r\n                                        <FormGroup>\r\n                                            <Label style={{color:\"red\"}}>\r\n                                                <FormattedMessage id=\"app.maxiumAttemptsMessage\"/>\r\n                                            </Label>\r\n                                            <Card id=\"card-error2\">\r\n                                                <p>\r\n                                                    <b><FormattedMessage id=\"app.securityParamountMessage\"/></b><br/>\r\n                                                    <FormattedMessage id=\"app.maxiumAttemptsResetPasswordMessage\"/>\r\n                                                </p>\r\n                                            </Card>\r\n                                        </FormGroup>\r\n                                    }\r\n                                    \r\n                                </Form>\r\n                        </Col>\r\n                    </Row>\r\n            </Col>\r\n            <Col lg=\"6\" md=\"6\" xs=\"12\" className=\"d-none d-sm-block\">\r\n                <img src={imagenProductivity} alt=\"Cognitis\" id=\"img-productivity\"/>\r\n            </Col>\r\n        </Row>\r\n        <div id=\"underBackground\">\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginUsers;\r\n","import React, {Fragment } from \"react\";\r\nimport {\r\n  Navbar,\r\n  Nav\r\n} from \"react-bootstrap\";\r\nimport { AiFillHome } from \"react-icons/ai\";\r\nimport '../Navbar/index.css';\r\n\r\n\r\n// Secondary nav shown below the main navbar of the page catalog\r\nconst Subnavbar = () => {\r\n  return (\r\n      <Fragment>\r\n      <Navbar expand=\"lg\" variant=\"dark\" className=\"secondary\">\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link className=\"text-white\">\r\n            <i>\r\n              <AiFillHome />\r\n            </i>\r\n          </Nav.Link>\r\n          <Nav.Link href=\"#home\" id=\"text-white\">\r\n            Menu usuario\r\n          </Nav.Link>\r\n          <Nav.Link href=\"#home\" id=\"text-white\">\r\n            Inicio\r\n          </Nav.Link>\r\n          <Nav.Link href=\"#link\" id=\"text-white\">\r\n            Productos y Servicios\r\n          </Nav.Link>\r\n          <Nav.Link href=\"#link\" id=\"text-white\">\r\n            Fondos\r\n          </Nav.Link>\r\n          <Nav.Link href=\"#link\" id=\"text-white\">\r\n            Proveedor\r\n          </Nav.Link>\r\n          <Nav.Link href=\"#link\" id=\"text-white\">\r\n            Administracion\r\n          </Nav.Link>\r\n          <Nav.Link href=\"#link\" id=\"text-white\">\r\n            Configuracion\r\n          </Nav.Link>\r\n        </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      </Fragment>\r\n  );\r\n};\r\n\r\nexport default Subnavbar;\r\n","import React from \"react\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n  Form,\r\n  Button,\r\n  FormControl,\r\n  InputGroup,\r\n} from \"react-bootstrap\";\r\nimport { FiSearch } from \"react-icons/fi\";\r\nimport { GiHelp } from \"react-icons/gi\";\r\nimport { FaRegUser } from \"react-icons/fa\";\r\nimport \"./index.css\";\r\nimport logo from \"../Navbar/cognitis-logo_2020.png\";\r\nimport companylogo from \"../Navbar/companylogo.png\";\r\nimport Subnavbar from './Subnavbar';\r\n\r\n// Main Navbar component of the catalog page\r\nconst CNavbars = (props) => {\r\n  return (\r\n    <>\r\n      <Navbar\r\n        collapseOnSelect\r\n        expand=\"lg\"\r\n        bg=\"light\"\r\n        variant=\"light\"\r\n        inline=\"true\"\r\n      >\r\n        {/*<Col sm={1} md=\"1\" xs=\"1\"className=\"d-flex justify-content-center\">*/}\r\n        <Navbar.Brand href=\"#home\" md={1}>\r\n          <img id=\"image-catalog\" src={logo} alt=\"logo\" className=\"center-block\" />\r\n        </Navbar.Brand>\r\n        <Navbar.Brand href=\"#home\" className=\"mr-auto\">\r\n          <img id=\"image-catalog\" src={companylogo} alt=\"logo\" className=\"center-block\" />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Form\r\n              inline\r\n              className=\"ml-auto\"\r\n              //style={{ width: \"500px\" }}\r\n            >\r\n              <InputGroup >\r\n                <FormControl\r\n                  placeholder=\"Search\"\r\n                  size=\"sm\"\r\n                  style={{ width: \"350px\" }}\r\n                />\r\n                <InputGroup.Append>\r\n                  <Button variant=\"outline-secondary\" size=\"sm\">\r\n                  <i> <FiSearch /></i>\r\n                  </Button>\r\n                </InputGroup.Append>\r\n              </InputGroup>\r\n            </Form>\r\n            <Navbar.Text className=\"font-weight-bold text-primary ml-5\">\r\n              ERP + MARKETPLACE + CLOUD\r\n            </Navbar.Text>\r\n          <Nav className=\"ml-auto\">\r\n            <Nav.Link href=\"#help\" >\r\n              <i className=\"mt-1\"><GiHelp/></i>\r\n              Help\r\n            </Nav.Link>\r\n            <i className=\"mt-1\"><FaRegUser /></i>\r\n            <NavDropdown title=\"user\" id=\"collasible-nav-dropdown\" >\r\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.2\">\r\n                Another action\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item href=\"#action/3.4\">\r\n                Separated link\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n            <Navbar.Text>\r\n              <a href=\"#login\">UserName</a>\r\n              <br />\r\n            </Navbar.Text>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n        {/*Components Subnavbar */}\r\n          <Subnavbar />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CNavbars;\r\n","import React from \"react\";\r\nimport {\r\n  ProSidebar,\r\n  Menu,\r\n  MenuItem,\r\n  SidebarContent\r\n} from \"react-pro-sidebar\";\r\nimport \"react-pro-sidebar/dist/css/styles.css\";\r\nimport { FaProductHunt } from \"react-icons/fa\";\r\n//import { FiMenu } from \"react-icons/fi\";\r\nimport { FiMoreVertical } from \"react-icons/fi\";\r\nimport \"../Sidebar/Sidebar.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Sidebar = () => {\r\n  return (\r\n    <ProSidebar id=\"sidebar-container\">\r\n      {/*<i className=\"ml-auto p-3\">\r\n        <FiMenu />\r\n        </i>*/}\r\n      <br />\r\n      <SidebarContent id=\"bg\">\r\n        <Menu id=\"bg\" iconShape=\"square\">\r\n          <MenuItem className=\"font-weight-bold text-white\">\r\n            <i className=\"mr-1\">\r\n              <FaProductHunt />\r\n            </i>\r\n            Productos\r\n          </MenuItem>\r\n          <hr />\r\n          \r\n          \r\n            <MenuItem className=\"ml-5 text-white\">Nuevo Producto\r\n            <Link to=\"/catalog/newproduct\" />\r\n            </MenuItem>\r\n          \r\n          \r\n          \r\n            <MenuItem className=\"ml-5 text-white\">Buscar Producto\r\n            <Link to=\"/catalog/searchproducts\" />\r\n            </MenuItem>\r\n                   \r\n          \r\n          \r\n            <MenuItem className=\"ml-5 text-white\">Vista Producto\r\n            <Link to=\"/catalog/productview\" />\r\n            </MenuItem>\r\n          \r\n\r\n          \r\n            <MenuItem className=\"ml-5 text-white\">Costos y Precios\r\n            <Link to=\"#\"/>\r\n            </MenuItem>\r\n          \r\n\r\n\r\n          <br/><br/>\r\n          <MenuItem className=\"font-weight-bold text-white\">\r\n            <i className=\"mr-1\">\r\n              <FiMoreVertical />\r\n            </i>\r\n            Promociones\r\n          </MenuItem>\r\n          <hr />\r\n          <MenuItem className=\"ml-5 text-white\">Nueva Promocion</MenuItem>\r\n          <MenuItem className=\"ml-5 text-white\">Buscar Promocion</MenuItem>\r\n        </Menu>\r\n      </SidebarContent>\r\n    </ProSidebar>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react'\r\nimport Navbar from '../../../components/CatologComponents/Navbar'\r\nimport Sidebar from '../../../components/CatologComponents/Sidebar/Sidebar'\r\n\r\nconst wrapperLayoutStyles = {\r\n    width: '100vw',\r\n    minHeight: '100vh'\r\n}\r\n\r\nconst pageContentStyles = {\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'start'\r\n}\r\n\r\nconst contentContainerStyles = {\r\n    width: '100%',\r\n    height: '100vh',\r\n    textAling: 'center',\r\n    overflow: 'auto',\r\n}\r\n\r\n//components layout in charge of providing the basic structure of the catalog for example (Navbar, Sidebar, body)\r\nconst CatalogLayout = (props) => {\r\n    return(\r\n        <div style={wrapperLayoutStyles}>\r\n            <Navbar />\r\n            <div style={pageContentStyles}>\r\n                <Sidebar />\r\n                <div style={contentContainerStyles} className=\"ml-5 mt-5 mr-5\">\r\n                    { props.children }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CatalogLayout;","import React,{useState, useEffect} from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Table,\r\n  Form,\r\n  Button,\r\n  Pagination,\r\n  \r\n} from \"react-bootstrap\";\r\nimport {Link } from \"react-router-dom\";\r\nimport {Label, Input} from \"reactstrap\";\r\nimport { BsPlusCircle } from \"react-icons/bs\";\r\nimport { AiTwotoneDelete } from \"react-icons/ai\";\r\nimport { MdModeEdit } from \"react-icons/md\";\r\nimport CatalogLayout from \"../../Layouts/CatalogLayout\";\r\nimport axios from \"axios\";\r\nimport './index.css'\r\n\r\n\r\nconst SearchProducts = () => {\r\n\r\n\r\n//Estado de tipo arreglo que sirve para almacenar la respuesta de la peticion a la API\r\nlet [resultSearch, setResults] = useState ([])\r\n\r\n\r\n//Objeto que se pasa por parametro en la peticion. Por defecto los valores de los campos son 'all' debido a que no filtra\r\nconst [datosPeticion, setDatosPeticion] = useState ({\r\n  product_id: null,\r\n  product_name: null,\r\n  product_brand: null,\r\n  product_providers: null,\r\n  category: null,\r\n  product_type: null\r\n})\r\n\r\n\r\n\r\n\r\n//Funcion que controla el input del codigo de producto\r\nconst setCode = (event) => {\r\n\r\n  setDatosPeticion({\r\n    ...datosPeticion,\r\n    product_id: parseInt(event.target.value)\r\n  })\r\n  \r\n}\r\n\r\n//Funcion que controla el input del nombre de producto\r\nconst setName = (event) => {\r\n  setDatosPeticion({\r\n    ...datosPeticion,\r\n    product_name: (event.target.value === \"\") ? null : event.target.value\r\n  })\r\n}\r\n\r\n//Funcion que controla el filtro de la marca\r\nconst setMark = (event) => {\r\n  setDatosPeticion({\r\n    ...datosPeticion,\r\n    product_brand: event.target.value \r\n  })\r\n}\r\n\r\n//Funcion que controla el filtro del proveedor\r\nconst setProvider = (event) => {\r\n  setDatosPeticion({\r\n    ...datosPeticion,\r\n    product_providers: event.target.value \r\n  })\r\n}\r\n\r\n//Funcion que controla el filtro del tipo de producto\r\nconst setCategory = (event) => {\r\n  setDatosPeticion({\r\n    ...datosPeticion,\r\n    category: event.target.value \r\n  })\r\n}\r\n\r\n//Funcion que controla el filtro del tipo de producto\r\nconst setType = (event) => {\r\n  setDatosPeticion({\r\n    ...datosPeticion,\r\n    product_type: event.target.value \r\n  })\r\n}\r\n\r\n\r\n//Funcion que se ejecuta al solicitar una busqueda.\r\nconst getResult = (datosPeticion) => { //Se pasan los filtros como parametro de la funcion\r\n  \r\n  console.log(datosPeticion)\r\n  \r\n  axios.post('http://localhost:3000/api/products/filters', datosPeticion ) //Aplicar los parametros que entran en getResult\r\n  .then( res => { \r\n    console.log(res);\r\n    setResults(\r\n      resultSearch = res.data\r\n    )\r\n\r\n  }).catch(err => console.log(err)); //mostrar error\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <CatalogLayout>\r\n      <Container fluid>\r\n        <Row>\r\n          <Col md={9}>\r\n            <Row className=\"pt-3 pl-3\">\r\n              <h3>Buscar Producto</h3>\r\n            </Row>\r\n            <Row className=\"p-3\">\r\n              <Card style={{ width: \"100%\" }}>\r\n                <Card.Header>Search</Card.Header>\r\n                <Row className=\"p-3\">\r\n                  <Form className=\"ml-3 w-75\">\r\n                    <Row>\r\n                      <Col className=\"d-flex\">\r\n                        <Label>Product Name</Label>\r\n                        <Form.Control onChange={setName} />\r\n                        {/* <Input onChange={setName}></Input> */}\r\n                      </Col>\r\n                      <Col className=\"d-flex\">\r\n                        <label>Product Code</label>\r\n                        <Form.Control onChange={setCode} />\r\n                      </Col>\r\n                    </Row>\r\n                  </Form>\r\n                </Row>\r\n                <Row className=\"d-flex justify-content-start pl-3 pb-3\">\r\n                  <Button variant=\"primary ml-3\" onClick={() => getResult(datosPeticion)}>Buscar</Button>\r\n                </Row>\r\n              </Card>\r\n            </Row>\r\n          </Col>\r\n          <Col md={3}>\r\n            <Card style={{ width: \"100%\" }} className=\"mt-3\">\r\n              <Card.Header>Filters</Card.Header>\r\n              <Form className=\"p-3\">\r\n                <Form.Control as=\"select\" onChange={setMark} className=\"mb-1\">\r\n                  <option>Marca</option>\r\n                </Form.Control>\r\n                <Form.Control as=\"select\" onChange={setProvider} className=\"mb-1\">\r\n                  <option>Proovedor</option>\r\n                </Form.Control>\r\n                <Form.Control as=\"select\" onChange={setCategory} className=\"mb-1\">\r\n                  <option>Categoría</option>\r\n                </Form.Control>\r\n                <Form.Control as=\"select\" onChange={setType} className=\"mb-1\">\r\n                  <option>Tipo de Producto</option>\r\n                </Form.Control>\r\n              </Form>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Card style={{ width: \"100%\" }} className=\"ml-3 mr-3 p-3\">\r\n            <Row>\r\n              <Table bordered striped hover className=\"ml-3 mr-3\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Name</th>\r\n                    <th>Dolarize</th>\r\n                    <th>Status</th>\r\n                    <th>Brand</th>\r\n                    <th>Category</th>\r\n                    <th>Type</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                      \r\n                      {resultSearch.map( (product) => (\r\n                        <tr>\r\n                        <td>{product.product_id}</td>\r\n                        <td>{product.product_name}</td>\r\n                        <td>{product.product_is_dollar ? 'Si' : 'No' }</td>\r\n                        <td>{product.product_status ? 'Activo' : 'Inactivo'}</td>\r\n                        <td>{product.product_brand}</td>\r\n                        <td>{product.category}</td>\r\n                        <td>{product.product_type}</td>\r\n\r\n\r\n                        <td>\r\n                        <Link to=\"/catalog/editproduct\" >\r\n                        <Button id=\"button-edit\" size=\"sm\"  >\r\n                          <i className=\"mr-1\">< MdModeEdit/></i>\r\n                          <span className=\"align-middle\">Edit</span>\r\n                        </Button>{\" \"}\r\n                        {\"   \"}\r\n                        </Link>\r\n                        <Button\r\n                          id=\"button-delete\"\r\n                          size=\"sm\"                          \r\n                        >\r\n                        <i className=\"mr-1\"><AiTwotoneDelete /></i>\r\n                        <span className=\"align-middle\">Delete</span>\r\n                        </Button>{\" \"}\r\n\r\n                        {\"   \"}\r\n                        <Link to={`/catalog/productview/${product.product_id}`}>\r\n                          <Button id=\"button-view\" size=\"sm\"  >\r\n                            <i className=\"mr-1\"><BsPlusCircle/></i>\r\n                            <span className=\"align-middle\">More</span>\r\n                          </Button>\r\n                          \r\n                        </Link>\r\n                        </td>\r\n                      </tr> \r\n                      ))}                    \r\n\r\n\r\n                  \r\n                </tbody>\r\n              </Table>\r\n            </Row>\r\n            <Row className=\"d-flex justify-content-end\">\r\n              <Pagination className=\"mr-3\">\r\n                <Pagination.Prev disabled />\r\n                <Pagination.Item active>{1}</Pagination.Item>\r\n                <Pagination.Item>{2}</Pagination.Item>\r\n                <Pagination.Item>{3}</Pagination.Item>\r\n                <Pagination.Next />\r\n              </Pagination>\r\n            </Row>\r\n          </Card>\r\n        </Row>\r\n      </Container>\r\n    </CatalogLayout>\r\n  );\r\n};\r\n\r\nexport default SearchProducts;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {Container} from 'reactstrap'\r\nimport iphone from \"./iphone.jpg\";\r\nimport iphone2 from \"./iphone2.jpg\";\r\nimport iphone3 from \"./iphone3.jpg\";\r\n\r\n//Import things for the Carousel\r\nimport {\r\n    Carousel,\r\n    CarouselItem,\r\n    CarouselControl,\r\n    CarouselIndicators,\r\n    CarouselCaption\r\n  } from 'reactstrap';\r\n\r\n\r\n//The items for the Carousel\r\nconst items = [\r\n    {\r\n      src: iphone,\r\n      altText: 'Slide 1',\r\n      caption: 'Slide 1'\r\n    },\r\n    {\r\n      src: iphone2,\r\n      altText: 'Slide 2',\r\n      caption: 'Slide 2'\r\n    },\r\n    {\r\n      src: iphone3,\r\n      altText: 'Slide 3',\r\n      caption: 'Slide 3'\r\n    }\r\n  ]; \r\n\r\n\r\n\r\n\r\n\r\nconst CarouselComponent = (props)=> {\r\n\r\n    //States and function for the Carousel\r\n  const [images, setImages] = useState([]);\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [animating, setAnimating] = useState(false);\r\n\r\n  \r\n  const next = () => {\r\n    if (animating) return;\r\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\r\n    setActiveIndex(nextIndex);\r\n  }\r\n\r\n  const previous = () => {\r\n    if (animating) return;\r\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\r\n    setActiveIndex(nextIndex);\r\n  }\r\n\r\n  const goToIndex = (newIndex) => {\r\n    if (animating) return;\r\n    setActiveIndex(newIndex);\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   setImages(\r\n  //     items.map((item)=>{\r\n  //       images.push(item)\r\n  //     })\r\n  //   );\r\n  //   console.log(images);\r\n  // });\r\n\r\n  const slides = items.map((img) => {\r\n    return (\r\n      <CarouselItem\r\n        onExiting={() => setAnimating(true)}\r\n        onExited={() => setAnimating(false)}\r\n        key={img.src}\r\n      >\r\n        <img src={img.src} alt={img.altText} />\r\n        <CarouselCaption captionText={img.caption} captionHeader={img.caption} />\r\n      </CarouselItem>\r\n    );\r\n  });\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Container>\r\n        <Carousel\r\n            activeIndex={activeIndex}\r\n            next={next}\r\n            previous={previous}\r\n            >\r\n            <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={goToIndex} />\r\n            {slides}\r\n            <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={previous} />\r\n            <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={next} />\r\n        </Carousel>\r\n        \r\n        \r\n    </Container>\r\n  )\r\n  }\r\n\r\nexport default CarouselComponent;","import React from \"react\";\r\nimport {Row, Col, FormGroup, Label} from 'reactstrap'\r\n\r\n\r\nconst IndumentaryProduct = (props)=> {\r\n\r\n  console.log(props.prop) //Llega el array con los atributos de forma correcta.\r\n\r\n  return (\r\n    <Row form >\r\n        <Col md={4}>\r\n            <FormGroup row>\r\n                <Label for=\"\" sm={4}>Curva:</Label>\r\n                <Label for=\"\" sm={4}>{props.prop.product_curve}</Label>\r\n            </FormGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n            <FormGroup row>\r\n                <Label for=\"\" sm={4}>Temporada:</Label>\r\n                <Label for=\"\" sm={4}>{props.product_season}</Label>            \r\n            </FormGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n            <FormGroup row>\r\n                <Label for=\"\" sm={4}>Colores:</Label>\r\n                <Label for=\"\" sm={4}>{props.product_color}</Label>            \r\n            </FormGroup>\r\n        </Col>\r\n    </Row>\r\n    \r\n\r\n  )\r\n}\r\n\r\nexport default IndumentaryProduct;","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Container, Form, Label,  Button,FormGroup, UncontrolledCollapse, ButtonToggle} from \"reactstrap\";\r\nimport CatalogLayout from '../../Layouts/CatalogLayout'\r\nimport CarouselComponent from './carousel'\r\nimport IndumentaryProduct from './indumentaryProduct'\r\nimport RetailProduct from './retailProduct'\r\nimport axios from \"axios\";  \r\n\r\n\r\nconst ProductView = (props) => {\r\n\r\n    const [producto, setProducto] = useState({\r\n        \r\n        // //fields of product_stock table\r\n        // product_sku: '',\r\n        // product_id: '',\r\n        // provider_id: '',\r\n        // product_status:'',\r\n        \r\n        //fields of product table\r\n        product_id:'', //es el codigo de product\r\n        product_name: '',\r\n        product_description: '',\r\n        product_is_dollar: '',\r\n        product_brand: '',\r\n        // product_maker:'', falta en bd\r\n        product_type: '',\r\n        product_in_ecommerce: '',\r\n        product_unit: '',\r\n        product_vol:'',\r\n        product_package:'', //modificar en bd\r\n        product_package_to_client:'', //modificar en bd\r\n        product_max_margin:'',\r\n        product_min_margin:'',\r\n        product_list_price:'', //modificar en bd\r\n        product_bonification:'',\r\n        product_price_bonification: '',\r\n        product_freight_cost:'',\r\n        // product_cost_neto_repo:'', falta en bd\r\n        // product_country_tax:'', falta en bd\r\n        // product_cost_with_tax:'', falta en bd\r\n        product_accountant_type:'',\r\n        product_accountant_account:'',\r\n        product_material:'',\r\n        product_origin:'',\r\n        product_shipping:'',\r\n        product_warranty:'',\r\n        product_barcode:'',\r\n        product_status:'',\r\n        product_category:'',\r\n        product_industry_id:''\r\n        \r\n\r\n\r\n    })\r\n\r\n    //Variable que indica la industria en este momento\r\n    const industry = 'retail'; //se va setear con una propiedad que se pase en props \r\n    //const industry = props.products_industry_id //if = 1 then retail else indumentary\r\n\r\n    //Id del producto que se selecciono para ver \r\n    let id_product = parseInt(props.match.params.id); //se va setear con una propiedad que se pase en props\r\n    \r\n    //Haremos una peticion a la API para traer el objeto producto a partir de la id que nos llega  \r\n    useEffect(() => {\r\n        \r\n       \r\n        \r\n            axios.get('http://localhost:3000/api/products/getproduct/' + id_product)\r\n            .then( res => { \r\n            \r\n            setDataProduct(res.data); //le tenemos que pasar res para setear el objeto local\r\n\r\n            }).catch(err => console.log(err)); //mostrar error\r\n       \r\n        \r\n    }, []);\r\n\r\n    //Funcion que setea el producto con la respuesta de la peticion.\r\n    const setDataProduct = (product) => { //Recibe el product\r\n        \r\n        setProducto ({\r\n            \r\n            product_sku: product.product_sku, \r\n            product_id: product.product_id,  \r\n            provider_id: product.provider_id,     \r\n            product_status: product.product_status,\r\n            product_name: product.product_name,\r\n            product_description: product.product_description, \r\n            product_is_dollar: product.product_is_dollar,\r\n            product_brand: product.product_brand,\r\n            product_maker: product.product_maker,\r\n            product_type: product.product_type,\r\n            product_in_ecommerce: product.product_in_ecommerce,\r\n            //product_images = product.product_images\r\n            product_unit: product.product_unit,\r\n            product_vol: product.product_vol,\r\n            product_package: product.product_package,\r\n            product_package_to_client: product.product_package_to_client,\r\n            product_min_margin: product.product_min_margin,\r\n            product_max_margin: product.product_max_margin,\r\n            product_list_price: product.product_list_price,\r\n            product_bonification : product.product_bonification,\r\n            product_price_bonification : product.product_price_bonification,\r\n            product_freight_cost : product.product_freight_cost,\r\n            // product_cost_neto_repo:'', falta en bd\r\n            // product_country_tax:'', falta en bd\r\n            // product_cost_with_tax:'', falta en bd\r\n            product_accountant_type: product.product_accountant_type,\r\n            product_accountant_account: product.product_accountant_account,\r\n            product_material: product.product_material,\r\n            product_origin: product.product_origin,\r\n            product_shipping: product.product_shipping,\r\n            product_warranty: product.product_warranty,\r\n            product_barcode: product.product_barcode,\r\n            product_status: product.product_status,\r\n            product_category: product.product_category,\r\n            product_industry_id: product.product_industry_id\r\n        \r\n        })\r\n        \r\n        \r\n\r\n      };\r\n      \r\n      //Funcion que controla el dinamismo de los campos de acuerdo a la industria\r\n      let industryMannage = industry === 1 ? (\r\n        <RetailProduct prop={producto}/>\r\n      ) : (\r\n        <IndumentaryProduct prop={producto} />\r\n      );\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n        <CatalogLayout>\r\n            \r\n            <Container>\r\n                <Row>\r\n                    {/*Titulo de la vista */}\r\n                    <Col lg=\"12\" xs=\"12\" style={{marginTop:20}}>\r\n                    <h3>Vista Producto</h3>\r\n                    </Col>\r\n                    \r\n                    {/*Cuerpo de la vista */}\r\n                    <Col lg=\"12\" xs=\"12\" style={{marginTop:25}}>\r\n                        <Form>\r\n\r\n                            {/*Campos comunes para todas las industrias */}\r\n                            <FormGroup row>\r\n                                <Label for=\"\" sm={3}>Código del Producto:</Label>\r\n                                <Label for=\"\" sm={1}>{producto.product_id}</Label>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label for=\"\" sm={3}>Nombre del Producto:</Label>\r\n                                <Label for=\"\" sm={3}>{producto.product_name}</Label>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label for=\"\" sm={3}>Descripción del Producto:</Label>\r\n                                <Label for=\"\" sm={9}>{producto.product_description}</Label>\r\n                            </FormGroup>\r\n                            <Label/>\r\n\r\n                            <Row form >\r\n                                <Col md={6}>\r\n                                    <FormGroup row>\r\n                                        <Label for=\"\" sm={5}>Marca del Producto:</Label>\r\n                                        <Label for=\"\" sm={4}>{producto.product_brand}</Label>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <FormGroup row>\r\n                                        <Label for=\"\" sm={4}>Dolarizado:</Label>\r\n                                        <Label for=\"\" sm={4}>{(producto.product_is_dollar) ? 'Yes' : 'No'}</Label>            \r\n                                    </FormGroup>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Label/>\r\n                            \r\n                            <Row form>\r\n                                <Col md={6}>\r\n                                    <FormGroup row>\r\n                                        <Label for=\"\" sm={5}>Estado del Producto:</Label>\r\n                                        <Label for=\"\" sm={4}>{(producto.product_status) ? 'Active' : 'Inactive'}</Label>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <FormGroup row>\r\n                                        <Label for=\"\" sm={6}>Tipo del Producto:</Label>\r\n                                        <Label for=\"\" sm={4}>{producto.product_type}</Label>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Label/>\r\n\r\n                            <FormGroup row>\r\n                                <Label for=\"\" sm={4}>Categoría del Producto:</Label>\r\n                                <Label for=\"\" sm={8}>{producto.product_category}</Label>\r\n                            </FormGroup>\r\n\r\n                            <br/>\r\n\r\n                            <Row form>\r\n                                <Col md={12}>\r\n                                    <FormGroup row>\r\n                                        <Label for=\"\" sm={3}>Proveedores de Producto:</Label>\r\n                                        <Label for=\"\" sm={6}>Nombre Proveedor</Label>\r\n                                        <Label for=\"\" sm={3}>Codigo Proveedor</Label>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md={12}>\r\n                                    <FormGroup row>\r\n                                        <Label for=\"\" sm={3}></Label>\r\n                                        <Label for=\"\" sm={6}>{producto.product_provider_name}</Label>\r\n                                        <Label for=\"\" sm={3}>{producto.product_provider_code}</Label>\r\n                                    </FormGroup>\r\n                                </Col>                           \r\n                            </Row><br/>\r\n                            \r\n                            <FormGroup row>\r\n                                <Label for=\"\" sm={3}>Publicado en E-Commerce:</Label>\r\n                                <Label for=\"\" sm={3}>{(producto.product_in_ecommerce) ? 'Yes' : 'No'}</Label>\r\n                            </FormGroup>\r\n\r\n                            <Row>\r\n                                <Col md={7} className=\"text-center\">    \r\n                                    <CarouselComponent></CarouselComponent>\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <ButtonToggle color=\"warning\" style={{marginTop:10}}>Ver Propiedades</ButtonToggle>{' '}<br/>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Label/>\r\n\r\n                            {/* Campos no comunes, cada industria tendra sus campos adicionales */}\r\n                            <hr style={{color: 'gray', border:'1px solid'}}/>\r\n                            <Col id=\"togglerCampos\" lg=\"12\" xs=\"12\"  style={{marginTop:20, cursor:\"pointer\"}}>\r\n                                <h4>Ver Más Características</h4>\r\n                            </Col>\r\n                            <UncontrolledCollapse toggler=\"#togglerCampos\">\r\n                            <br/>\r\n                                {industryMannage}\r\n                                <Row form >\r\n                                    <Col md={4}>\r\n                                        <FormGroup row>\r\n                                            <Label for=\"\" sm={4}>Material:</Label>\r\n                                            <Label for=\"\" sm={4}>{producto.product_material}</Label>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        <FormGroup row>\r\n                                            <Label for=\"\" sm={4}>Origen:</Label>\r\n                                            <Label for=\"\" sm={4}>{producto.product_origin}</Label>            \r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        <FormGroup row>\r\n                                            <Label for=\"\" sm={4}>Fabricante:</Label>\r\n                                            <Label for=\"\" sm={4}>{producto.product_maker}</Label>            \r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row form >\r\n                                    <Col md={4}>\r\n                                        <FormGroup row>\r\n                                            <Label for=\"\" sm={4}>Envio:</Label>\r\n                                            <Label for=\"\" sm={4}>{producto.product_shipping}</Label>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        <FormGroup row>\r\n                                            <Label for=\"\" sm={4}>Garantia:</Label>\r\n                                            <Label for=\"\" sm={4}>{producto.product_warranty}</Label>            \r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        <FormGroup row>\r\n                                            <Label for=\"\" sm={4}>Cod. de Barra:</Label>\r\n                                            <Label for=\"\" sm={4}>{producto.product_barcode}</Label>            \r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </UncontrolledCollapse>\r\n\r\n\r\n                            {/* Caracteristicas del Stock del producto */}\r\n                            <hr style={{color: 'gray', border:'1px solid'}}/>\r\n                            <Col id=\"togglerStock\" lg=\"12\" xs=\"12\" style={{marginTop:20, cursor:\"pointer\"}}>\r\n                                <h4>Ver Características de Stock</h4>\r\n                            </Col>\r\n                            <UncontrolledCollapse toggler=\"#togglerStock\">\r\n                            <br/>\r\n                            <Row form>\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"\">Unidad</Label>\r\n                                        <Label for=\"\" sm={3}>{producto.product_unit}</Label> \r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"exampleEmail\">Volumen</Label>\r\n                                        <Label for=\"\" sm={3}>{producto.product_vol}</Label>\r\n                                    </FormGroup> \r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"exampleEmail\">Bultos</Label>\r\n                                        <Label for=\"\" sm={3}>{producto.product_package}</Label>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row form>\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"exampleEmail\">Bultos al Cliente</Label>\r\n                                        <Label for=\"\" sm={3}>{producto.product_package_to_client}</Label>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"exampleEmail\">Margen Minimo</Label>\r\n                                        <Label for=\"\" sm={3}>{producto.product_min_margin}</Label>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"exampleEmail\">Margen Maximo</Label>\r\n                                        <Label for=\"\" sm={3}>{producto.product_max_margin}</Label>\r\n                                    </FormGroup>   \r\n                                </Col>\r\n                            </Row>\r\n                            </UncontrolledCollapse>\r\n\r\n                            {/* Costos y Precios del producto */}\r\n                            <hr style={{color: 'gray', border:'1px solid'}}/>\r\n                            <Col id=\"togglerCostAndPrices\" lg=\"12\" xs=\"12\" style={{marginTop:20, cursor:\"pointer\"}}>\r\n                                <h4>Ver Costos y Precios</h4>\r\n                            </Col>\r\n                            <UncontrolledCollapse toggler=\"#togglerCostAndPrices\">\r\n                            <br/>\r\n                            <Row form>\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"\">Costo Neto/Reposicion:</Label>\r\n                                        <Label for=\"\" sm={3}>{producto.product_cost_neto_repo}</Label> \r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"exampleEmail\">Bonificaciones:</Label>\r\n                                        <Label for=\"\" sm={3}>{producto.product_bonification}</Label>\r\n                                    </FormGroup> \r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"exampleEmail\">Costo c/Bonificaciones:</Label>\r\n                                        <Label for=\"\" sm={3}>{producto.product_price_bonification}</Label>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row form>\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"exampleEmail\">Costo Flete (%):</Label>\r\n                                        <Label for=\"\" sm={3}>{producto.product_freight_cost}</Label>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"exampleEmail\">Tasa Pais (%):</Label>\r\n                                        <Label for=\"\" sm={3}>{producto.product_tax_country}</Label>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"exampleEmail\">Costo Actual c/Impuestos:</Label>\r\n                                        <Label for=\"\" sm={3}>{producto.product_cost_with_tax}</Label>\r\n                                    </FormGroup>   \r\n                                </Col>\r\n                            </Row>\r\n                            </UncontrolledCollapse>\r\n\r\n                            {/* Contables del producto */}\r\n                            <hr style={{color: 'gray', border:'1px solid'}}/>\r\n                            <Col id=\"togglerContables\" lg=\"12\" xs=\"12\" style={{marginTop:20, cursor:\"pointer\"}}>\r\n                                <h4>Ver Contables</h4>\r\n                            </Col>\r\n                            <UncontrolledCollapse toggler=\"#togglerContables\">\r\n                            <br/>\r\n                            <Row form>\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"\">Cuenta:</Label>\r\n                                        <Label for=\"\" sm={3}>{producto.product_accountant_account}</Label> \r\n                                    </FormGroup>\r\n                                </Col>                                \r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"\">Tipo de cuenta:</Label>\r\n                                        <Label for=\"\" sm={3}>{producto.product_accountant_type}</Label> \r\n                                    </FormGroup>\r\n                                </Col>\r\n                                \r\n                            </Row>\r\n                            <Label/>\r\n                            </UncontrolledCollapse>\r\n\r\n                        </Form>\r\n\r\n                        <hr style={{color: 'gray', border:'1px solid'}}/>\r\n                        <Label/>\r\n                        <Row form className=\"content-align-end text-center\">\r\n                            <Col md={12}>\r\n                                <Button color=\"danger\" href=\"/catalog/searchproducts\" style={{margin:20}}>Volver</Button>{' '}\r\n                                <Button color=\"primary\" href=\"/catalog/editproduct\" style={{margin:20}}>Editar Producto</Button>{' '}\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n             </Container>\r\n\r\n\r\n        </CatalogLayout>\r\n    )\r\n}\r\n\r\nexport default ProductView;","import React, { useState } from \"react\";\r\nimport {Container} from 'reactstrap'\r\nimport iphone from \"./iphone.jpg\";\r\nimport iphone2 from \"./iphone2.jpg\";\r\nimport iphone3 from \"./iphone3.jpg\";\r\n\r\n//Import things for the Carousel\r\nimport {\r\n    Carousel,\r\n    CarouselItem,\r\n    CarouselControl,\r\n    CarouselIndicators,\r\n    CarouselCaption\r\n  } from 'reactstrap';\r\n\r\n\r\n//The items for the Carousel\r\nconst items = [\r\n    {\r\n      src: iphone,\r\n      altText: 'Slide 1',\r\n      caption: 'Slide 1'\r\n    },\r\n    {\r\n      src: iphone2,\r\n      altText: 'Slide 2',\r\n      caption: 'Slide 2'\r\n    },\r\n    {\r\n      src: iphone3,\r\n      altText: 'Slide 3',\r\n      caption: 'Slide 3'\r\n    }\r\n  ]; \r\n\r\n\r\n\r\n\r\n\r\nconst CarouselComponent = (props)=> {\r\n\r\n    //States and function for the Carousel\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [animating, setAnimating] = useState(false);\r\n\r\n  const next = () => {\r\n    if (animating) return;\r\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\r\n    setActiveIndex(nextIndex);\r\n  }\r\n\r\n  const previous = () => {\r\n    if (animating) return;\r\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\r\n    setActiveIndex(nextIndex);\r\n  }\r\n\r\n  const goToIndex = (newIndex) => {\r\n    if (animating) return;\r\n    setActiveIndex(newIndex);\r\n  }\r\n\r\n  const slides = items.map((item) => {\r\n    return (\r\n      <CarouselItem\r\n        onExiting={() => setAnimating(true)}\r\n        onExited={() => setAnimating(false)}\r\n        key={item.src}\r\n      >\r\n        <img src={item.src} alt={item.altText} />\r\n        <CarouselCaption captionText={item.caption} captionHeader={item.caption} />\r\n      </CarouselItem>\r\n    );\r\n    });\r\n\r\n\r\n  return (\r\n    <Container>\r\n        <Carousel\r\n            activeIndex={activeIndex}\r\n            next={next}\r\n            previous={previous}\r\n            >\r\n            <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={goToIndex} />\r\n            {slides}\r\n            <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={previous} />\r\n            <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={next} />\r\n        </Carousel>\r\n        \r\n        \r\n    </Container>\r\n  )\r\n  }\r\n\r\nexport default CarouselComponent;","import React, { useState } from \"react\";\r\nimport {Row, Col, FormGroup, Label, Input} from 'reactstrap'\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst RetailProduct = (props)=> {\r\n\r\n    const {  errors } = useForm();\r\n\r\n  return (\r\n    <>\r\n  \r\n    <Row form>\r\n        <Col md={4}>\r\n        <FormGroup>\r\n            <Label for=\"\">Linea</Label>\r\n            <Input\r\n            type=\"text\"\r\n            name=\"linea\"\r\n            ></Input>\r\n            <span className=\"text-danger span d-block mb-2\">\r\n            {errors?.linea?.message}\r\n            </span>\r\n        </FormGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n        <FormGroup>\r\n            <Label for=\"\">Segmento</Label>\r\n            <Input\r\n            type=\"select\"\r\n            name=\"segmento\"\r\n            ></Input>\r\n            <span className=\"text-danger span d-block mb-2\">\r\n            {errors?.segmento?.message}\r\n            </span>\r\n        </FormGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n        <FormGroup>\r\n            <Label for=\"\">Service</Label>\r\n            <Input\r\n            type=\"select\"\r\n            name=\"service\"\r\n            ></Input>\r\n            <span className=\"text-danger span d-block mb-2\">\r\n            {errors?.service?.message}\r\n            </span>\r\n        </FormGroup>\r\n        </Col>\r\n    </Row>\r\n    <Row form>\r\n        <Col md={4}>\r\n        <FormGroup>\r\n            <Label for=\"\">Serie</Label>\r\n            <Input\r\n            type=\"select\"\r\n            name=\"serie\"\r\n            ></Input>\r\n            <span className=\"text-danger span d-block mb-2\">\r\n            {errors?.serie?.message}\r\n            </span>\r\n        </FormGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n        <FormGroup>\r\n            <Label for=\"\">Modelo</Label>\r\n            <Input\r\n            type=\"select\"\r\n            name=\"modelo\"\r\n            ></Input>\r\n            <span className=\"text-danger span d-block mb-2\">\r\n            {errors?.modelo?.message}\r\n            </span>\r\n        </FormGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n        <FormGroup>\r\n            <Label for=\"\">NTecnico</Label>\r\n            <Input\r\n            type=\"select\"\r\n            name=\"nTecnico\"\r\n            ></Input>\r\n            <span className=\"text-danger span d-block mb-2\">\r\n            {errors?.nTecnico?.message}\r\n            </span>\r\n        </FormGroup>\r\n        </Col>\r\n    </Row>\r\n    <Row form>\r\n        <Col md={12}>\r\n        <FormGroup>\r\n            <Label for=\"\">Datos Tecnicos</Label>\r\n            <Col sm={12}>\r\n                  <Input\r\n                    type=\"textarea\"\r\n                    name=\"datos tecnicos\"\r\n                    placeholder=\"Ingrese datos tecnicos\"\r\n                    \r\n                  />\r\n            </Col>\r\n        </FormGroup>\r\n        </Col>\r\n        \r\n    </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RetailProduct;","//imports of all required libraries and components\r\nimport React,{ useState } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  FormGroup,\r\n  CustomInput,\r\n  UncontrolledCollapse, ButtonToggle,\r\n  Button,\r\n  Alert,\r\n} from \"reactstrap\";\r\nimport CatalogLayout from \"../../Layouts/CatalogLayout\";\r\nimport \"./index.css\";\r\nimport CarouselComponent from \"./carousel\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport IndumentaryProduct from './indumentaryProduct';\r\nimport RetailProduct from './retailProduct';\r\n\r\nconst NewProduct = (props) => {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  //This a function we use when te user click on \"Add Image\" button\r\n  const buttonAddImageClick = () => {\r\n    Array.prototype.forEach.call(\r\n      document.querySelectorAll(\".file-upload-button\"),\r\n      function (button) {\r\n        const hiddenInput = button.parentElement.querySelector(\r\n          \".file-upload-input\"\r\n        );\r\n        hiddenInput.click();\r\n      }\r\n    );\r\n  };\r\n\r\n  const hiddenInputChange = () => {\r\n    Array.prototype.forEach.call(\r\n      document.querySelectorAll(\".file-upload-button\"),\r\n      function (button) {\r\n        const hiddenInput = button.parentElement.querySelector(\r\n          \".file-upload-input\"\r\n        );\r\n        const label = button.parentElement.querySelector(\".file-upload-label\");\r\n        const filenameList = Array.prototype.map.call(\r\n          hiddenInput.files,\r\n          function (file) {\r\n            return file.name;\r\n          }\r\n        );\r\n\r\n        label.textContent = filenameList.join(\", \") || \"No file\";\r\n        label.title = label.textContent;\r\n      }\r\n    );\r\n  };\r\n\r\n  //This function prepared the data to be sent to the server. transforming the input to integer or float\r\n  const transformToNumber = (data) => {\r\n    //transform to integer\r\n    data.codproduct = parseInt(data.codproduct);\r\n    data.bultos = parseInt(data.bultos);\r\n    data.volumen = parseInt(data.volumen);\r\n    data.bultosClientes = parseInt(data.bultosClientes);\r\n    data.margenMinimo = parseInt(data.margenMinimo);\r\n    data.margenMaximo = parseInt(data.margenMaximo);\r\n    //transform to float\r\n    data.costoNetoReposicion = parseFloat(data.costoNetoReposicion);\r\n    data.bonificaciones = parseFloat(data.bonificaciones);\r\n    data.costoConBonificacion = parseFloat(data.costoConBonificacion);\r\n    data.costoFlete = parseFloat(data.costoFlete);\r\n    data.tasaPais = parseFloat(data.tasaPais);\r\n    data.costoActualConImp = parseFloat(data.costoActualConImp);\r\n    data.precioLista = parseFloat(data.precioLista);\r\n  };\r\n\r\n  /*const notification = (err) => {\r\n    alert = (err)?(<Alert color=\"danger\">This is a success alert — check it out!</Alert>)\r\n    :(<Alert color=\"success\">This is a success alert — check it out!</Alert>)\r\n    setNotification({\r\n      notificacion: true\r\n    })\r\n  };*/\r\n\r\n  //Sending data to the server\r\n  const onSubmit = (data, e) => {\r\n    transformToNumber(data);\r\n    axios\r\n      .post(\"http://localhost:3000/api/catalog/newproduct\", data)\r\n      .then((res) => \"Nuevo producto cargado en la BD\")\r\n      .catch((err) => console.log(err));\r\n      onDismiss();\r\n    e.preventDefault();\r\n    \r\n  };\r\n  //status to control the visibility of the alert\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const onDismiss = () => setVisible(\r\n    !visible\r\n  );\r\n\r\n\r\n  //Variable que indica la industria en este momento\r\n  //const industry = 'retail'; //se va setear con una propiedad que se pase en props \r\n  const industry = 'retail';\r\n\r\n  //Funcion que controla el dinamismo de los campos de acuerdo a la industria\r\n  let industryMannage = industry === 'retail' ? (\r\n    <RetailProduct />\r\n  ) : (\r\n    <IndumentaryProduct />\r\n  );\r\n\r\n  return (\r\n    <CatalogLayout>\r\n      <Container>\r\n        <span>\r\n          <Alert color=\"success\" isOpen={visible} toggle={onDismiss}>\r\n            Producto guardado exitosamente!\r\n          </Alert>\r\n        </span>\r\n        <Row>\r\n          <Col lg=\"12\" xs=\"12\" style={{ marginTop: 20 }}>\r\n            <h3>Nuevo Producto</h3>\r\n          </Col>\r\n\r\n          <Col lg=\"12\" xs=\"12\" style={{ marginTop: 25 }}>\r\n            <Form onSubmit={handleSubmit(onSubmit)}>\r\n              <FormGroup row>\r\n                <Label for=\"codproduct\" sm={3}>\r\n                  Código de Producto\r\n                </Label>\r\n                <Col sm={9}>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"codproduct\"\r\n                    innerRef={register({\r\n                      required: {\r\n                        value: true,\r\n                        message: \"codigo del producto es requerido\",\r\n                      },\r\n                    })}\r\n                  />\r\n                  <span className=\"text-danger span d-block mb-2\">\r\n                    {errors?.codproduct?.message}\r\n                  </span>\r\n                </Col>\r\n              </FormGroup>\r\n              <FormGroup row>\r\n                <Label for=\"examplePassword\" sm={3}>\r\n                  Nombre de Producto\r\n                </Label>\r\n                <Col sm={9}>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"nameproduct\"\r\n                    placeholder=\"Ingresar el nombre de producto\"\r\n                    innerRef={register({\r\n                      required: {\r\n                        value: true,\r\n                        message: \"Nombre del producto es requerido\",\r\n                      },\r\n                    })}\r\n                  />\r\n                  <span className=\"text-danger span d-block mb-2\">\r\n                    {errors?.nameproduct?.message}\r\n                  </span>\r\n                </Col>\r\n              </FormGroup>\r\n              <FormGroup row>\r\n                <Label for=\"\" sm={3}>\r\n                  Descripción\r\n                </Label>\r\n                <Col sm={9}>\r\n                  <Input\r\n                    type=\"textarea\"\r\n                    name=\"description\"\r\n                    placeholder=\"Ingrese una descripcion\"\r\n                    innerRef={register}\r\n                  />\r\n                </Col>\r\n              </FormGroup>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"\">Marca</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"marca\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"marca es requerido\",\r\n                        },\r\n                      })}\r\n                    >\r\n                      <option>Marca 1</option>\r\n                      <option>Marca 2</option>\r\n                      <option>Marca 3</option>\r\n                    </Input>\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.marca?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={3}>\r\n                  <FormGroup>\r\n                    <Label for=\"\">Dolarizado</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"dolarizado\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"dolarizado es requerido\",\r\n                        },\r\n                      })}\r\n                    >\r\n                      <option>No</option>\r\n                      <option>Si</option>\r\n                    </Input>\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.dolarizado?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"\">Categoria</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"categoria\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"categoria es requerido\",\r\n                        },\r\n                      })}\r\n                    >\r\n                      <option>Categoria 1</option>\r\n                      <option>Categoria 2</option>\r\n                      <option>Categoria 3</option>\r\n                    </Input>\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.dolarizado?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"\">Tipo</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"tipo\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"categoria es requerido\",\r\n                        },\r\n                      })}\r\n                    >\r\n                      <option>Tipo 1</option>\r\n                      <option>Tipo 2</option>\r\n                      <option>Tipo 3</option>\r\n                    </Input>\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.tipo?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={3}>\r\n                  <FormGroup>\r\n                    <Label for=\"\">Estado</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"estado\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Estado es requerido\",\r\n                        },\r\n                      })}\r\n                    >\r\n                      <option>Estado 1</option>\r\n                      <option>Estado 2</option>\r\n                      <option>Estado 3</option>\r\n                    </Input>\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.estado?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"\">Proveedor</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"proveedor\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Proveedor es requerido\",\r\n                        },\r\n                      })}\r\n                    >\r\n                      <option>Proveedor 1</option>\r\n                      <option>Proveedor 2</option>\r\n                      <option>Proveedor 3</option>\r\n                    </Input>\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.proveedor?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={3}>\r\n                  <FormGroup>\r\n                    <Label for=\"exampleEmail\">Código de Proveedor</Label>\r\n                    <Input type=\"number\" name=\"codProveedor\" disabled />{\" \"}\r\n                    {/*why??*/}\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <FormGroup>\r\n                <Label for=\"exampleCheckbox\" style={{ display: \"inline\" }}>\r\n                  Publicado en E-Commerce\r\n                </Label>\r\n                <div>\r\n                  <CustomInput\r\n                    type=\"checkbox\"\r\n                    id=\"exampleCustomRadio\"\r\n                    name=\"customRadio\"\r\n                    label=\"\"\r\n                    innerRef={register}\r\n                  />\r\n                </div>\r\n              </FormGroup>\r\n              <Row>\r\n                <Col md={8}>\r\n                  <CarouselComponent></CarouselComponent>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <ButtonToggle\r\n                    type=\"file\"\r\n                    color=\"primary\"\r\n                    style={{ marginTop: 10 }}\r\n                  >\r\n                    Añadir Imagen\r\n                  </ButtonToggle>{\" \"}\r\n                  <br />\r\n                  <ButtonToggle color=\"danger\" style={{ marginTop: 10 }}>\r\n                    Remover Imagen\r\n                  </ButtonToggle>{\" \"}\r\n                  <br />\r\n                  <ButtonToggle color=\"danger\" style={{ marginTop: 10 }}>\r\n                    Remover Todo\r\n                  </ButtonToggle>{\" \"}\r\n                  <br />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Label/>\r\n\r\n              {/* Campos no comunes, cada industria tendra sus campos adicionales */}\r\n              <hr style={{color: 'gray', border:'1px solid'}}/>\r\n              <Col id=\"togglerCampos\" lg=\"12\" xs=\"12\"  style={{marginTop:20, cursor:\"pointer\"}}>\r\n                  <h4>Agregar Más Características</h4>\r\n              </Col>\r\n              <UncontrolledCollapse toggler=\"#togglerCampos\">\r\n                  <br/>\r\n                  {industryMannage}\r\n                  <Row form>\r\n                      <Col md={4}>\r\n                      <FormGroup>\r\n                          <Label for=\"\">Material</Label>\r\n                          <Input\r\n                          type=\"select\"\r\n                          name=\"material\"\r\n                          ></Input>\r\n                          <span className=\"text-danger span d-block mb-2\">\r\n                          {errors?.material?.message}\r\n                          </span>\r\n                      </FormGroup>\r\n                      </Col>\r\n                      <Col md={4}>\r\n                      <FormGroup>\r\n                          <Label for=\"\">Origen</Label>\r\n                          <Input\r\n                          type=\"select\"\r\n                          name=\"origen\"\r\n                          ></Input>\r\n                          <span className=\"text-danger span d-block mb-2\">\r\n                          {errors?.origen?.message}\r\n                          </span>\r\n                      </FormGroup>\r\n                      </Col>\r\n                      <Col md={4}>\r\n                      <FormGroup>\r\n                          <Label for=\"\">Fabricante</Label>\r\n                          <Input\r\n                          type=\"select\"\r\n                          name=\"fabricante\"\r\n                          ></Input>\r\n                          <span className=\"text-danger span d-block mb-2\">\r\n                          {errors?.fabricante?.message}\r\n                          </span>\r\n                      </FormGroup>\r\n                      </Col>\r\n                  </Row>\r\n                  <Row form>\r\n                      <Col md={4}>\r\n                      <FormGroup>\r\n                          <Label for=\"\">Envio</Label>\r\n                          <Input\r\n                          type=\"select\"\r\n                          name=\"envio\"\r\n                          ></Input>\r\n                          <span className=\"text-danger span d-block mb-2\">\r\n                          {errors?.envio?.message}\r\n                          </span>\r\n                      </FormGroup>\r\n                      </Col>\r\n                      <Col md={4}>\r\n                      <FormGroup>\r\n                          <Label for=\"\">Garantia</Label>\r\n                          <Input\r\n                          type=\"select\"\r\n                          name=\"garantia\"\r\n                          ></Input>\r\n                          <span className=\"text-danger span d-block mb-2\">\r\n                          {errors?.garantia?.message}\r\n                          </span>\r\n                      </FormGroup>\r\n                      </Col>\r\n                      <Col md={4}>\r\n                      <FormGroup>\r\n                          <Label for=\"\">Codigo de Barra</Label>\r\n                          <Input\r\n                          type=\"select\"\r\n                          name=\"codbarra\"\r\n                          ></Input>\r\n                          <span className=\"text-danger span d-block mb-2\">\r\n                          {errors?.codbarra?.message}\r\n                          </span>\r\n                      </FormGroup>\r\n                      </Col>\r\n                  </Row> \r\n                </UncontrolledCollapse>\r\n\r\n              {/* Caracteristicas de Stock */}\r\n              <hr style={{ color: \"gray\", border: \"1px solid\" }} />\r\n              <Col id=\"togglerStock\" lg=\"12\" xs=\"12\" style={{ marginTop: 20, cursor:\"pointer\" }}>\r\n                <h4>Agregar Caracteristicas de Stock</h4>\r\n              </Col>\r\n              <UncontrolledCollapse toggler=\"#togglerStock\">\r\n              <br/>\r\n              <Row form>\r\n                <Col md={4}>\r\n                  <FormGroup>\r\n                    <Label for=\"\">Unidad</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"unidad\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Proveedor es requerido\",\r\n                        },\r\n                      })}\r\n                    >\r\n                      <option>U</option>\r\n                      <option>L</option>\r\n                      <option>B</option>\r\n                    </Input>\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.unidad?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <FormGroup>\r\n                    <Label for=\"exampleEmail\">Volumen</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"volumen\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Volumen es requerido\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.volumen?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <FormGroup>\r\n                    <Label for=\"exampleEmail\">Bultos</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"bultos\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Bultos es requerido\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.bultos?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={4}>\r\n                  <FormGroup>\r\n                    <Label for=\"exampleEmail\">Bultos al Cliente</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"bultosClientes\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Bultos es requerido\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.bultosClientes?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <FormGroup>\r\n                    <Label for=\"exampleEmail\">Margen Minimo</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"margenMinimo\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Margen minimo es requerido\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.margenMinimo?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <FormGroup>\r\n                    <Label for=\"exampleEmail\">Margen Maximo</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"margenMaximo\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Margen maximo es requerido\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.margenMaximo?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                  \r\n                </Col>\r\n              </Row>\r\n              </UncontrolledCollapse>\r\n\r\n              {/* Costos y Precios */}\r\n              <hr style={{ color: \"gray\", border: \"1px solid\" }} />\r\n              <Col id=\"togglerCostosyPrecios\" lg=\"12\" xs=\"12\" style={{ marginTop: 20, cursor:\"pointer\" }}>\r\n                <h4>Agregar Costos y Precios</h4>\r\n              </Col>\r\n              <UncontrolledCollapse toggler=\"#togglerCostosyPrecios\">\r\n              <br/>\r\n              <Row form>\r\n                <Col md={3}>\r\n                  <FormGroup>\r\n                    <Label for=\"exampleEmail\">Costo Neto/Reposicion</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"costoNetoReposicion\"\r\n                      step=\"0.01\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Costo Neto de reposicion es requerido\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.costoNetoReposicion?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={4}>\r\n                  <FormGroup>\r\n                    <Label for=\"exampleEmail\">Bonificaciones</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"bonificaciones\"\r\n                      step=\"0.01\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Bonificaciones es requerido\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.bonificaciones?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <FormGroup>\r\n                    <Label for=\"exampleEmail\">Costo con Bonificacion</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"costoConBonificacion\"\r\n                      step=\"0.01\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Costo con Bonificacion es requerido\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.costoConBonificacion?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={3}>\r\n                  <FormGroup>\r\n                    <Label for=\"exampleEmail\">Costo Flete %</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"costoFlete\"\r\n                      step=\"0.01\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Costo flete % es requerido\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.costoFlete?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={3}>\r\n                  <FormGroup>\r\n                    <Label for=\"exampleEmail\">Tasa Pais %</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"tasaPais\"\r\n                      step=\"0.01\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Margen maximo es requerido\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.tasaPais?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={4}>\r\n                  <FormGroup>\r\n                    <Label for=\"exampleEmail\">Costo actual con impuestos</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"costoActualConImp\"\r\n                      step=\"0.01\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Costo actual con impuesto es requerido\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.costoActualConImp?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={4}>\r\n                  <FormGroup>\r\n                    <Label for=\"exampleEmail\">Precio de Lista</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"precioLista\"\r\n                      step=\"0.01\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Precio de Lista es requerido\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.precioLista?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <Button\r\n                    style={{\r\n                      marginTop: 32,\r\n                      backgroundColor: \"rgb(247, 147, 1)\",\r\n                    }}\r\n                  >\r\n                    Agregar Lista al Producto\r\n                  </Button>{\" \"}\r\n                  <Button\r\n                    style={{\r\n                      marginTop: 32,\r\n                      backgroundColor: \"rgb(247, 147, 1)\",\r\n                    }}\r\n                  >\r\n                    Otras Bonificaciones\r\n                  </Button>{\" \"}\r\n                </Col>\r\n              </Row>\r\n              </UncontrolledCollapse>\r\n\r\n\r\n              {/* Contables */}\r\n              <hr style={{ color: \"gray\", border: \"1px solid\" }} />\r\n              <Col id=\"togglerContables\" lg=\"12\" xs=\"12\" style={{ marginTop: 20, cursor:\"pointer\" }}>\r\n                <h4>Agregar Caracteristicas Contables</h4>\r\n              </Col>\r\n              <UncontrolledCollapse toggler=\"#togglerContables\">\r\n              <br/>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"\">Tipo</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"tipoContable\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Tipo es requerido\",\r\n                        },\r\n                      })}\r\n                    >\r\n                      <option>Bienes de cambio</option>\r\n                      <option>Tipo 2</option>\r\n                      <option>Tipo 3</option>\r\n                    </Input>\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.tipoContable?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"\">Cuenta</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"cuenta\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Cuenta es requerido\",\r\n                        },\r\n                      })}\r\n                    >\r\n                      <option>Venta de Mercaderia</option>\r\n                      <option>Cuenta 2</option>\r\n                      <option>Cuenta 3</option>\r\n                    </Input>\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.cuenta?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Label/>\r\n              </UncontrolledCollapse>\r\n\r\n              <hr style={{ color: \"gray\", border: \"1px solid\" }} />\r\n              <Row form className=\"content-align-end text-center\">\r\n                <Col md={12}>\r\n                  <Button color=\"danger\" style={{ margin: 20 }}>\r\n                    Cancelar\r\n                  </Button>{\" \"}\r\n                  <Button color=\"primary\" type=\"submit\" style={{ margin: 20 }}>\r\n                    Guardar Producto\r\n                  </Button>{\" \"}\r\n                </Col>\r\n              </Row>\r\n              \r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </CatalogLayout>\r\n  );\r\n};\r\n\r\nexport default NewProduct;\r\n","import React, { useState } from \"react\";\r\nimport {Container} from 'reactstrap'\r\nimport iphone from \"./iphone.jpg\";\r\nimport iphone2 from \"./iphone2.jpg\";\r\nimport iphone3 from \"./iphone3.jpg\";\r\n\r\n//Import things for the Carousel\r\nimport {\r\n    Carousel,\r\n    CarouselItem,\r\n    CarouselControl,\r\n    CarouselIndicators,\r\n    CarouselCaption\r\n  } from 'reactstrap';\r\n\r\n\r\n//The items for the Carousel\r\nconst items = [\r\n    {\r\n      src: iphone,\r\n      altText: 'Slide 1',\r\n      caption: 'Slide 1'\r\n    },\r\n    {\r\n      src: iphone2,\r\n      altText: 'Slide 2',\r\n      caption: 'Slide 2'\r\n    },\r\n    {\r\n      src: iphone3,\r\n      altText: 'Slide 3',\r\n      caption: 'Slide 3'\r\n    }\r\n  ]; \r\n\r\n\r\n\r\n\r\n\r\nconst CarouselComponent = (props)=> {\r\n\r\n    //States and function for the Carousel\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [animating, setAnimating] = useState(false);\r\n\r\n  const next = () => {\r\n    if (animating) return;\r\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\r\n    setActiveIndex(nextIndex);\r\n  }\r\n\r\n  const previous = () => {\r\n    if (animating) return;\r\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\r\n    setActiveIndex(nextIndex);\r\n  }\r\n\r\n  const goToIndex = (newIndex) => {\r\n    if (animating) return;\r\n    setActiveIndex(newIndex);\r\n  }\r\n\r\n  const slides = items.map((item) => {\r\n    return (\r\n      <CarouselItem\r\n        onExiting={() => setAnimating(true)}\r\n        onExited={() => setAnimating(false)}\r\n        key={item.src}\r\n      >\r\n        <img src={item.src} alt={item.altText} />\r\n        <CarouselCaption captionText={item.caption} captionHeader={item.caption} />\r\n      </CarouselItem>\r\n    );\r\n    });\r\n\r\n\r\n  return (\r\n    <Container>\r\n        <Carousel\r\n            activeIndex={activeIndex}\r\n            next={next}\r\n            previous={previous}\r\n            >\r\n            <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={goToIndex} />\r\n            {slides}\r\n            <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={previous} />\r\n            <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={next} />\r\n        </Carousel>\r\n        \r\n        \r\n    </Container>\r\n  )\r\n  }\r\n\r\nexport default CarouselComponent;","import React, { useState, useEffect } from \"react\";\r\nimport {Row, Col, FormGroup, Label, Input} from 'reactstrap'\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst RetailProduct = (props)=> {\r\n\r\n    const {  register, errors } = useForm();\r\n\r\n    const productFantasy = [\r\n        {\r\n            codProduct: 1,\r\n            nameProduct: \"product1\",\r\n            Descripción: \"this is a test\",\r\n            Marca: \"Marca1\",\r\n            Dolarizado: \"si\",\r\n            Categoria: \"categoria 1\",\r\n            Estado: \"Estado 1\",\r\n            Proveedor: \"Proveedor 1\",\r\n            CódProveedor: \"22\",\r\n            Unidad: \"L\",\r\n            Volumen: 23,\r\n            Bultos: 41,\r\n            BultoCliente: 25,\r\n            margenMinimo: 15,\r\n            margenMaximo: 20,\r\n            costoNetoRepo: 23,\r\n            Bonificaciones: 56,\r\n            CostoBonificacion: 25,\r\n            CostoFlete: 23,\r\n            tasaPais: 10,\r\n            costoActualConImp: 12,\r\n            precioLista: 120,\r\n            tipoContable: \"Tipo 2\",\r\n            cuentaContable: \"Cuenta 3\",\r\n            linea:\"ejemplolinea\",\r\n            segmento:\"ejemplosegmento\",\r\n            service:\"ejemploservice\",\r\n            serie:\"ejemploserie\",\r\n            modelo:\"ejemplomodelo\",\r\n            ntecnico:\"ejemplo ntecnico\",\r\n            datostecnicos:'esto seria un ejemplo de datos tecnicos del producto si tuviese datos tecnicos'\r\n\r\n        },\r\n\r\n        {\r\n          codProduct: 2,\r\n          nameProduct: \"product2\",\r\n          Descripción: \"test2\",\r\n          Marca: \"Marca2\",\r\n          Dolarizado: \"no\",\r\n          Categoria: \"categoria 2\",\r\n          Tipo: \"tipo 2\",\r\n          Estado: \"Estado 2\",\r\n          Proveedor: \"Provedor 2\",\r\n          CódProveedor: \"335\",\r\n          Unidad: \"L\",\r\n          Volumen: \"\",\r\n          Bulto: \"\",\r\n        },\r\n    ]\r\n\r\n      //Imitating the selected product\r\n  const id = 1;\r\n\r\n      //product status and selected product\r\n  const [productselect, setProductSelect] = useState({});\r\n  const [products, setProducts] = useState([]);\r\n\r\n    //this function gets the data from the server\r\n    useEffect(() => {\r\n        setProducts(productFantasy);\r\n        const arrayEdit = productFantasy.map((item) =>\r\n          item.codProduct === id\r\n            ? setProductSelect(item)\r\n            : console.log(\"product not found\")\r\n        );\r\n        setProducts(arrayEdit);\r\n      }, []);\r\n\r\n  return (\r\n    <>\r\n  \r\n    <Row form>\r\n        <Col md={4}>\r\n        <FormGroup>\r\n            <Label for=\"\">Linea</Label>\r\n            <Input\r\n            type=\"text\"\r\n            name=\"linea\"\r\n            value={productselect.linea}\r\n            innerRef={register({\r\n                required: {\r\n                  value: false,\r\n                  message: \"no es requerido\",\r\n                },\r\n              })}\r\n            ></Input>\r\n            <span className=\"text-danger span d-block mb-2\">\r\n            {errors?.linea?.message}\r\n            </span>\r\n        </FormGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n        <FormGroup>\r\n            <Label for=\"\">Segmento</Label>\r\n            <Input\r\n            type=\"text\"\r\n            name=\"segmento\"\r\n            value={productselect.segmento}\r\n            innerRef={register({\r\n                required: {\r\n                  value: false,\r\n                  message: \"no es requerido\",\r\n                },\r\n              })}\r\n            ></Input>\r\n            <span className=\"text-danger span d-block mb-2\">\r\n            {errors?.segmento?.message}\r\n            </span>\r\n        </FormGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n        <FormGroup>\r\n            <Label for=\"\">Service</Label>\r\n            <Input\r\n            type=\"text\"\r\n            name=\"service\"\r\n            value={productselect.service}\r\n            innerRef={register({\r\n                required: {\r\n                  value: false,\r\n                  message: \"no es requerido\",\r\n                },\r\n              })}\r\n            ></Input>\r\n            <span className=\"text-danger span d-block mb-2\">\r\n            {errors?.service?.message}\r\n            </span>\r\n        </FormGroup>\r\n        </Col>\r\n    </Row>\r\n    <Row form>\r\n        <Col md={4}>\r\n        <FormGroup>\r\n            <Label for=\"\">Serie</Label>\r\n            <Input\r\n            type=\"text\"\r\n            name=\"serie\"\r\n            value={productselect.serie}\r\n            innerRef={register({\r\n                required: {\r\n                  value: false,\r\n                  message: \"no es requerido\",\r\n                },\r\n              })}\r\n            ></Input>\r\n            <span className=\"text-danger span d-block mb-2\">\r\n            {errors?.serie?.message}\r\n            </span>\r\n        </FormGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n        <FormGroup>\r\n            <Label for=\"\">Modelo</Label>\r\n            <Input\r\n            type=\"text\"\r\n            name=\"modelo\"\r\n            value={productselect.modelo}\r\n            innerRef={register({\r\n                required: {\r\n                  value: false,\r\n                  message: \"no es requerido\",\r\n                },\r\n              })}\r\n            ></Input>\r\n            <span className=\"text-danger span d-block mb-2\">\r\n            {errors?.modelo?.message}\r\n            </span>\r\n        </FormGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n        <FormGroup>\r\n            <Label for=\"\">NTecnico</Label>\r\n            <Input\r\n            type=\"text\"\r\n            name=\"nTecnico\"\r\n            value={productselect.ntecnico}\r\n            innerRef={register({\r\n                required: {\r\n                  value: false,\r\n                  message: \"no es requerido\",\r\n                },\r\n              })}\r\n            ></Input>\r\n            <span className=\"text-danger span d-block mb-2\">\r\n            {errors?.nTecnico?.message}\r\n            </span>\r\n        </FormGroup>\r\n        </Col>\r\n    </Row>\r\n    <Row form>\r\n        <Col md={12}>\r\n        <FormGroup>\r\n            <Label for=\"\">Datos Tecnicos</Label>\r\n            <Col sm={12}>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"datos tecnicos\"\r\n                    value={productselect.datostecnicos}\r\n                    innerRef={register({\r\n                        required: {\r\n                          value: false,\r\n                          message: \"no es requerido\",\r\n                        },\r\n                      })}\r\n                  />\r\n            </Col>\r\n        </FormGroup>\r\n        </Col>\r\n        \r\n    </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RetailProduct;","//imports of all required libraries and components\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  FormGroup,\r\n  CustomInput,\r\n  ButtonToggle,\r\n  UncontrolledCollapse,\r\n  Button,\r\n  Alert,\r\n} from \"reactstrap\";\r\nimport CatalogLayout from \"../../Layouts/CatalogLayout\";\r\nimport axios from \"axios\";\r\nimport CarouselComponent from \"./carousel\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport IndumentaryProduct from './indumentaryProduct'\r\nimport RetailProduct from './retailProduct'\r\n\r\n// EditProduct Component\r\nconst EditProduct = (props) => {\r\n  //imitating api data\r\n  const listproducts = [\r\n    {\r\n      codProduct: 1,\r\n      nameProduct: \"product1\",\r\n      Descripción: \"this is a test\",\r\n      Marca: \"Marca1\",\r\n      Dolarizado: \"si\",\r\n      Categoria: \"categoria 1\",\r\n      Estado: \"Estado 1\",\r\n      Proveedor: \"Proveedor 1\",\r\n      CódProveedor: \"22\",\r\n      Unidad: \"L\",\r\n      Volumen: 23,\r\n      Bultos: 41,\r\n      BultoCliente: 25,\r\n      margenMinimo: 15,\r\n      margenMaximo: 20,\r\n      costoNetoRepo: 23,\r\n      Bonificaciones: 56,\r\n      CostoBonificacion: 25,\r\n      CostoFlete: 23,\r\n      tasaPais: 10,\r\n      costoActualConImp: 12,\r\n      precioLista: 120,\r\n      tipoContable: \"Tipo 2\",\r\n      cuentaContable: \"Cuenta 3\",\r\n      fabricante: \"nombredelfabricante1\",\r\n      garantia:\"nombredelagarantia\",\r\n      material:\"nombredelmaterial\",\r\n      origen:\"origendelprod\",\r\n      envio:\"enviodelprod\",\r\n      codbarra:\"codbarradelprod\"\r\n\r\n    },\r\n\r\n    {\r\n      codProduct: 2,\r\n      nameProduct: \"product2\",\r\n      Descripción: \"test2\",\r\n      Marca: \"Marca2\",\r\n      Dolarizado: \"no\",\r\n      Categoria: \"categoria 2\",\r\n      Tipo: \"tipo 2\",\r\n      Estado: \"Estado 2\",\r\n      Proveedor: \"Provedor 2\",\r\n      CódProveedor: \"335\",\r\n      Unidad: \"L\",\r\n      Volumen: \"\",\r\n      Bulto: \"\",\r\n    },\r\n    {\r\n      codProduct: 3,\r\n      nameProduct: \"product3\",\r\n      Descripción: \"test3\",\r\n      Marca: \"Marca3\",\r\n      Dolarizado: \"si\",\r\n      Categoria: \"categoria 3\",\r\n      Tipo: \"tipo 2\",\r\n      Estado: \"Estado 3\",\r\n      Proveedor: \"Proveedor 3\",\r\n      CódProveedor: \"336\",\r\n      Unidad: \"B\",\r\n      Volumen: \"\",\r\n      Bulto: \"\",\r\n    },\r\n    {\r\n      codProduct: 4,\r\n      nameProduct: \"product4\",\r\n      Descripción: \"test4\",\r\n      Marca: \"Marca1\",\r\n      Dolarizado: \"no\",\r\n      Categoria: \"categoria 1\",\r\n      Tipo: \"tipo 3\",\r\n      Estado: \"Estado 1\",\r\n      Proveedor: \"Proveedor 1\",\r\n      CódProveedor: \"256\",\r\n      Unidad: \"B\",\r\n      Volumen: \"\",\r\n      Bulto: \"\",\r\n    },\r\n  ];\r\n  //Imitating the selected product\r\n  const id = 1;\r\n\r\n  //using the react hook form library for validations\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  //product status and selected product\r\n  const [productselect, setProductSelect] = useState({});\r\n  const [products, setProducts] = useState([]);\r\n\r\n  //this function gets the data from the server\r\n  useEffect(() => {\r\n    setProducts(listproducts);\r\n    const arrayEdit = listproducts.map((item) =>\r\n      item.codProduct === id\r\n        ? setProductSelect(item)\r\n        : console.log(\"product not found\")\r\n    );\r\n    setProducts(arrayEdit);\r\n  }, []);\r\n\r\n  //This function prepared the data to be sent to the server. transforming the input to integer or float\r\n  const transformToNumber = (data) => {\r\n    //transform to integer\r\n    data.codproduct = parseInt(data.codproduct);\r\n    data.bultos = parseInt(data.bultos);\r\n    data.volumen = parseInt(data.volumen);\r\n    data.bultosClientes = parseInt(data.bultosClientes);\r\n    data.margenMinimo = parseInt(data.margenMinimo);\r\n    data.margenMaximo = parseInt(data.margenMaximo);\r\n    //transform to float\r\n    data.costoNetoReposicion = parseFloat(data.costoNetoReposicion);\r\n    data.bonificaciones = parseFloat(data.bonificaciones);\r\n    data.costoConBonificacion = parseFloat(data.costoConBonificacion);\r\n    data.costoFlete = parseFloat(data.costoFlete);\r\n    data.tasaPais = parseFloat(data.tasaPais);\r\n    data.costoActualConImp = parseFloat(data.costoActualConImp);\r\n    data.precioLista = parseFloat(data.precioLista);\r\n  };\r\n\r\n  /*const notification = (err) => {\r\n    alert = (err)?(<Alert color=\"danger\">This is a success alert — check it out!</Alert>)\r\n    :(<Alert color=\"success\">This is a success alert — check it out!</Alert>)\r\n    setNotification({\r\n      notificacion: true\r\n    })\r\n  };*/\r\n\r\n  //Sending data to the server\r\n  const onSubmit = (data, e) => {\r\n    transformToNumber(data);\r\n    axios\r\n      .put(\"http://localhost:3000/api/catalog/editproduct/\" + id, data)\r\n      .then((res) => \"producto editado con exito\")\r\n      .catch((err) => console.log(err));\r\n    onDismiss();\r\n    e.preventDefault();\r\n  };\r\n\r\n  //status to control the visibility of the alert\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const onDismiss = () => setVisible(!visible);\r\n\r\n  \r\n  //Variable que indica la industria en este momento\r\n  const industry = 'retail'; //se va setear con una propiedad que se pase en props \r\n \r\n\r\n  //Funcion que controla el dinamismo de los campos de acuerdo a la industria\r\n  let industryMannage = industry === 'retail' ? (\r\n    <RetailProduct />\r\n  ) : (\r\n    <IndumentaryProduct />\r\n  );\r\n\r\n\r\n  return (\r\n    <CatalogLayout>\r\n      <Container>\r\n        <span>\r\n          <Alert color=\"primary\" isOpen={visible} toggle={onDismiss}>\r\n            Producto editado exitosamente!\r\n          </Alert>\r\n        </span>\r\n        <Row>\r\n          <Col lg=\"12\" xs=\"12\" style={{ marginTop: 20 }}>\r\n            <h3>Editar Producto</h3>\r\n          </Col>\r\n\r\n          <Col lg=\"12\" xs=\"12\" style={{ marginTop: 25 }}>\r\n            <Form onSubmit={handleSubmit(onSubmit)}>\r\n              <FormGroup row>\r\n                <Label for=\"codproduct\" sm={3}>\r\n                  Código de Producto\r\n                </Label>\r\n                <Col sm={9}>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"codproduct\"\r\n                    value={productselect.codProduct}\r\n                    innerRef={register({\r\n                      required: {\r\n                        value: true,\r\n                        message: \"codigo del producto es requerido\",\r\n                      },\r\n                    })}\r\n                  />\r\n                  <span className=\"text-danger span d-block mb-2\">\r\n                    {errors?.codproduct?.message}\r\n                  </span>\r\n                </Col>\r\n              </FormGroup>\r\n              <FormGroup row>\r\n                <Label for=\"examplePassword\" sm={3}>\r\n                  Nombre de Producto\r\n                </Label>\r\n                <Col sm={9}>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"nameproduct\"\r\n                    value={productselect.nameProduct}\r\n                    placeholder=\"Ingresar el nombre de producto\"\r\n                    innerRef={register({\r\n                      required: {\r\n                        value: true,\r\n                        message: \"Nombre del producto es requerido\",\r\n                      },\r\n                    })}\r\n                  />\r\n                  <span className=\"text-danger span d-block mb-2\">\r\n                    {errors?.nameproduct?.message}\r\n                  </span>\r\n                </Col>\r\n              </FormGroup>\r\n              <FormGroup row>\r\n                <Label for=\"\" sm={3}>\r\n                  Descripción\r\n                </Label>\r\n                <Col sm={9}>\r\n                  <Input\r\n                    type=\"textarea\"\r\n                    name=\"description\"\r\n                    value={productselect.Descripción}\r\n                    placeholder=\"Ingrese una descripcion\"\r\n                    innerRef={register}\r\n                  />\r\n                </Col>\r\n              </FormGroup>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"\">Marca</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"marca\"\r\n                      value={productselect.Marca}\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"marca es requerido\",\r\n                        },\r\n                      })}\r\n                    >\r\n                      <option>Marca 1</option>\r\n                      <option>Marca 2</option>\r\n                      <option>Marca 3</option>\r\n                    </Input>\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.marca?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={3}>\r\n                  <FormGroup>\r\n                    <Label for=\"\">Dolarizado</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"dolarizado\"\r\n                      value={productselect.Dolarizado}\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"dolarizado es requerido\",\r\n                        },\r\n                      })}\r\n                    >\r\n                      <option>No</option>\r\n                      <option>Si</option>\r\n                    </Input>\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.dolarizado?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"\">Categoria</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"categoria\"\r\n                      value={productselect.Categoria}\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"categoria es requerido\",\r\n                        },\r\n                      })}\r\n                    >\r\n                      <option>Categoria 1</option>\r\n                      <option>Categoria 2</option>\r\n                      <option>Categoria 3</option>\r\n                    </Input>\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.dolarizado?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"\">Tipo</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"tipo\"\r\n                      value={productselect.Tipo}\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"categoria es requerido\",\r\n                        },\r\n                      })}\r\n                    >\r\n                      <option>Tipo 1</option>\r\n                      <option>Tipo 2</option>\r\n                      <option>Tipo 3</option>\r\n                    </Input>\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.tipo?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={3}>\r\n                  <FormGroup>\r\n                    <Label for=\"\">Estado</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"estado\"\r\n                      value={productselect.Estado}\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Estado es requerido\",\r\n                        },\r\n                      })}\r\n                    >\r\n                      <option>Estado 1</option>\r\n                      <option>Estado 2</option>\r\n                      <option>Estado 3</option>\r\n                    </Input>\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.estado?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"\">Proveedor</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"proveedor\"\r\n                      value={productselect.Proveedor}\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Proveedor es requerido\",\r\n                        },\r\n                      })}\r\n                    >\r\n                      <option>Proveedor 1</option>\r\n                      <option>Proveedor 2</option>\r\n                      <option>Proveedor 3</option>\r\n                    </Input>\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.proveedor?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={3}>\r\n                  <FormGroup>\r\n                    <Label for=\"exampleEmail\">Código de Proveedor</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"codProveedor\"\r\n                      value={productselect.CódProveedor}\r\n                    />{\" \"}\r\n                    {/*why??*/}\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <FormGroup>\r\n                <Label for=\"ecommerce\" style={{ display: \"inline\" }}>\r\n                  Publicado en E-Commerce\r\n                </Label>\r\n                <div>\r\n                  <CustomInput\r\n                    type=\"checkbox\"\r\n                    id=\"exampleCustomRadio\"\r\n                    name=\"ecommerce\"\r\n                    value={productselect.ecommerce}\r\n                    innerRef={register}\r\n                  />\r\n                </div>\r\n              </FormGroup>\r\n              <Row>\r\n                <Col md={8}>\r\n                  <CarouselComponent></CarouselComponent>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <ButtonToggle\r\n                    type=\"file\"\r\n                    color=\"primary\"\r\n                    style={{ marginTop: 10 }}\r\n                  >\r\n                    Añadir Imagen\r\n                  </ButtonToggle>{\" \"}\r\n                  <br />\r\n                  <ButtonToggle color=\"danger\" style={{ marginTop: 10 }}>\r\n                    Remover Imagen\r\n                  </ButtonToggle>{\" \"}\r\n                  <br />\r\n                  <ButtonToggle color=\"danger\" style={{ marginTop: 10 }}>\r\n                    Remover Todo\r\n                  </ButtonToggle>{\" \"}\r\n                  <br />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Label/>\r\n\r\n              {/* Campos no comunes, cada industria tendra sus campos adicionales */}\r\n              <hr style={{color: 'gray', border:'1px solid'}}/>\r\n              <Col id=\"togglerCampos\" lg=\"12\" xs=\"12\"  style={{marginTop:20, cursor:\"pointer\"}}>\r\n                  <h4>Agregar Más Características</h4>\r\n              </Col>\r\n              <UncontrolledCollapse toggler=\"#togglerCampos\">\r\n                  <br/>\r\n                  {industryMannage}\r\n                  <Row form>\r\n                      <Col md={4}>\r\n                      <FormGroup>\r\n                          <Label for=\"\">Material</Label>\r\n                          <Input\r\n                          type=\"text\"\r\n                          name=\"material\"\r\n                          value={productselect.material}\r\n                          innerRef={register({\r\n                            required: {\r\n                              value: false,\r\n                              message: \"no es requerido\",\r\n                            },\r\n                          })}\r\n                          ></Input>\r\n                          <span className=\"text-danger span d-block mb-2\">\r\n                          {errors?.material?.message}\r\n                          </span>\r\n                      </FormGroup>\r\n                      </Col>\r\n                      <Col md={4}>\r\n                      <FormGroup>\r\n                          <Label for=\"\">Origen</Label>\r\n                          <Input\r\n                          type=\"text\"\r\n                          name=\"origen\"\r\n                          value={productselect.origen}\r\n                          innerRef={register({\r\n                            required: {\r\n                              value: false,\r\n                              message: \"no es requerido\",\r\n                            },\r\n                          })}\r\n                          ></Input>\r\n                          <span className=\"text-danger span d-block mb-2\">\r\n                          {errors?.origen?.message}\r\n                          </span>\r\n                      </FormGroup>\r\n                      </Col>\r\n                      <Col md={4}>\r\n                      <FormGroup>\r\n                          <Label for=\"\">Fabricante</Label>\r\n                          <Input\r\n                          type=\"text\"\r\n                          name=\"fabricante\"\r\n                          value={productselect.fabricante}\r\n                          innerRef={register({\r\n                            required: {\r\n                              value: false,\r\n                              message: \"no es requerido\",\r\n                            },\r\n                          })}\r\n                          ></Input>\r\n                          <span className=\"text-danger span d-block mb-2\">\r\n                          {errors?.fabricante?.message}\r\n                          </span>\r\n                      </FormGroup>\r\n                      </Col>\r\n                  </Row>\r\n                  <Row form>\r\n                      <Col md={4}>\r\n                      <FormGroup>\r\n                          <Label for=\"\">Envio</Label>\r\n                          <Input\r\n                          type=\"text\"\r\n                          name=\"envio\"\r\n                          value={productselect.envio}\r\n                          innerRef={register({\r\n                            required: {\r\n                              value: false,\r\n                              message: \"no es requerido\",\r\n                            },\r\n                          })}\r\n                          ></Input>\r\n                          <span className=\"text-danger span d-block mb-2\">\r\n                          {errors?.envio?.message}\r\n                          </span>\r\n                      </FormGroup>\r\n                      </Col>\r\n                      <Col md={4}>\r\n                      <FormGroup>\r\n                          <Label for=\"\">Garantia</Label>\r\n                          <Input\r\n                          type=\"text\"\r\n                          name=\"garantia\"\r\n                          value={productselect.garantia}\r\n                          innerRef={register({\r\n                            required: {\r\n                              value: false,\r\n                              message: \"no es requerido\",\r\n                            },\r\n                          })}\r\n                          ></Input>\r\n                          <span className=\"text-danger span d-block mb-2\">\r\n                          {errors?.garantia?.message}\r\n                          </span>\r\n                      </FormGroup>\r\n                      </Col>\r\n                      <Col md={4}>\r\n                      <FormGroup>\r\n                          <Label for=\"\">Codigo de Barra</Label>\r\n                          <Input\r\n                          type=\"text\"\r\n                          name=\"codbarra\"\r\n                          value={productselect.codbarra}\r\n                          innerRef={register({\r\n                            required: {\r\n                              value: false,\r\n                              message: \"no es requerido\",\r\n                            },\r\n                          })}\r\n                          ></Input>\r\n                          <span className=\"text-danger span d-block mb-2\">\r\n                          {errors?.codbarra?.message}\r\n                          </span>\r\n                      </FormGroup>\r\n                      </Col>\r\n                  </Row> \r\n                </UncontrolledCollapse>\r\n\r\n              {/* Caracteristicas de Stock */}\r\n              <hr style={{ color: \"gray\", border: \"1px solid\" }} />\r\n              <Col id=\"togglerStock\" lg=\"12\" xs=\"12\" style={{ marginTop: 20, cursor:\"pointer\"}}>\r\n                <h4>Editar Caracteristicas de Stock</h4>\r\n              </Col>\r\n              <UncontrolledCollapse toggler=\"#togglerStock\">\r\n              <br/>\r\n              <Row form>\r\n                <Col md={4}>\r\n                  <FormGroup>\r\n                    <Label for=\"\">Unidad</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"unidad\"\r\n                      value={productselect.Unidad}\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Proveedor es requerido\",\r\n                        },\r\n                      })}\r\n                    >\r\n                      <option>U</option>\r\n                      <option>L</option>\r\n                      <option>B</option>\r\n                    </Input>\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.unidad?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <FormGroup>\r\n                    <Label for=\"exampleEmail\">Volumen</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"volumen\"\r\n                      value={productselect.Volumen}\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Volumen es requerido\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.volumen?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <FormGroup>\r\n                    <Label for=\"exampleEmail\">Bultos</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"bultos\"\r\n                      value={productselect.Bultos}\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Bultos es requerido\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.bultos?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={4}>\r\n                  <FormGroup>\r\n                    <Label for=\"exampleEmail\">Bultos al Cliente</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"bultosClientes\"\r\n                      value={productselect.BultoCliente}\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Bultos es requerido\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.bultosClientes?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <FormGroup>\r\n                    <Label for=\"exampleEmail\">Margen Minimo</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"margenMinimo\"\r\n                      value={productselect.margenMinimo}\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Margen minimo es requerido\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.margenMinimo?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <FormGroup>\r\n                    <Label for=\"exampleEmail\">Margen Maximo</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"margenMaximo\"\r\n                      value={productselect.margenMaximo}\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Margen maximo es requerido\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.margenMaximo?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              </UncontrolledCollapse>\r\n\r\n              {/* Costos y Precios */}\r\n              <hr style={{ color: \"gray\", border: \"1px solid\" }} />\r\n              <Col id=\"togglerCostosyPrecios\" lg=\"12\" xs=\"12\" style={{ marginTop: 20 , cursor:\"pointer\"}}>\r\n                <h4>Costos y Precios</h4>\r\n              </Col>\r\n              <UncontrolledCollapse toggler=\"#togglerCostosyPrecios\">\r\n              <br/>\r\n              <Row form>\r\n                <Col md={3}>\r\n                  <FormGroup>\r\n                    <Label for=\"exampleEmail\">Costo Neto/Reposicion</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"costoNetoReposicion\"\r\n                      value={productselect.costoNetoRepo}\r\n                      step=\"0.01\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Costo Neto de reposicion es requerido\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.costoNetoReposicion?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={4}>\r\n                  <FormGroup>\r\n                    <Label for=\"exampleEmail\">Bonificaciones</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"bonificaciones\"\r\n                      value={productselect.Bonificaciones}\r\n                      step=\"0.01\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Bonificaciones es requerido\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.bonificaciones?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <FormGroup>\r\n                    <Label for=\"exampleEmail\">Costo con Bonificacion</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"costoConBonificacion\"\r\n                      value={productselect.CostoBonificacion}\r\n                      step=\"0.01\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Costo con Bonificacion es requerido\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.costoConBonificacion?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={3}>\r\n                  <FormGroup>\r\n                    <Label for=\"exampleEmail\">Costo Flete %</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"costoFlete\"\r\n                      value={productselect.CostoFlete}\r\n                      step=\"0.01\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Costo flete % es requerido\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.costoFlete?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={3}>\r\n                  <FormGroup>\r\n                    <Label for=\"exampleEmail\">Tasa Pais %</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"tasaPais\"\r\n                      value={productselect.tasaPais}\r\n                      step=\"0.01\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Margen maximo es requerido\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.tasaPais?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={4}>\r\n                  <FormGroup>\r\n                    <Label for=\"exampleEmail\">Costo actual con impuestos</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"costoActualConImp\"\r\n                      value={productselect.costoActualConImp}\r\n                      step=\"0.01\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Costo actual con impuesto es requerido\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.costoActualConImp?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={4}>\r\n                  <FormGroup>\r\n                    <Label for=\"exampleEmail\">Precio de Lista</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"precioLista\"\r\n                      value={productselect.precioLista}\r\n                      step=\"0.01\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Precio de Lista es requerido\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.precioLista?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <Button\r\n                    style={{\r\n                      marginTop: 32,\r\n                      backgroundColor: \"rgb(247, 147, 1)\",\r\n                    }}\r\n                  >\r\n                    Agregar Lista al Producto\r\n                  </Button>{\" \"}\r\n                  <Button\r\n                    style={{\r\n                      marginTop: 32,\r\n                      backgroundColor: \"rgb(247, 147, 1)\",\r\n                    }}\r\n                  >\r\n                    Otras Bonificaciones\r\n                  </Button>{\" \"}\r\n                </Col>\r\n              </Row>\r\n              </UncontrolledCollapse>\r\n\r\n              {/* Contables */}\r\n              <hr style={{ color: \"gray\", border: \"1px solid\" }} />\r\n              <Col id=\"togglerContables\" lg=\"12\" xs=\"12\" style={{ marginTop: 20 , cursor:\"pointer\"}}>\r\n                <h4>Editar Contables</h4>\r\n              </Col>\r\n              <UncontrolledCollapse toggler=\"#togglerContables\">\r\n              <br/>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"\">Tipo</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"tipoContable\"\r\n                      value={productselect.tipoContable}\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Tipo es requerido\",\r\n                        },\r\n                      })}\r\n                    >\r\n                      <option>Bienes de cambio</option>\r\n                      <option>Tipo 2</option>\r\n                      <option>Tipo 3</option>\r\n                    </Input>\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.tipoContable?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"\">Cuenta</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"cuentaContable\"\r\n                      value={productselect.cuentaContable}\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Cuenta es requerido\",\r\n                        },\r\n                      })}\r\n                    >\r\n                      <option>Venta de Mercaderia</option>\r\n                      <option>Cuenta 2</option>\r\n                      <option>Cuenta 3</option>\r\n                    </Input>\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.cuenta?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Label/>\r\n              </UncontrolledCollapse>\r\n\r\n              <hr style={{ color: \"gray\", border: \"1px solid\" }} />\r\n              <Row form className=\"content-align-end text-center\">\r\n                <Col md={12}>\r\n                  <Button color=\"danger\" style={{ margin: 20 }}>\r\n                    Cancelar\r\n                  </Button>{\" \"}\r\n                  <Button color=\"primary\" type=\"submit\" style={{ margin: 20 }}>\r\n                    Guardar Producto\r\n                  </Button>{\" \"}\r\n                </Col>\r\n              </Row>\r\n\r\n\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </CatalogLayout>\r\n  );\r\n};\r\n\r\nexport default EditProduct;\r\n","export const messages = {\r\n    'es': {\r\n        //WELCOME SCREEN\r\n        'app.btnLanguage': 'Idioma',\r\n        'app.englishLanguageOPtion': 'Inglés',\r\n        'app.spanishLanguageOPtion': 'Español',\r\n        'app.welcomeMessage': 'Bienvenido al asistente de Registro',\r\n        'app.btnStart': 'Comenzar',\r\n        //PRODUCT SCREEN\r\n        'app.selectProductMessage': 'Por favor seleccione el producto a instalar',\r\n        'app.nextButton': 'Siguiente',\r\n        //REGISTER USER SCREEN\r\n        'app.placeholderEmailInput': 'Ingrese su email',\r\n        'app.weSendCodeMessage': 'Le enviamos su un código a',\r\n        //CODE VERIFICATION SCREEN\r\n        'app.enterCodeMessage': 'ingrese el código:',\r\n        //LOGIN (Create Password) SCREEN\r\n        'app.enterYourNewPasswordMessage': 'Ingrese una nueva contraseña para:',\r\n        'app.makeSureIncludeMessage': 'Asegúrese de incluir al menos:',\r\n        'app.8charactersMessage': '8 caracteres',\r\n        'app.uppercaseMessage': '1 letra mayúscula',\r\n        'app.lowercaseMessage': '1 letra minúscula',\r\n        'app.oneNumberMessage': '1 número',\r\n        'app.specialCharacterMessage': '1 caracter especial',\r\n        'app.newPasswordMessage': 'Nueva Contraseña',\r\n        'app.placeholderNewPasswordInput': 'Ingrese una nueva contraseña',\r\n        'app.confirmPasswordMessage': 'Confirme la nueva contraseña',\r\n        'app.btnCreatePassword': 'Crear Contraseña',\r\n        //SELECT COUNTRY SCREEN\r\n        'app.selectCountryMessage': 'Seleccione su País',\r\n        //LOGIN ALL USERS SCREEN\r\n        'app.rememberMeMessage': 'Recordarme',\r\n        'app.btnLoginMessage': 'Ingresar',\r\n        'app.forgotPasswordMessage': 'Olvidé mi contraseña',\r\n        'app.errorIncorrectCredentialMessage': 'Ha ingresado un correo y/o contraseña correcta. Por favor intente nuevamente.',\r\n        'app.maxiumAttemptsMessage': 'Ha excedido los intentos de inicio de sesión!',\r\n        'app.securityParamountMessage': 'La seguridad es primordial en Cognitis360',\r\n        'app.maxiumAttemptsResetPasswordMessage': 'Cuando se exceden los intentos de inicio de sesión, el registro del usuario en la base de datos es clasificado como contraseña caducada. Por favor, reestablezca su contraseña via: \"Olvidé mi contraseña\"',\r\n\r\n    },\r\n    'en': {\r\n        //WELCOME SCREEN\r\n        'app.btnLanguage': 'Language',\r\n        'app.englishLanguageOPtion': 'English',\r\n        'app.spanishLanguageOPtion': 'Spanish',\r\n        'app.welcomeMessage': 'Welcome to the registration Wizard',\r\n        'app.btnStart': 'Start',\r\n        //PRODUCT SCREEN\r\n        'app.selectProductMessage': 'Please select the product to install',\r\n        'app.nextButton': 'Next',\r\n        //REGISTER USER SCREEN\r\n        'app.placeholderEmailInput': 'Enter your email',\r\n        'app.weSendCodeMessage': 'We send you a code to',\r\n        //CODE VERIFICATION SCREEN\r\n        'app.enterCodeMessage': 'enter code:',\r\n        //LOGIN SCREEN\r\n        'app.enterYourNewPasswordMessage': 'Enter a new password for:',\r\n        'app.makeSureIncludeMessage': 'Make sure to inclide at least:',\r\n        'app.8charactersMessage': '8 characters',\r\n        'app.uppercaseMessage': '1 uppercase letter',\r\n        'app.lowercaseMessage': '1 lowercase letter',\r\n        'app.oneNumberMessage': '1 number',\r\n        'app.specialCharacterMessage': '1 special character',\r\n        'app.newPasswordMessage': 'New Password',\r\n        'app.placeholderNewPasswordInput': 'Insert new Password',\r\n        'app.confirmPasswordMessage': 'Confirm New Password',\r\n        'app.btnCreatePassword': 'Create Password',\r\n        //SELECT COUNTRY SCREEN\r\n        'app.selectCountryMessage': 'Select Country',\r\n        //LOGIN ALL USERS SCREEN\r\n        'app.rememberMeMessage': 'Remember me',\r\n        'app.btnLoginMessage': 'Login',\r\n        'app.forgotPasswordMessage': 'Forgot your password?',\r\n        'app.errorIncorrectCredentialMessage': 'You have entered an invalid email address or password. Please try again.',\r\n        'app.maxiumAttemptsMessage': 'Maximium Login Attempts Exceeded!',\r\n        'app.securityParamountMessage': 'Security is Paramount at Cognitis360',\r\n        'app.maxiumAttemptsResetPasswordMessage': 'When you have exceeded the maximium login attempts, the user record in the database is flagged as password expired. Please reset your password via: Forgot your password?',\r\n\r\n\r\n    }\r\n}","import React from 'react'\r\n\r\nconst wrapperStyles = {\r\n    backgroundImage: \"url('../../../Background.png')\",\r\n    backgroundPosition: 'center',\r\n    backgroundSize: 'cover',\r\n    width: '100%',\r\n    height: '100%',\r\n    position:'fixed',\r\n    overflow: 'auto'\r\n}\r\nconst LayoutSucursal = (props) => {\r\n    return(\r\n        <div className=\"wrapper-wizard-layout\" style={wrapperStyles}>\r\n            { props.children }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LayoutSucursal;","import React from \"react\";\r\nimport Logo from \"../../components/WizardComponents/base/logo\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport LayoutSucursal from \"../Layouts/RegisterCompanyLayout/layoutsucursal\";\r\n\r\nconst DashboardContainer = (props) => {\r\n  return (\r\n    <LayoutSucursal>\r\n      <Container>\r\n        <Row>\r\n          <Col lg=\"4\" md=\"4\" xs=\"10\" sm=\"4\">\r\n            <Logo />\r\n          </Col>\r\n          <Row style={{ marginTop: 200 }}>\r\n            <Col className=\"align-self-center\">\r\n              <h1 className=\"text-center textblue\">\r\n                Welcome to Coginitis 360!\r\n              </h1>\r\n              <h6 className=\"text-center textblue\">\r\n                thank you for choosing us\r\n              </h6>\r\n            </Col>\r\n          </Row>\r\n        </Row>\r\n      </Container>\r\n    </LayoutSucursal>\r\n  );\r\n};\r\n\r\nexport default DashboardContainer;\r\n","import React, { useState } from \"react\"; //importacion de la libreria\r\nimport {\r\n  FormGroup,\r\n  Input,\r\n  Row,\r\n  Container,\r\n  Col,\r\n  Label,\r\n  Card,\r\n  Form,\r\n  Button,\r\n} from \"reactstrap\"; //importar elementos\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from 'axios'\r\nimport Logo from \"../../WizardComponents/base/logo\";\r\n//importar css\r\nimport \"./index.css\";\r\nconst Formulario = (props) => {\r\n  //clase 'Nombre' extends React.component\r\n  const { register, trigger, handleSubmit, errors } = useForm();\r\n\r\n  const onSubmit = (data, e) => {\r\n    e.preventDefault();\r\n    axios.post(\"http://localhost:3000/api/headcompany/company/savecompany\", data)\r\n    .then((res) => \"Se cargo en la base de datos una nueva compañia\")\r\n    .catch((err) => console.log(err));\r\n    window.location.href = '/registercompany';\r\n    \r\n  }\r\n  // const of countries\r\n  const countries = [\r\n    \"Argentina\",\r\n    \"Australia\",\r\n    \"Bolivia\",\r\n    \"Canada\",\r\n    \"Chile\",\r\n    \"Colombia\",\r\n    \"Ecuador\",\r\n    \"Guyana\",\r\n    \"New Zealand\",\r\n    \"Paraguay\",\r\n    \"Peru\",\r\n    \"Surinam\",\r\n    \"USA\",\r\n    \"Uruguay\",\r\n    \"Venezuela\",\r\n  ];\r\n\r\n  const [input, setInput] = useState({\r\n    company: \"\",\r\n    razonsocial: \"\",\r\n    cuil: \"\",\r\n  });\r\n\r\n  const inputChange = async (event) => {\r\n    let value = \"\";\r\n    let inputvalue = event.target.value;\r\n    let length = inputvalue.length;\r\n    let name = event.target.name;\r\n    let noerror = await trigger(name);\r\n    console.log(noerror);\r\n    if (length > 0 && noerror) {\r\n      value = errors?.name ? false : true;\r\n    } else {\r\n      value = false;\r\n    }\r\n    setInput({\r\n      ...input,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  //Funcion que renderiza el componente visual jsx\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col lg=\"4\" md=\"4\" xs=\"10\">\r\n          <Logo />\r\n        </Col>\r\n        <Col lg=\"8\" xs=\"10\">\r\n          <h3 className=\"mt-5 text\" style={{ marginBottom: 30}}>\r\n            Ingrese datos de la Compañia {props.cantCompanies}{\" \"}\r\n          </h3>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col lg=\"12\">\r\n          <Card id=\"card-user\">\r\n            <Form onSubmit={handleSubmit(onSubmit)} id=\"card-user\">\r\n              <br/>\r\n              <h6 className=\"text\">\r\n                Datos de la Compañia {props.cantCompanies}{\" \"}\r\n              </h6>\r\n              <Row form>\r\n                <Col md={6}>\r\n                <span className=\"text-danger font-weight-bold\">*</span>{' '}\r\n                  <Label for=\"company\">\r\n                    Nombre de la Compañia {props.cantCompanies}{\" \"}\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"company\"\r\n                    id=\"company\"\r\n                    placeholder=\"ingrese el nombre de la compañia\"\r\n                    valid={input.company}\r\n                    onChange={inputChange}\r\n                    innerRef={register({\r\n                      required: {\r\n                        value: true,\r\n                        message: \"Nombre de sucursal es requerido\",\r\n                      },\r\n                    })}\r\n                  />\r\n                  <span className=\"text-danger span d-block mb-2\">\r\n                    {errors?.company?.message}\r\n                  </span>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                  <span className=\"text-danger font-weight-bold\">*</span>{' '}\r\n                    <Label for=\"razonsocial\">Razon Social</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"razonsocial\"\r\n                      id=\"razosocial\"\r\n                      valid={input.razonsocial}\r\n                      onChange={inputChange}\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Razon Social es requerido\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.razonsocial?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                  <span className=\"text-danger font-weight-bold\">*</span>{' '}\r\n                    <Label for=\"Cuil\">CUIL o CUIT</Label>\r\n                    <Input\r\n                      //type=\"text\"\r\n                      name=\"cuil\"\r\n                      id=\"Cuil\"\r\n                      placeholder=\"Ejemplo XX12345678X\"\r\n                      maxLength=\"11\"\r\n                      valid={input.cuil}\r\n                      onChange={inputChange}\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Cuil o Cuit es requerido\",\r\n                        },\r\n                        minLength: {\r\n                          value: 11,\r\n                          message: \"No menos de 11 carácteres!\",\r\n                        },\r\n                        pattern: {\r\n                          value: /^[0-9]{11}$/,\r\n                          message: \"invalid cuil o cuit\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.cuil?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                  <span className=\"text-danger font-weight-bold\">*</span>{' '}\r\n                    <Label for=\"pais\">Pais</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"pais\"\r\n                      id=\"pais\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: false,\r\n                        },\r\n                      })}\r\n                      onChange={inputChange}\r\n                    >\r\n                      {/* Function to insert the countries of the array like items in dropdown menu */}\r\n                      {countries.map((country) => (\r\n                        <option key={country} value={country}>\r\n                          {country}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                  <span className=\"text-danger font-weight-bold\">*</span>{' '}\r\n                    <Label for=\"email\">Email</Label>\r\n                    <Input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      id=\"email\"\r\n                      valid={input.email}\r\n                      onChange={inputChange}\r\n                      placeholder=\"Ingrese su email\"\r\n                      innerRef={register({\r\n                        required: \"Email es requerido\",\r\n                        pattern: {\r\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                        message: \"invalid email address\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.email?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                  <span className=\"text-danger font-weight-bold\">*</span>{' '}\r\n                    <Label for=\"Tipo de Industria\">Tipo de Industria</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"industria\"\r\n                      id=\"inductria\"\r\n                      placeholder=\"seleccione su industria\"\r\n                      innerRef={register({\r\n                        required: \"Tipo de industria requerido\",\r\n                      })}\r\n                    >\r\n                      <option key=\"Retail\" value=\"Retail\">\r\n                        Retail{\" \"}\r\n                      </option>\r\n                      <option key=\"Indumentaria\" value=\"Indumentaria\">\r\n                        Indumentaria\r\n                      </option>\r\n                    </Input>\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.inductria?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <Row form>\r\n                    <Col md={3}>\r\n                      <FormGroup>\r\n                      <span className=\"text-danger font-weight-bold\">*</span>{' '}\r\n                        <Label for=\"codPais\">Cod Pais</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"codPais\"\r\n                          id=\"codPais\"\r\n                          placeholder=\"+54\"\r\n                          valid={input.codPais}\r\n                          onChange={inputChange}\r\n                          innerRef={register({\r\n                            required: {\r\n                              value: true,\r\n                              message: \"Codigo de Pais es requerido\",\r\n                            },\r\n                            maxLength: {\r\n                              value: 5,\r\n                              message: \"No más de 5 carácteres!\",\r\n                            },\r\n                            minLength: {\r\n                              value: 3,\r\n                              message: \"No menos de 3 carácteres!\",\r\n                            },\r\n                          })}\r\n                        />\r\n                        <span className=\"text-danger span d-block mb-2\">\r\n                          {errors?.codPais?.message}\r\n                        </span>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                      <FormGroup>\r\n                      <span className=\"text-danger font-weight-bold\">*</span>{' '}\r\n                        <Label for=\"codArea\">Cod Area</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"codArea\"\r\n                          id=\"codArea\"\r\n                          valid={input.codArea}\r\n                          onChange={inputChange}\r\n                          innerRef={register({\r\n                            required: {\r\n                              value: true,\r\n                              message: \"Codigo de Area es requerido\",\r\n                            },\r\n                            maxLength: {\r\n                              value: 6,\r\n                              message: \"No más de 6 numeros!\",\r\n                            },\r\n                            minLength: {\r\n                              value: 2,\r\n                              message: \"No menos de 2 numeros!\",\r\n                            },\r\n                          })}\r\n                        />\r\n                        <span className=\"text-danger span d-block mb-2\">\r\n                          {errors?.codArea?.message}\r\n                        </span>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                      <FormGroup>\r\n                      <span className=\"text-danger font-weight-bold\">*</span>{' '}\r\n                        <Label for=\"nrotel\">Nro. Telefono</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"nrotel\"\r\n                          id=\"nrotel\"\r\n                          valid={input.nrotel}\r\n                          onChange={inputChange}\r\n                          innerRef={register({\r\n                            required: {\r\n                              value: true,\r\n                              message: \"Numero de Telefono es requerido\",\r\n                            },\r\n                            maxLength: {\r\n                              value: 11,\r\n                              message: \"No más de 11 numeros!\",\r\n                            },\r\n                            minLength: {\r\n                              value: 4,\r\n                              message: \"No menos de 4 numeros!\",\r\n                            },\r\n                          })}\r\n                        />\r\n                        <span className=\"text-danger span d-block mb-2\">\r\n                          {errors?.nrotel?.message}\r\n                        </span>\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"nroFax\">Fax</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"fax\"\r\n                      id=\"nroFax\"\r\n                      valid={input.fax}\r\n                      onChange={inputChange}\r\n                      placeholder=\"Ingrese el nro de fax de la compañia\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: false,\r\n                        },\r\n                      })}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <br/>\r\n              <h6 className=\"text\">Datos Bancarios</h6>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                  <span className=\"text-danger font-weight-bold\">*</span>{' '}\r\n                    <Label for=\"nameBank\">Nombre del Banco</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"nameBank\"\r\n                      id=\"nameBank\"\r\n                      valid={input.nameBank}\r\n                      onChange={inputChange}\r\n                      placeholder=\"Ingrese el nombre del banco\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Nombre del banco es requerido\",\r\n                        },\r\n                        maxLength: {\r\n                          value: 100,\r\n                          message: \"No más de 100 caracteres!\",\r\n                        },\r\n                        minLength: {\r\n                          value: 3,\r\n                          message: \"No menos de 3 caracteres!\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.nameBank?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                  <span className=\"text-danger font-weight-bold\">*</span>{' '}\r\n                    <Label for=\"cuentaBancaria\">\r\n                      Numero de Cuenta Bancaria\r\n                    </Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"cuentaBancaria\"\r\n                      id=\"cuentaBancaria\"\r\n                      valid={input.cuentaBancaria}\r\n                      onChange={inputChange}\r\n                      placeholder=\"Ingrese su nro de cuenta bancaria\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Numero de cuenta bancaria es requerido\",\r\n                        },\r\n                        maxLength: {\r\n                          value: 15,\r\n                          message: \"No más de 15 numeros!\",\r\n                        },\r\n                        minLength: {\r\n                          value: 12,\r\n                          message: \"No menos de 12 numeros!\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.cuentaBancaria?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                  <span className=\"text-danger font-weight-bold\">*</span>{' '}\r\n                    <Label for=\"cbu\">CBU</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"cbu\"\r\n                      id=\"cbu\"\r\n                      valid={input.cbu}\r\n                      onChange={inputChange}\r\n                      placeholder=\"Ingrese el nro de CBU\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Numero de CBU es requerido\",\r\n                        },\r\n                        maxLength: {\r\n                          value: 22,\r\n                          message: \"No más de 22 numeros\",\r\n                        },\r\n                        minLength: {\r\n                          value: 22,\r\n                          message: \"No menos de 22 numeros\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.cbu?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"alias\">Alias</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"alias\"\r\n                      id=\"alias\"\r\n                      valid={input.alias}\r\n                      onChange={inputChange}\r\n                      placeholder=\"Ingrese su alias\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: false,\r\n                        },\r\n                        maxLength: {\r\n                          value: 20,\r\n                          message: \"No más de 20 caracteres!\",\r\n                        },\r\n                        minLength: {\r\n                          value: 6,\r\n                          message: \"No menos de 6 caracteres!\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.alias?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <br/>\r\n              <Row\r\n                className=\"row justify-content-end\"\r\n                style={{ marginTop: 10 }}\r\n              >\r\n                <Col md={2}>\r\n                  {/*<Link to=\"/NumberCompanies\">*/}\r\n                  <Button\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    active\r\n                  >\r\n                    Continuar\r\n                  </Button>\r\n                  {/*</Link>*/}\r\n                </Col>\r\n              </Row>\r\n              <br/>\r\n            </Form>\r\n          </Card>\r\n          <br/>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\nexport default Formulario;\r\n","import React from 'react'\r\n\r\nconst wrapperStyles={\r\n    backgroundImage: \"url('../../../../Background.png')\",\r\n    backgroundPosition: 'center',\r\n    backgroundSize: 'cover',\r\n    width: '100%',\r\n    height: '100%',\r\n}\r\nconst RegisterCompanyLayout = (props) => {\r\n    return(\r\n        <div className=\"wrapper-wizard-layout\" style={wrapperStyles}>\r\n            { props.children }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterCompanyLayout;\r\n","import React from \"react\";\r\nimport Form from \"../../components/RegisterCompaniesComponents/formulario/formulario\";\r\nimport RegisterCompanyLayout from '../Layouts/RegisterCompanyLayout/index';\r\nconst CreateCompanyContainer = () => {\r\n  return (\r\n    <RegisterCompanyLayout>\r\n      <Form />\r\n    </RegisterCompanyLayout>\r\n  );\r\n};\r\nexport default CreateCompanyContainer;\r\n","import React, { useState } from \"react\"; //importacion de la libreria\r\n//import { Link } from \"react-router-dom\";\r\nimport {\r\n  FormGroup,\r\n  Input,\r\n  Row,\r\n  Container,\r\n  Col,\r\n  Label,\r\n  Card,\r\n  Form,\r\n  Button,\r\n} from \"reactstrap\"; //importar elementos\r\nimport './index.css' //importar css\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from 'axios'\r\nimport Logo from \"../../WizardComponents/base/logo\";\r\n\r\nconst Formsuc = (props) => {\r\n  //clase 'Nombre' extends React.component\r\n  const { register, trigger, handleSubmit, errors } = useForm();\r\n\r\n  \r\n  \r\n  \r\n  const onSubmit = (data,e) => {\r\n    e.preventDefault();\r\n    axios.post(\"http://localhost:3000/api/headcompany/company/sucursal/savesucursal\", data)\r\n    .then((res) => \"Se cargo en la base de datos una nueva compañia\")\r\n    .catch((err) => console.log(err));\r\n    window.location.href = '/registersucursal';\r\n  };\r\n\r\n  \r\n  const [input, setInput] = useState({\r\n    company:'',\r\n    razonsocial:'',\r\n    cuil:'',\r\n    \r\n  });\r\n\r\n  const inputChange =async (event) => {\r\n    let value = \"\";\r\n    let inputvalue = event.target.value;\r\n    let length = inputvalue.length;\r\n    let name = event.target.name\r\n    let noerror= await trigger(name)\r\n    console.log(noerror)\r\n    if ((length > 0) && (noerror)) {\r\n      value = errors?.name? false : true;\r\n    } else {\r\n      value = false;\r\n    }\r\n    setInput({\r\n      ...input,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  //Funcion que renderiza el componente visual jsx\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col lg=\"4\" md=\"4\" xs=\"10\">\r\n          <Logo />\r\n        </Col>\r\n        <Col lg=\"8\" xs=\"10\">\r\n          <h3 className=\"mt-5 text\" style={{ marginBottom: 30}}>\r\n            Ingrese datos de la Sucursal {props.cantSuc}{\" \"}\r\n          </h3>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col lg=\"12\">\r\n          <Card id=\"card-user\">\r\n            <Form onSubmit={handleSubmit(onSubmit)} id=\"card-user\">\r\n              <br/>\r\n              <h6 className=\"text\">\r\n                Datos de la Sucursal {props.cantSuc}{\" \"}\r\n              </h6>\r\n              <Row form>\r\n                <Col md={6}>\r\n                <span className=\"text-danger font-weight-bold\">*</span>{' '}\r\n                  <Label for=\"Sucursal\">Nombre de la Sucursal</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"sucursal\"\r\n                    id=\"sucursal\"\r\n                    placeholder=\"ingrese el nombre de la sucursal\"\r\n                    valid={input.sucursal}\r\n                    onChange={inputChange}\r\n                    innerRef={register({\r\n                      required: {\r\n                        value: true,\r\n                        message: \"Nombre de sucursal es requerido\",\r\n                      },\r\n                    })}\r\n                  />\r\n                  <span className=\"text-danger span d-block mb-2\">\r\n                    {errors?.sucursal?.message}\r\n                  </span>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                  <span className=\"text-danger font-weight-bold\">*</span>{' '}\r\n                    <Label for=\"razonsocial\">Razon Social</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"razonsocial\"\r\n                      id=\"razosocial\"\r\n                      valid={input.razonsocial}\r\n                      onChange={inputChange}\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Razon Social es requerido\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.razonsocial?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                  <span className=\"text-danger font-weight-bold\">*</span>{' '}\r\n                    <Label for=\"Cuil\">CUIL o CUIT</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"cuil\"\r\n                      id=\"Cuil\"\r\n                      placeholder=\"Ejemplo XX12345678X\"\r\n                      maxLength=\"11\"\r\n                      valid={input.cuil}\r\n                      onChange={inputChange}\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Cuil o Cuit es requerido\",\r\n                        },\r\n                        minLength: {\r\n                          value: 11,\r\n                          message: \"No menos de 11 carácteres!\",\r\n                        },\r\n                        pattern: {\r\n                          value: /^[0-9]{11}$/,\r\n                          message: \"invalid cuil o cuit\"\r\n                        }\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.cuil?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                  <span className=\"text-danger font-weight-bold\">*</span>{' '}\r\n                    <Label for=\"email\">Email</Label>\r\n                    <Input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      id=\"email\"\r\n                      valid={input.email}\r\n                      onChange={inputChange}\r\n                      placeholder=\"Ingrese su email\"\r\n                      innerRef={register({\r\n                        required: \"Email es requerido\",\r\n                        pattern: {\r\n                          value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                          message: \"invalid email address\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.email?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <Row form>\r\n                    <Col md={3}>\r\n                      <FormGroup>\r\n                      <span className=\"text-danger font-weight-bold\">*</span>{' '}\r\n                        <Label for=\"codPais\">Cod Pais</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"codPais\"\r\n                          id=\"codPais\"\r\n                          placeholder=\"+54\"\r\n                          valid={input.codPais}\r\n                          onChange={inputChange}\r\n                          innerRef={register({\r\n                            required: {\r\n                             value: true,\r\n                              message: \"Codigo de Pais es requerido\",\r\n                            },\r\n                            maxLength: {\r\n                              value: 5,\r\n                              message: \"No más de 5 carácteres!\",\r\n                            },\r\n                            minLength: {\r\n                              value: 3,\r\n                              message: \"No menos de 3 carácteres!\",\r\n                            },\r\n                          })}\r\n                        />\r\n                        <span className=\"text-danger span d-block mb-2\">\r\n                          {errors?.codPais?.message}\r\n                        </span>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                      <FormGroup>\r\n                      <span className=\"text-danger font-weight-bold\">*</span>{' '}\r\n                        <Label for=\"codArea\">Cod Area</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"codArea\"\r\n                          id=\"codArea\"\r\n                          valid={input.codArea}\r\n                          onChange={inputChange}\r\n                          innerRef={register({\r\n                            required: {\r\n                             value: true,\r\n                              message: \"Codigo de Area es requerido\",\r\n                            },\r\n                            maxLength: {\r\n                              value: 6,\r\n                              message: \"No más de 6 numeros!\",\r\n                            },\r\n                            minLength: {\r\n                              value: 2,\r\n                              message: \"No menos de 2 numeros!\",\r\n                            },\r\n                          })}\r\n                        />\r\n                        <span className=\"text-danger span d-block mb-2\">\r\n                          {errors?.codArea?.message}\r\n                        </span>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                      <FormGroup>\r\n                      <span className=\"text-danger font-weight-bold\">*</span>{' '}\r\n                        <Label for=\"nrotel\">Nro. Telefono</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"nrotel\"\r\n                          id=\"nrotel\"\r\n                          valid={input.nrotel}\r\n                          onChange={inputChange}\r\n                          innerRef={register({\r\n                            required: {\r\n                             value: true,\r\n                              message: \"Numero de Telefono es requerido\",\r\n                            },\r\n                            maxLength: {\r\n                              value: 11,\r\n                              message: \"No más de 11 numeros!\",\r\n                            },\r\n                            minLength: {\r\n                              value: 4,\r\n                              message: \"No menos de 4 numeros!\",\r\n                            },\r\n                          })}\r\n                        />\r\n                        <span className=\"text-danger span d-block mb-2\">\r\n                          {errors?.nrotel?.message}\r\n                        </span>\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"nroFax\">Fax</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"fax\"\r\n                      id=\"nroFax\"\r\n                      valid={input.fax}\r\n                      onChange={inputChange}\r\n                      placeholder=\"Ingrese el nro de fax de la compañia\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: false,\r\n                        },\r\n                      })}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <br/>\r\n              <h6 className=\"text\">Datos Bancarios</h6>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                  <span className=\"text-danger font-weight-bold\">*</span>{' '}\r\n                    <Label for=\"nameBank\">Nombre del Banco</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"nameBank\"\r\n                      id=\"nameBank\"\r\n                      valid={input.nameBank}\r\n                      onChange={inputChange}\r\n                      placeholder=\"Ingrese el nombre del banco\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Nombre del banco es requerido\",\r\n                        },\r\n                        maxLength: {\r\n                          value: 100,\r\n                          message: \"No más de 100 caracteres!\",\r\n                        },\r\n                        minLength: {\r\n                          value: 3,\r\n                          message: \"No menos de 3 caracteres!\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.nameBank?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                  <span className=\"text-danger font-weight-bold\">*</span>{' '}\r\n                    <Label for=\"cuentaBancaria\">\r\n                      Numero de Cuenta Bancaria\r\n                    </Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"cuentaBancaria\"\r\n                      id=\"cuentaBancaria\"\r\n                      valid={input.cuentaBancaria}\r\n                      onChange={inputChange}\r\n                      placeholder=\"Ingrese su nro de cuenta bancaria\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Numero de cuenta bancaria es requerido\",\r\n                        },\r\n                        maxLength: {\r\n                          value: 15,\r\n                          message: \"No más de 15 numeros!\",\r\n                        },\r\n                        minLength: {\r\n                          value: 12,\r\n                          message: \"No menos de 12 numeros!\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.cuentaBancaria?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                  <span className=\"text-danger font-weight-bold\">*</span>{' '}\r\n                    <Label for=\"cbu\">CBU</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"cbu\"\r\n                      id=\"cbu\"\r\n                      valid={input.cbu}\r\n                      onChange={inputChange}\r\n                      placeholder=\"Ingrese el nro de CBU\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Numero de CBU es requerido\",\r\n                        },\r\n                        maxLength: {\r\n                          value: 22,\r\n                          message: \"No más de 22 numeros\",\r\n                        },\r\n                        minLength: {\r\n                          value: 22,\r\n                          message: \"No menos de 22 numeros\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.cbu?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"alias\">Alias</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"alias\"\r\n                      id=\"alias\"\r\n                      valid={input.alias}\r\n                      onChange={inputChange}\r\n                      placeholder=\"Ingrese su alias\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: false,\r\n                        },\r\n                        maxLength: {\r\n                          value: 20,\r\n                          message: \"No más de 20 caracteres!\",\r\n                        },\r\n                        minLength: {\r\n                          value: 6,\r\n                          message: \"No menos de 6 caracteres!\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.alias?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <br/>\r\n              <Row\r\n                className=\"row justify-content-end\"\r\n                style={{ marginTop: 10 }}\r\n              >\r\n                <Col md={2}>\r\n                  {/*<Link to=\"/NumberCompanies\">*/}\r\n                  <Button\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    active\r\n                  >\r\n                    Continuar\r\n                  </Button>\r\n                  {/*</Link>*/}\r\n                </Col>\r\n              </Row>\r\n              <br/>\r\n            </Form>\r\n          </Card>\r\n          <br/>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\nexport default Formsuc;\r\n","import React from 'react'\r\nimport FormSuc from '../../components/RegisterCompaniesComponents/formulario/formSuc'\r\nimport RegisterCompanyLayout from '../Layouts/RegisterCompanyLayout/index';\r\n\r\nconst CreateCompanyContainer=()=>{\r\n\r\n        return (\r\n            <RegisterCompanyLayout>\r\n                <FormSuc />\r\n            </RegisterCompanyLayout>\r\n            \r\n        )\r\n    \r\n}\r\nexport default CreateCompanyContainer;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Card,\r\n  Button,\r\n  Table,\r\n  CardHeader,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\"; //importar elementos\r\nimport { Link } from \"react-router-dom\";\r\nimport Logo from \"../../../components/WizardComponents/base/logo\";\r\nimport { BsPlusCircle } from \"react-icons/bs\";\r\nimport { AiTwotoneDelete } from \"react-icons/ai\";\r\nimport { MdModeEdit } from \"react-icons/md\";\r\nimport LayoutSucursal from '../../Layouts/RegisterCompanyLayout/layoutsucursal';\r\nimport \"./index.css\";\r\n\r\nconst RegisterSucursalContainer = (props) => {\r\n  const sucursal = [\r\n    { id: 1, name: \"sucursal 1\", cuil: \"122555555\" },\r\n    { id: 2, name: \"sucursal 2\", cuil: \"23370432896\" },\r\n    { id: 3, name: \"sucursal 3\", cuil: \"1212313213212\" },\r\n    { id: 4, name: \"sucursal 4\", cuil: \"55556568778\" },\r\n  ];\r\n\r\n  console.log(props)\r\n\r\n  //Se almacena la cantidad de compañias\r\n  //const [company, setCompany] = useState(props.cantCompanies);\r\n  //contador para mostrar dinamicamente el numero de compañia\r\n  //const [cont, setContador] = useState(1);\r\n  // state donde se almacena los datos de la compañia\r\n  const [data, setData] = useState(sucursal);\r\n  const [modalEliminar, setModalEliminar] = useState(false);\r\n  const [selectsuc, setSucSelect] = useState({\r\n    id: \"\",\r\n    name: \"\",\r\n    cuil: \"\",\r\n  });\r\n\r\n  const selectSucursal = (elemento) => {\r\n    setSucSelect(elemento);\r\n    setModalEliminar(true);\r\n  };\r\n\r\n  const eliminar = () => {\r\n    setData(data.filter((elemento) => elemento.id !== selectsuc.id));\r\n    setModalEliminar(false);\r\n  };\r\n\r\n  //Funcion que renderiza el componente visual jsx\r\n  return (\r\n    <LayoutSucursal>\r\n      <Container>\r\n        <Row>\r\n          <Col lg=\"6\" md=\"3\" xs=\"10\">\r\n            <Logo />\r\n          </Col>\r\n        </Row>\r\n        <Card id=\"card\" body style={{ marginTop: 50 }}>\r\n          <CardHeader className=\"bg-dark\">\r\n            <Row card>\r\n              <h5 className=\"text-white ml-2\">Manage Sucursales</h5>\r\n              <Col className=\"row justify-content-end\">\r\n                <Link to=\"/createsucursal\">\r\n                  <Button color=\"secondary\" size=\"md\">\r\n                    <i className=\"mr-1 mt-1\">\r\n                      <BsPlusCircle />\r\n                    </i>\r\n                    <span className=\"align-middle\">Add New Sucursal</span>\r\n                  </Button>\r\n                </Link>\r\n              </Col>\r\n            </Row>\r\n          </CardHeader>\r\n          <Table responsive className=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th className=\"text-center\">ID</th>\r\n                <th className=\"text-center\">Name</th>\r\n                <th className=\"text-center\">Cuil o Cuit</th>\r\n                <th className=\"text-center\">Acciones</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.map((elemento) => (\r\n                <tr>\r\n                  <td className=\"text-center\">{elemento.id}</td>\r\n                  <td className=\"text-center\">{elemento.name}</td>\r\n                  <td className=\"text-center\">{elemento.cuil}</td>\r\n                  <td className=\"text-center\">\r\n                    <Button color=\"primary\" size=\"sm\">\r\n                      <i className=\"mr-1 mt-1\">\r\n                        <MdModeEdit />\r\n                      </i>\r\n                      <span className=\"align-middle\">Editar</span>\r\n                    </Button>{\" \"}\r\n                    {\"   \"}\r\n                    <Button\r\n                      color=\"danger\"\r\n                      size=\"sm\"\r\n                      onClick={() => selectSucursal(elemento)}\r\n                    >\r\n                      <i className=\"mr-1 mt-1\">\r\n                        <AiTwotoneDelete />\r\n                      </i>\r\n                      <span className=\"align-middle\">Eliminar</span>\r\n                    </Button>{\" \"}\r\n                    {\"   \"}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Row className=\"row justify-content-end\" style={{ marginTop: 10 }}>\r\n          <Col md={2}>\r\n            <Link to=\"/dashboard\">\r\n              <Button color=\"primary\" type=\"submit\" active>\r\n                Finalizar\r\n              </Button>\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n        <br/>\r\n        </Card>\r\n        <br/>\r\n        <br/>\r\n\r\n\r\n        <Modal isOpen={modalEliminar}>\r\n          <ModalBody>\r\n            Estás Seguro que deseas eliminar la sucursal{\" \"}\r\n            {selectsuc && selectsuc.name}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <button className=\"btn btn-danger\" onClick={() => eliminar()}>\r\n              Yes\r\n            </button>\r\n            <button\r\n              className=\"btn btn-secondary\"\r\n              onClick={() => setModalEliminar(false)}\r\n            >\r\n              No\r\n            </button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </Container>\r\n    </LayoutSucursal>\r\n  );\r\n};\r\nexport default RegisterSucursalContainer;\r\n","import React, {useState} from 'react'\r\n//importacion de la libreria\r\n//import { Link } from \"react-router-dom\";\r\nimport {\r\n  FormGroup,\r\n  Button,\r\n  Input,\r\n  Row,\r\n  Container,\r\n  Col,\r\n  Label,\r\n  Card,\r\n  Form,\r\n} from \"reactstrap\"; //importar elementos\r\n//import \"../RegisterHeadCompany/index.css\"; //importar css\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from 'axios'\r\nimport Logo from \"../../WizardComponents/base/logo\";\r\nimport \"./index.css\"\r\n\r\nconst FormHeadCompany = (props) => {\r\n  //clase 'Nombre' extends React.component\r\n  const { register, trigger, handleSubmit, errors } = useForm();\r\n\r\n  const onSubmit = (data, e) => {\r\n    e.preventDefault();\r\n    \r\n    axios.post(\"http://localhost:3000/api/registerheadhouse\", data)\r\n    .then((res) => \"Se cargo en la base de datos una nueva compañia matriz\")\r\n    .catch((err) => console.log(err));\r\n    window.location.href = '/registercompany';\r\n  };\r\n\r\n  const [input, setInput] = useState({\r\n    value: false,\r\n  });\r\n\r\n  // const of countries\r\n  const countries = [\r\n    \"Argentina\",\r\n    \"Australia\",\r\n    \"Bolivia\",\r\n    \"Canada\",\r\n    \"Chile\",\r\n    \"Colombia\",\r\n    \"Ecuador\",\r\n    \"Guyana\",\r\n    \"New Zealand\",\r\n    \"Paraguay\",\r\n    \"Peru\",\r\n    \"Surinam\",\r\n    \"USA\",\r\n    \"Uruguay\",\r\n    \"Venezuela\",\r\n  ];\r\n\r\n  const inputChange = async (event) => {\r\n    let value = \"\";\r\n    let inputvalue = event.target.value;\r\n    let length = inputvalue.length;\r\n    let name = event.target.name;\r\n    let noerror = await trigger(name);\r\n    \r\n    if (length > 0 && noerror) {\r\n      value = errors?.name ? false : true;\r\n    } else {\r\n      value = false;\r\n    }\r\n    setInput({\r\n      ...input,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  //Funcion que renderiza el componente visual jsx\r\n  return (\r\n    <Container fluid >\r\n      <Row>\r\n        <Col lg=\"4\" md=\"4\" xs=\"10\">\r\n          <Logo />\r\n        </Col>\r\n        <Col lg=\"8\" xs=\"10\">\r\n          <h3 className=\"mt-5 text\" style={{ marginBottom: 30}}>\r\n            Ingrese datos de la Compañia Matriz\r\n          </h3>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col lg=\"12\">\r\n        <Card id=\"card-user\">\r\n          <Form onSubmit={handleSubmit(onSubmit)} id=\"card-user\" /*body*/>\r\n              <br/>\r\n              <h6 className=\"text\"  >Datos de la Compañia Matriz</h6>\r\n              <Row form>\r\n                <Col md={6}>\r\n                <span className=\"text-danger font-weight-bold\">*</span>{' '}\r\n                  <Label for=\"nameHeadCompany\">\r\n                    Nombre de la Compañia Matriz\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"nameHeadCompany\"\r\n                    id=\"nameHeadCompany\"\r\n                    placeholder=\"ingrese el nombre de la compañia matriz\"\r\n                    valid={input.nameHeadCompany}\r\n                    onChange={inputChange}\r\n                    innerRef={register({\r\n                      required: {\r\n                        value: true,\r\n                        message: \"Compañia Matriz es requerido\",\r\n                      },\r\n                    })}\r\n                  />\r\n                  <span className=\"text-danger span d-block mb-2\">\r\n                    {errors?.nameHeadCompany?.message}\r\n                  </span>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                  <span className=\"text-danger font-weight-bold\">*</span>{' '}\r\n                    <Label for=\"razonsocial\">Razon Social</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"razonsocial\"\r\n                      id=\"razonsocial\"\r\n                      valid={input.razonsocial}\r\n                      onChange={inputChange}\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Razon Social es requerido\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.razonsocial?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <span className=\"text-danger font-weight-bold\">*</span>{' '}\r\n                    <Label for=\"Cuil\">CUIL o CUIT</Label>\r\n                    <Input\r\n                      //type=\"number\"\r\n                      name=\"Cuil\"\r\n                      id=\"Cuil\"\r\n                      valid={input.Cuil}\r\n                      onChange={inputChange}\r\n                      placeholder=\"Ejemplo XX12345678X\"\r\n                      maxLength=\"11\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Cuil o Cuit es requerido\",\r\n                        },\r\n                        maxLength: {\r\n                          value: 11,\r\n                          message: \"No más de 11 carácteres!\",\r\n                        },\r\n                        minLength: {\r\n                          value: 11,\r\n                          message: \"No menos de 11 carácteres!\",\r\n                        },\r\n                        pattern: {\r\n                          value: /^[0-9]{11}$/i,\r\n                          message: \"Solo caracteres numéricos\",\r\n                        }\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.cuil?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                  <span className=\"text-danger font-weight-bold\">*</span>{' '}\r\n                    <Label for=\"pais\">Pais</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"pais\"\r\n                      id=\"pais\"\r\n                      valid={input.pais}\r\n                      onChange={inputChange}\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: false,\r\n                        },\r\n                      })}\r\n                      onChange={inputChange}\r\n                    >\r\n                      {/* Function to insert the countries of the array like items in dropdown menu */}\r\n                      {countries.map((country) => (\r\n                        <option key={country} value={country}>\r\n                          {country}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                  <span className=\"text-danger font-weight-bold\">*</span>{' '}\r\n                    <Label for=\"email\">Email</Label>\r\n                    <Input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      id=\"email\"\r\n                      valid={input.email}\r\n                      onChange={inputChange}\r\n                      placeholder=\"Ingrese su email\"\r\n                      innerRef={register({\r\n                        required: \"Email es requerido\",\r\n                        pattern: {\r\n                          value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                          message: \"invalid email address\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.email?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <Row form>\r\n                    <Col md={3}>\r\n                      <FormGroup>\r\n                      <span className=\"text-danger font-weight-bold\">*</span>{' '}\r\n                        <Label for=\"codPais\">Cod Pais</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"codPais\"\r\n                          id=\"codPais\"\r\n                          valid={input.codPais}\r\n                          onChange={inputChange}\r\n                          placeholder=\"+54\"\r\n                          innerRef={register({\r\n                            required: {\r\n                              value: true,\r\n                              message: \"Codigo de Pais es requerido\",\r\n                            },\r\n                            maxLength: {\r\n                              value: 5,\r\n                              message: \"No más de 5 carácteres!\",\r\n                            },\r\n                            minLength: {\r\n                              value: 3,\r\n                              message: \"No menos de 3 carácteres!\",\r\n                            },\r\n                          })}\r\n                        />\r\n                        <span className=\"text-danger span d-block mb-2\">\r\n                          {errors?.codPais?.message}\r\n                        </span>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                      <FormGroup>\r\n                      <span className=\"text-danger font-weight-bold\">*</span>{' '}\r\n                        <Label for=\"codArea\">Cod Area</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"codArea\"\r\n                          id=\"codArea\"\r\n                          valid={input.codArea}\r\n                          onChange={inputChange}\r\n                          innerRef={register({\r\n                            required: {\r\n                              value: true,\r\n                              message: \"Codigo de Area es requerido\",\r\n                            },\r\n                            maxLength: {\r\n                              value: 6,\r\n                              message: \"No más de 6 numeros!\",\r\n                            },\r\n                            minLength: {\r\n                              value: 2,\r\n                              message: \"No menos de 2 numeros!\",\r\n                            },\r\n                          })}\r\n                        />\r\n                        <span className=\"text-danger span d-block mb-2\">\r\n                          {errors?.codArea?.message}\r\n                        </span>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                      <FormGroup>\r\n                      <span className=\"text-danger font-weight-bold\">*</span>{' '}\r\n                        <Label for=\"nrotel\">Nro. Telefono</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"nrotel\"\r\n                          id=\"nrotel\"\r\n                          valid={input.nrotel}\r\n                          onChange={inputChange}\r\n                          innerRef={register({\r\n                            required: {\r\n                              value: true,\r\n                              message: \"Numero de Telefono es requerido\",\r\n                            },\r\n                            maxLength: {\r\n                              value: 11,\r\n                              message: \"No más de 11 numeros!\",\r\n                            },\r\n                            minLength: {\r\n                              value: 4,\r\n                              message: \"No menos de 4 numeros!\",\r\n                            },\r\n                          })}\r\n                        />\r\n                        <span className=\"text-danger span d-block mb-2\">\r\n                          {errors?.nrotel?.message}\r\n                        </span>\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                  \r\n                    <Label for=\"nroFax\">Fax</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"nroFax\"\r\n                      id=\"nroFax\"\r\n                      valid={input.nroFax}\r\n                      onChange={inputChange}\r\n                      placeholder=\"Ingrese el nro de fax de la compañia\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: false,\r\n                        },\r\n                      })}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <br/>\r\n              <h6 className=\"text\">Datos Bancarios</h6>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                  <span className=\"text-danger font-weight-bold\">*</span>{' '}\r\n                    <Label for=\"nameBank\">Nombre del Banco</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"nameBank\"\r\n                      id=\"nameBank\"\r\n                      valid={input.nameBank}\r\n                      onChange={inputChange}\r\n                      placeholder=\"Ingrese el nombre del banco\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Nombre del banco es requerido\",\r\n                        },\r\n                        maxLength: {\r\n                          value: 100,\r\n                          message: \"No más de 100 caracteres!\",\r\n                        },\r\n                        minLength: {\r\n                          value: 3,\r\n                          message: \"No menos de 3 caracteres!\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.nameBank?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                  <span className=\"text-danger font-weight-bold\">*</span>{' '}\r\n                    <Label for=\"cuentaBancaria\">\r\n                      Numero de Cuenta Bancaria\r\n                    </Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"cuentaBancaria\"\r\n                      id=\"cuentaBancaria\"\r\n                      valid={input.cuentaBancaria}\r\n                      onChange={inputChange}\r\n                      placeholder=\"Ingrese su nro de cuenta bancaria\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Numero de cuenta bancaria es requerido\",\r\n                        },\r\n                        maxLength: {\r\n                          value: 15,\r\n                          message: \"No más de 15 numeros!\",\r\n                        },\r\n                        minLength: {\r\n                          value: 12,\r\n                          message: \"No menos de 12 numeros!\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.cuentaBancaria?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                  <span className=\"text-danger font-weight-bold\">*</span>{' '}\r\n                    <Label for=\"cbu\">CBU</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"cbu\"\r\n                      id=\"cbu\"\r\n                      valid={input.cbu}\r\n                      onChange={inputChange}\r\n                      placeholder=\"Ingrese el nro de CBU\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Numero de CBU es requerido\",\r\n                        },\r\n                        maxLength: {\r\n                          value: 22,\r\n                          message: \"No más de 22 numeros\",\r\n                        },\r\n                        minLength: {\r\n                          value: 22,\r\n                          message: \"No menos de 22 numeros\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.cbu?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"alias\">Alias</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"alias\"\r\n                      id=\"alias\"\r\n                      valid={input.alias}\r\n                      onChange={inputChange}\r\n                      placeholder=\"Ingrese su alias\"\r\n                      innerRef={register({\r\n                        required: {\r\n                          value: false,\r\n                        },\r\n                        maxLength: {\r\n                          value: 20,\r\n                          message: \"No más de 20 caracteres!\",\r\n                        },\r\n                        minLength: {\r\n                          value: 6,\r\n                          message: \"No menos de 6 caracteres!\",\r\n                        },\r\n                      })}\r\n                    />\r\n                    <span className=\"text-danger span d-block mb-2\">\r\n                      {errors?.alias?.message}\r\n                    </span>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <br/>\r\n              <Row\r\n                className=\"row justify-content-end\"\r\n                style={{ marginTop: 10 }}\r\n              >\r\n                <Col md={2}>\r\n                  {/*<Link to=\"/NumberCompanies\">*/}\r\n                  <Button color=\"primary\" type=\"Submit\" active>\r\n                    Continuar\r\n                  </Button>\r\n                  {/*</Link>*/}\r\n                </Col>\r\n              </Row>\r\n            <br/>\r\n            </Form>\r\n          </Card>\r\n          <br/>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormHeadCompany;\r\n\r\n","import React from 'react'\r\n //importacion de la libreria\r\nimport FormHeadCompany from '../../../components/RegisterCompaniesComponents/formulario/formHeadCompany'\r\nimport RegisterCompanyLayout from '../../Layouts/RegisterCompanyLayout/index';\r\n\r\nconst RegisterHeadCompany = (props) => {\r\n  //clase 'Nombre' extends React.component\r\n  \r\n\r\n  //Funcion que renderiza el componente visual jsx\r\n  return (\r\n      <RegisterCompanyLayout>\r\n        <FormHeadCompany />\r\n      </RegisterCompanyLayout>\r\n  );\r\n};\r\n\r\nexport default RegisterHeadCompany;\r\n\r\n","import React, { useState} from \"react\"; //importacion de la libreria\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Card,\r\n  Button,\r\n  Table,\r\n  CardHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  Modal,\r\n} from \"reactstrap\"; //importar elementos\r\n//import Formulario from \"../formulario/formulario\";\r\nimport {Link } from \"react-router-dom\";\r\nimport Logo from '../../../components/WizardComponents/base/logo';\r\nimport { BsPlusCircle } from \"react-icons/bs\";\r\nimport { AiTwotoneDelete } from \"react-icons/ai\";\r\nimport { MdModeEdit } from \"react-icons/md\";\r\nimport LayoutSucursal from '../../Layouts/RegisterCompanyLayout/layoutsucursal';\r\nimport \"./index.css\";\r\n//import RegisterSucursalContainer from '../RegisterSucursalContainer/RegisterSucursalContanier'\r\n\r\nconst RegisterCompanyContainer = (props) => {\r\n  const companies = [\r\n    { id: 1, name: \"fama\", cuil: \"122555555\", pais: \"argentina\" },\r\n    { id: 2, name: \"campany 2\", cuil: \"23370432896\", pais: \"paraguay\" },\r\n    { id: 3, name: \"company 3\", cuil: \"1212313213212\", pais: \"urugauay\" },\r\n    { id: 4, name: \"comapny 4\", cuil: \"55556568778\", pais: \"canada\" },\r\n    { id: 4, name: \"comapny 4\", cuil: \"55556568778\", pais: \"canada\" },\r\n    { id: 4, name: \"comapny 4\", cuil: \"55556568778\", pais: \"canada\" },\r\n    { id: 4, name: \"comapny 4\", cuil: \"55556568778\", pais: \"canada\" },\r\n\r\n  ];\r\n  //Se almacena la cantidad de compañias\r\n  //const [company, setCompany] = useState(props.cantCompanies);\r\n  //contador para mostrar dinamicamente el numero de compañia\r\n  //const [cont, setContador] = useState(1);\r\n  // state donde se almacena los datos de la compañia\r\n  const [data, setData] = useState(companies);\r\n  const [modalEliminar, setModalEliminar] = useState(false);\r\n  const [selectcompany, setCompSelect] = useState({\r\n    id: \"\",\r\n    name: \"\",\r\n    cuil: \"\",\r\n    pais: \"\",\r\n  });\r\n\r\n  const selectComp = (elemento) => {\r\n    setCompSelect(elemento);\r\n    setModalEliminar(true);\r\n  };\r\n\r\n  const eliminar = () => {\r\n    setData(data.filter((elemento) => elemento.id !== selectcompany.id));\r\n    setModalEliminar(false);\r\n  };\r\n\r\n  const enviarIdSuc = (elementoid) => {\r\n    console.log(elementoid)\r\n    \r\n    // ENVIAR ID COMPANY A REGISTER SUCURSAL\r\n    // return(\r\n    // <RegisterSucursalContainer id={elementoid}></RegisterSucursalContainer>\r\n    // ) \r\n  \r\n  }\r\n\r\n\r\n\r\n  //Funcion que renderiza el componente visual jsx\r\n  return (\r\n    <LayoutSucursal >\r\n      <Container >\r\n      <Row>\r\n        <Col lg=\"6\" md=\"3\" xs=\"10\">\r\n          <Logo />\r\n        </Col>\r\n      </Row>\r\n      <Card id=\"card\" body style={{ marginTop: 50 }}>\r\n        <CardHeader className=\"bg-dark\">\r\n          <Row card>\r\n            <h5 className=\"text-white ml-2\">Manage Companies</h5>\r\n            <Col className=\"row justify-content-end\">\r\n              <Link to=\"/createcompany\">\r\n                <Button color=\"secondary\" size=\"md\">\r\n                <i className=\"mr-1\"><BsPlusCircle/></i>\r\n                <span className=\"align-middle\">Add New Company</span>\r\n                </Button>\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        \r\n        <Table responsive className=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"text-center\">ID</th>\r\n              <th className=\"text-center\">Name</th>\r\n              <th className=\"text-center\">Cuil o Cuit</th>\r\n              <th className=\"text-center\">Pais</th>\r\n              <th className=\"text-center\">Acciones</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map((elemento) => (\r\n              <tr>\r\n                <td className=\"text-center\">{elemento.id}</td>\r\n                <td className=\"text-center\">{elemento.name}</td>\r\n                <td className=\"text-center\">{elemento.cuil}</td>\r\n                <td className=\"text-center\">{elemento.pais}</td>\r\n                <td className=\"text-center\">\r\n                  <Button color=\"primary\" size=\"sm\">\r\n                    <i className=\"mr-1\">< MdModeEdit/></i>\r\n                    <span className=\"align-middle\">Editar</span>\r\n                  </Button>{\" \"}\r\n                  {\"   \"}\r\n                  <Button\r\n                    color=\"danger\"\r\n                    size=\"sm\"\r\n                    \r\n                    onClick={() => selectComp(elemento)}\r\n                  >\r\n                  <i className=\"mr-1\"><AiTwotoneDelete /></i>\r\n                  <span className=\"align-middle\">Eliminar</span>\r\n                  </Button>{\" \"}\r\n                  {\"   \"}\r\n                  <Link to=\"/registersucursal\">\r\n                    <Button color=\"info\" size=\"sm\" onClick={()=>enviarIdSuc(elemento.id)}>\r\n                      <i className=\"mr-1\"><BsPlusCircle/></i>\r\n                      <span className=\"align-middle\">Add Sucursal</span>\r\n                    </Button>{\" \"}\r\n                    {\"   \"}\r\n                    \r\n                  </Link>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n        \r\n        <Row className=\"row justify-content-end\" style={{ marginTop: 10 }}>\r\n            <Col md={2} >\r\n              <Link to=\"/registersucursal\">\r\n                <Button  color=\"primary\" type=\"submit\" active>\r\n                  Continuar\r\n                </Button>\r\n              </Link>\r\n            </Col>\r\n          \r\n        </Row>\r\n        <br/>\r\n      </Card>\r\n\r\n\r\n      <br/>\r\n      <br/>\r\n\r\n\r\n      \r\n      <Modal isOpen={modalEliminar}>\r\n        <ModalBody>\r\n          Estás Seguro que deseas eliminar la compañia{\" \"}\r\n          {selectcompany && selectcompany.name}\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <button className=\"btn btn-danger\" onClick={() => eliminar()}>\r\n            Yes\r\n          </button>\r\n          <button\r\n            className=\"btn btn-secondary\"\r\n            onClick={() => setModalEliminar(false)}\r\n          >\r\n            No\r\n          </button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </Container>\r\n    </LayoutSucursal>\r\n\r\n  );\r\n};\r\nexport default RegisterCompanyContainer;\r\n","import React, {useState} from 'react';\r\nimport {\r\n  FormGroup,\r\n  Input,\r\n  Row,\r\n  Container,\r\n  Col,\r\n  Label,\r\n  Card,\r\n  Form,\r\n  Button,\r\n} from \"reactstrap\"; //importar elementos\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from 'axios'\r\nimport Logo from \"../../WizardComponents/base/logo\";\r\n\r\n\r\nconst FormTest = (props) => {\r\n    const { register, trigger, handleSubmit, errors } = useForm();\r\n        \r\n          \r\n          \r\n          \r\n    const onSubmit = (data,e) => {\r\n        console.log(data)\r\n      e.preventDefault();\r\n      axios.post(\"http://localhost:3000/api/headcompany/company/sucursal/savesucursal\", data)\r\n      .then((res) => \"Se cargo en la base de datos una nueva compañia\")\r\n      .catch((err) => console.log(err));\r\n    };\r\n  \r\n    \r\n    const [input, setInput] = useState({\r\n      company:'',\r\n      razonsocial:'',\r\n      cuil:'',\r\n      \r\n    });\r\n  \r\n    const inputChange =async (event) => {\r\n      let value = \"\";\r\n      let inputvalue = event.target.value;\r\n      let length = inputvalue.length;\r\n      let name = event.target.name\r\n      let noerror= await trigger(name)\r\n      console.log(noerror)\r\n      if ((length > 0) && (noerror)) {\r\n        value = errors?.name? false : true;\r\n      } else {\r\n        value = false;\r\n      }\r\n      setInput({\r\n        ...input,\r\n        [name]: value,\r\n      });\r\n    };\r\n      \r\n          //Funcion que renderiza el componente visual jsx\r\n          return (\r\n            <Container fluid>\r\n              <Row>\r\n                <Col lg=\"4\" md=\"4\" xs=\"10\">\r\n                  <Logo />\r\n                </Col>\r\n                <Col lg=\"8\" xs=\"10\">\r\n                  <h3 className=\"mt-5 text\" style={{ marginBottom: 30,color: \"rgb(0, 55, 100)\"}}>\r\n                    Ingrese datos de la Sucursal {props.cantSuc}{\" \"}\r\n                  </h3>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"12\">\r\n                  <Card id=\"card-user\">\r\n                    <Form onSubmit={handleSubmit(onSubmit)} id=\"card-user\">\r\n                      <h6 className=\"text\">\r\n                        Datos de la Sucursal {props.cantSuc}{\" \"}\r\n                      </h6>\r\n                      <Row form>\r\n                        <Col md={6}>\r\n                          <Label for=\"Sucursal\">Nombre de la Sucursal</Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"sucursal\"\r\n                            id=\"sucursal\"\r\n                            placeholder=\"ingrese el nombre de la sucursal\"\r\n                            valid={input.sucursal}\r\n                            onChange={inputChange}\r\n                            innerRef={register({\r\n                              required: {\r\n                                value: true,\r\n                                message: \"Nombre de sucursal es requerido\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          <span className=\"text-danger span d-block mb-2\">\r\n                            {errors?.sucursal?.message}\r\n                          </span>\r\n                        </Col>\r\n                        </Row>\r\n                        <Button type=\"submit\">\r\n                            save\r\n                        </Button>\r\n                        </Form>\r\n                        </Card>\r\n                        </Col>\r\n                        </Row>\r\n                        </Container>\r\n                    \r\n\r\n    );\r\n}\r\n \r\nexport default FormTest;","import React, { useState } from \"react\";\r\nimport { Route, BrowserRouter } from \"react-router-dom\";\r\nimport Login from \"./views/WizardScreens/Login\";\r\nimport Welcomescreen from \"./views/WizardScreens/Welcomescreen/index\";\r\nimport Product from \"./views/WizardScreens/Product/index\";\r\nimport Registeruser from \"./views/WizardScreens/Registeruser/index\";\r\nimport SelectCountry from \"./views/WizardScreens/SelectCountry\";\r\nimport VerificationCode from \"./views/WizardScreens/VerificationCode\";\r\nimport LoginUsers from \"./views/LoginUsers/Login\";\r\nimport SearchProducts from \"./views/CatalogScreens/SearchProducts\";\r\nimport ProductView from \"./views/CatalogScreens/ProductView\";\r\nimport NewProduct from \"./views/CatalogScreens/NewProduct\";\r\nimport EditProduct from \"./views/CatalogScreens/EditProduct/index\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport { messages } from \"./messages\";\r\n// import de Register companies\r\nimport Dashboard from \"./views/RegisterCompanyScreen/DashboardContainer\"; //this components works\r\nimport CreateCompanyContainer from \"./views/RegisterCompanyScreen/CreateCompanyContaniener\"; //this components works\r\nimport CreateSucursalContainer from \"./views/RegisterCompanyScreen/CreateSucursalContainer\"; //this components works\r\nimport RegisterSucursalContanier from \"./views/RegisterCompanyScreen/RegisterSucursalContainer/RegisterSucursalContanier\"; //this components works\r\nimport RegisterHeadCompany from \"./views/RegisterCompanyScreen/RegisterHeadCompanyContainer/RegisterHeadCompany\"; //this components works\r\nimport RegisterCompanyContainer from \"./views/RegisterCompanyScreen/RegisterCompanyContainer/RegisterCompanyContainer\";\r\nimport FormTest from \"./components/CatologComponents/test/formtest\";\r\n//import { propTypes } from \"react-bootstrap/esm/Image\";\r\n\r\nconst App = (props) => {\r\n  const [user, setDatos] = useState({\r\n    product: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    country: \"\",\r\n    passwordExpired: false,\r\n  });\r\n\r\n  const [language, setLanguage] = useState(\"en\");\r\n\r\n  const [code, setCode] = useState({\r\n    codeVerification: null,\r\n    codeTime: null,\r\n  });\r\n\r\n  const handleChange = (dato) => {\r\n    setDatos({\r\n      ...user,\r\n      [dato.name]: dato.value,\r\n    });\r\n  };\r\n  const handleChangeLanguage = (lang) => {\r\n    setLanguage(lang);\r\n  };\r\n\r\n  const handleChangeCodeandTime = (code, time) => {\r\n    setCode({\r\n      codeVerification: code,\r\n      codeTime: time,\r\n    });\r\n  };\r\n\r\n  const handleChangeProduct = (dato) => {\r\n    setDatos({\r\n      ...user,\r\n      product: dato,\r\n    });\r\n  };\r\n\r\n  const handleChangePassword = (dato) => {\r\n    setDatos({\r\n      ...user,\r\n      password: dato,\r\n    });\r\n  };\r\n  const handleChangePasswordExpired = () => {\r\n    setDatos({\r\n      ...user,\r\n      passwordExpired: true,\r\n    });\r\n  };\r\n  const handleChangeCountry = (dato) => {\r\n    setDatos({\r\n      ...user,\r\n      country: dato,\r\n    });\r\n  };\r\n  \r\n  return (\r\n    <IntlProvider locale={language} messages={messages[language]}>\r\n      <BrowserRouter>\r\n        <Route path=\"/\" exact>\r\n          <Welcomescreen changeLanguage={handleChangeLanguage} />\r\n        </Route>\r\n        <Route path=\"/product\">\r\n          <Product changeProduct={handleChangeProduct} />\r\n        </Route>\r\n        <Route path=\"/user\">\r\n          <Registeruser\r\n            changeEmail={handleChange}\r\n            changeCodeTime={handleChangeCodeandTime}\r\n            userInfo={user}\r\n          />\r\n        </Route>\r\n        <Route path=\"/verificationcode\">\r\n          <VerificationCode codeVerification={code} userInfo={user} />\r\n        </Route>\r\n        <Route exact path=\"/login\">\r\n          <Login changePassword={handleChangePassword} userInfo={user} />\r\n        </Route>\r\n        <Route path=\"/selectcountry\">\r\n          <SelectCountry\r\n            handleChangeCountry={handleChangeCountry}\r\n            userInfo={user}\r\n          />\r\n        </Route>\r\n        <Route path=\"/LoginUsers/Login\">\r\n          <LoginUsers\r\n            changeLanguage={handleChangeLanguage}\r\n            handleChange={handleChange}\r\n            changePassword={handleChangePassword}\r\n            handleChangePasswordExpired={handleChangePasswordExpired}\r\n            user={user}\r\n          />\r\n        </Route>\r\n        {/*Routes of Register Companies*/}\r\n        <Route path=\"/dashboard\" component={Dashboard} />\r\n        <Route path=\"/createcompany\" component={CreateCompanyContainer} />\r\n        <Route path=\"/createsucursal\" component={CreateSucursalContainer} />\r\n        <Route path=\"/registersucursal\" component={RegisterSucursalContanier} />\r\n        <Route path=\"/registerheadcompany\" component={RegisterHeadCompany} />\r\n        <Route path=\"/registercompany\" component={RegisterCompanyContainer} />\r\n        <Route path=\"/registersucursal\" component={RegisterSucursalContanier} />\r\n\r\n        {/*Routes of Catlog*/}\r\n        <Route path=\"/catalog/productview\">\r\n          <ProductView />\r\n        </Route>\r\n        <Route path=\"/catalog/searchproducts\">\r\n          <SearchProducts />\r\n        </Route>\r\n        <Route path=\"/catalog/newproduct\">\r\n          <NewProduct />\r\n        </Route>\r\n        <Route path=\"/catalog/editproduct\">\r\n          <EditProduct />\r\n        </Route>\r\n        <Route path=\"/test\" component={FormTest} />\r\n      </BrowserRouter>\r\n    </IntlProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n    </React.StrictMode>,\r\n  document.getElementById('root')\r\n  \r\n);\r\n\r\n"],"sourceRoot":""}